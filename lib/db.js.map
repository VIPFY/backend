{"version":3,"sources":["../src/db.js"],"names":["module","exports","data","users","name","address","finance","random","commerce","company","lorem","image","phone","internet","randomNumber","number","payingOptions","payingOption","nth","gender","selectGender","recoveryOptions","recoveryOption","fillArray","start","end","callback","times","generateAddress","country","countryCode","street","streetName","zip","zipCode","city","orderNumber","i","push","id","firstName","lastName","referral","boolean","position","jobTitle","email","title","livingAddress","payingAddress","deliveryAddress","normalTime","from","to","type","iban","limit","amount","birthday","day","month","year","sex","profilePicture","nationality","companyName","companyLogo","business","companyLegalform","companySuffix","companyAddress","companyPayingAddress","companyDeliveryAddress","companyPayingOption","yearsInCompany","jobArea","key","word","value","text","phoneNumber","domainName","bsAdjective","site","domainWord","link","department","productName"],"mappings":"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","file":"db.js","sourcesContent":["import faker from 'faker';\nimport _ from 'lodash';\n\nmodule.exports = () => {\n  const data = { users: [] }\n  const { name, address, finance, random, commerce, company, lorem, image, phone, internet } = faker;\n  const randomNumber = faker.random.number();\n\n  const payingOptions = ['VISA', 'MASTERCARD', 'PAYPAL', 'BANK']\n  const payingOption = () => _.nth(payingOptions, _.random(0, 3));\n\n  const gender = ['male', 'female', 'n/a'];\n  const selectGender = () => _.nth(gender, _.random(0, 2));\n\n  const recoveryOptions = ['email', 'phone', 'passphrase'];\n  const recoveryOption = () => _.nth(recoveryOptions, _.random(0, 2));\n\n  const fillArray = (start, end, callback) => (\n    _.times(_.random(start, end), callback)\n  );\n\n  const generateAddress = (start, end) => (\n    _.times(_.random(start, end), () => {\n      return {\n        country: address.countryCode(),\n        street: address.streetName(),\n        number: randomNumber,\n        zip: address.zipCode(),\n        city: address.city(),\n        orderNumber: randomNumber\n      }\n    })\n  );\n\n  for (let i = 1; i < _.random(40, 50); i++) {\n    data.users.push({\n      id: `${i}`,\n      firstName: name.firstName(),\n      lastName: name.lastName(),\n      referral: random.boolean(),\n      position: name.jobTitle(),\n      email: faker.internet.email(),\n      title: name.title(),\n      livingAddress: generateAddress(1, 2),\n      payingAddress: generateAddress(1, 3),\n      deliveryAddress: fillArray(1, 3, () => {\n        return {\n          country: address.countryCode(),\n          street: address.streetName(),\n          number: randomNumber,\n          zip: address.zipCode(),\n          city: address.city(),\n          orderNumber: randomNumber,\n          normalTime: {\n            from: `${_.random(8, 12)}:${_.random(1, 5)}0`,\n            to: `${_.random(13, 19)}:${_.random(1, 5)}0`\n          }\n        }\n      }),\n      payingOption: fillArray(1, 5, () => {\n        return {\n          type: payingOption(),\n          number: finance.iban(),\n          name: `${name.firstName()} ${name.lastName()}`,\n          limit: finance.amount(),\n          orderNumber: randomNumber\n        }\n      }),\n      birthday: {\n        day: _.random(1, 28),\n        month: _.random(1, 12),\n        year: _.random(1950, 1994)\n      },\n      sex: selectGender(),\n      profilePicture: faker.image.image(),\n      nationality: fillArray(1, 2, () => address.country()),\n      companyName: company.companyName(),\n      companyLogo: image.business(),\n      companyLegalform: company.companySuffix(),\n      companyAddress: generateAddress(1, 5),\n      companyPayingAddress: generateAddress(1, 5),\n      companyDeliveryAddress: generateAddress(1, 5),\n      companyPayingOption: fillArray(1, 5, () => {\n        return {\n          type: payingOption(),\n          number: finance.iban(),\n          name: `${name.firstName()} ${name.lastName()}`,\n          limit: finance.amount(),\n          orderNumber: randomNumber\n        }\n      }),\n      yearsInCompany: _.random(1, 40),\n      position: fillArray(1, 5, () => name.title()),\n      department: fillArray(1, 5, () => name.jobArea()),\n      admin: random.boolean(),\n      salary: finance.amount(),\n      likes: fillArray(0, 10, () => {\n        return {\n          key: lorem.word(),\n          value: _.random(0, 500)\n        }\n      }),\n      dislikes: fillArray(0, 10, () => {\n        return {\n          key: lorem.word(),\n          value: _.random(0, 500)\n        }\n      }),\n      notifications: fillArray(0, 10, () => {\n        return {\n          type: lorem.word(),\n          text: lorem.text()\n        }\n      }),\n      phoneNumber: fillArray(1, 4, () => phone.phoneNumber()),\n      recoveryEmail: internet.email(),\n      websites: fillArray(0, 4, () => internet.domainName()),\n      languages: fillArray(1, 5, () => address.countryCode()),\n      // tollskills [],\n      certificates: fillArray(0, 5, () => company.bsAdjective()),\n      socialProfiles: fillArray(0, 4, () => {\n        return {\n          site: internet.domainWord(),\n          link: internet.domainName()\n        }\n      }),\n      accessGroups: fillArray(0, 5, () => commerce.department()),\n      permissions: fillArray(0, 15, () => {\n        return {\n          value: _.random(1, 4),\n          company: company.companyName()\n        }\n      }),\n      companyApps: fillArray(0, 20, () => commerce.productName()),\n      personalApps: fillArray(0, 20, () => commerce.productName()),\n      personalBillHistory: fillArray(0, 20, () => finance.amount()),\n      companybillhistory: fillArray(0, 20, () => finance.amount()),\n      recoveryOptionCompany: fillArray(0, 3, () => recoveryOption()),\n      recoveryOptionPersonal: fillArray(0, 3, () => recoveryOption())\n    })\n  }\n  return data\n}\n"]}