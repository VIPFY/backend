{"dependencies":[{"name":"crypto","loc":{"line":10,"column":23}},{"name":"./defaults","loc":{"line":12,"column":25}},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict'\n/**\n * Copyright (c) 2010-2017 Brian Carlson (brian.m.carlson@gmail.com)\n * All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * README.md file in the root directory of this source tree.\n */\n\nconst crypto = require('crypto')\n\nconst defaults = require('./defaults')\n\nfunction escapeElement (elementRepresentation) {\n  var escaped = elementRepresentation\n    .replace(/\\\\/g, '\\\\\\\\')\n    .replace(/\"/g, '\\\\\"')\n\n  return '\"' + escaped + '\"'\n}\n\n// convert a JS array to a postgres array literal\n// uses comma separator so won't work for types like box that use\n// a different array separator.\nfunction arrayString (val) {\n  var result = '{'\n  for (var i = 0; i < val.length; i++) {\n    if (i > 0) {\n      result = result + ','\n    }\n    if (val[i] === null || typeof val[i] === 'undefined') {\n      result = result + 'NULL'\n    } else if (Array.isArray(val[i])) {\n      result = result + arrayString(val[i])\n    } else if (val[i] instanceof Buffer) {\n      result += '\\\\\\\\x' + val[i].toString('hex')\n    } else {\n      result += escapeElement(prepareValue(val[i]))\n    }\n  }\n  result = result + '}'\n  return result\n}\n\n// converts values from javascript types\n// to their 'raw' counterparts for use as a postgres parameter\n// note: you can override this function to provide your own conversion mechanism\n// for complex types, etc...\nvar prepareValue = function (val, seen) {\n  if (val instanceof Buffer) {\n    return val\n  }\n  if (ArrayBuffer.isView(val)) {\n    var buf = Buffer.from(val.buffer, val.byteOffset, val.byteLength)\n    if (buf.length === val.byteLength) {\n      return buf\n    }\n    return buf.slice(val.byteOffset, val.byteOffset + val.byteLength) // Node.js v4 does not support those Buffer.from params\n  }\n  if (val instanceof Date) {\n    if (defaults.parseInputDatesAsUTC) {\n      return dateToStringUTC(val)\n    } else {\n      return dateToString(val)\n    }\n  }\n  if (Array.isArray(val)) {\n    return arrayString(val)\n  }\n  if (val === null || typeof val === 'undefined') {\n    return null\n  }\n  if (typeof val === 'object') {\n    return prepareObject(val, seen)\n  }\n  return val.toString()\n}\n\nfunction prepareObject (val, seen) {\n  if (val && typeof val.toPostgres === 'function') {\n    seen = seen || []\n    if (seen.indexOf(val) !== -1) {\n      throw new Error('circular reference detected while preparing \"' + val + '\" for query')\n    }\n    seen.push(val)\n\n    return prepareValue(val.toPostgres(prepareValue), seen)\n  }\n  return JSON.stringify(val)\n}\n\nfunction pad (number, digits) {\n  number = '' + number\n  while (number.length < digits) { number = '0' + number }\n  return number\n}\n\nfunction dateToString (date) {\n  var offset = -date.getTimezoneOffset()\n  var ret = pad(date.getFullYear(), 4) + '-' +\n    pad(date.getMonth() + 1, 2) + '-' +\n    pad(date.getDate(), 2) + 'T' +\n    pad(date.getHours(), 2) + ':' +\n    pad(date.getMinutes(), 2) + ':' +\n    pad(date.getSeconds(), 2) + '.' +\n    pad(date.getMilliseconds(), 3)\n\n  if (offset < 0) {\n    ret += '-'\n    offset *= -1\n  } else { ret += '+' }\n\n  return ret + pad(Math.floor(offset / 60), 2) + ':' + pad(offset % 60, 2)\n}\n\nfunction dateToStringUTC (date) {\n  var ret = pad(date.getUTCFullYear(), 4) + '-' +\n    pad(date.getUTCMonth() + 1, 2) + '-' +\n    pad(date.getUTCDate(), 2) + 'T' +\n    pad(date.getUTCHours(), 2) + ':' +\n    pad(date.getUTCMinutes(), 2) + ':' +\n    pad(date.getUTCSeconds(), 2) + '.' +\n    pad(date.getUTCMilliseconds(), 3)\n\n  return ret + '+00:00'\n}\n\nfunction normalizeQueryConfig (config, values, callback) {\n  // can take in strings or config objects\n  config = (typeof (config) === 'string') ? { text: config } : config\n  if (values) {\n    if (typeof values === 'function') {\n      config.callback = values\n    } else {\n      config.values = values\n    }\n  }\n  if (callback) {\n    config.callback = callback\n  }\n  return config\n}\n\nconst md5 = function (string) {\n  return crypto.createHash('md5').update(string, 'utf-8').digest('hex')\n}\n\n// See AuthenticationMD5Password at https://www.postgresql.org/docs/current/static/protocol-flow.html\nconst postgresMd5PasswordHash = function (user, password, salt) {\n  var inner = md5(password + user)\n  var outer = md5(Buffer.concat([Buffer.from(inner), salt]))\n  return 'md5' + outer\n}\n\nmodule.exports = {\n  prepareValue: function prepareValueWrapper (value) {\n    // this ensures that extra arguments do not get passed into prepareValue\n    // by accident, eg: from calling values.map(utils.prepareValue)\n    return prepareValue(value)\n  },\n  normalizeQueryConfig,\n  postgresMd5PasswordHash,\n  md5\n}\n","map":{"mappings":[{"source":"../node_modules/pg/lib/utils.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/pg/lib/utils.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}}],"sources":{"../node_modules/pg/lib/utils.js":"'use strict'\n/**\n * Copyright (c) 2010-2017 Brian Carlson (brian.m.carlson@gmail.com)\n * All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * README.md file in the root directory of this source tree.\n */\n\nconst crypto = require('crypto')\n\nconst defaults = require('./defaults')\n\nfunction escapeElement (elementRepresentation) {\n  var escaped = elementRepresentation\n    .replace(/\\\\/g, '\\\\\\\\')\n    .replace(/\"/g, '\\\\\"')\n\n  return '\"' + escaped + '\"'\n}\n\n// convert a JS array to a postgres array literal\n// uses comma separator so won't work for types like box that use\n// a different array separator.\nfunction arrayString (val) {\n  var result = '{'\n  for (var i = 0; i < val.length; i++) {\n    if (i > 0) {\n      result = result + ','\n    }\n    if (val[i] === null || typeof val[i] === 'undefined') {\n      result = result + 'NULL'\n    } else if (Array.isArray(val[i])) {\n      result = result + arrayString(val[i])\n    } else if (val[i] instanceof Buffer) {\n      result += '\\\\\\\\x' + val[i].toString('hex')\n    } else {\n      result += escapeElement(prepareValue(val[i]))\n    }\n  }\n  result = result + '}'\n  return result\n}\n\n// converts values from javascript types\n// to their 'raw' counterparts for use as a postgres parameter\n// note: you can override this function to provide your own conversion mechanism\n// for complex types, etc...\nvar prepareValue = function (val, seen) {\n  if (val instanceof Buffer) {\n    return val\n  }\n  if (ArrayBuffer.isView(val)) {\n    var buf = Buffer.from(val.buffer, val.byteOffset, val.byteLength)\n    if (buf.length === val.byteLength) {\n      return buf\n    }\n    return buf.slice(val.byteOffset, val.byteOffset + val.byteLength) // Node.js v4 does not support those Buffer.from params\n  }\n  if (val instanceof Date) {\n    if (defaults.parseInputDatesAsUTC) {\n      return dateToStringUTC(val)\n    } else {\n      return dateToString(val)\n    }\n  }\n  if (Array.isArray(val)) {\n    return arrayString(val)\n  }\n  if (val === null || typeof val === 'undefined') {\n    return null\n  }\n  if (typeof val === 'object') {\n    return prepareObject(val, seen)\n  }\n  return val.toString()\n}\n\nfunction prepareObject (val, seen) {\n  if (val && typeof val.toPostgres === 'function') {\n    seen = seen || []\n    if (seen.indexOf(val) !== -1) {\n      throw new Error('circular reference detected while preparing \"' + val + '\" for query')\n    }\n    seen.push(val)\n\n    return prepareValue(val.toPostgres(prepareValue), seen)\n  }\n  return JSON.stringify(val)\n}\n\nfunction pad (number, digits) {\n  number = '' + number\n  while (number.length < digits) { number = '0' + number }\n  return number\n}\n\nfunction dateToString (date) {\n  var offset = -date.getTimezoneOffset()\n  var ret = pad(date.getFullYear(), 4) + '-' +\n    pad(date.getMonth() + 1, 2) + '-' +\n    pad(date.getDate(), 2) + 'T' +\n    pad(date.getHours(), 2) + ':' +\n    pad(date.getMinutes(), 2) + ':' +\n    pad(date.getSeconds(), 2) + '.' +\n    pad(date.getMilliseconds(), 3)\n\n  if (offset < 0) {\n    ret += '-'\n    offset *= -1\n  } else { ret += '+' }\n\n  return ret + pad(Math.floor(offset / 60), 2) + ':' + pad(offset % 60, 2)\n}\n\nfunction dateToStringUTC (date) {\n  var ret = pad(date.getUTCFullYear(), 4) + '-' +\n    pad(date.getUTCMonth() + 1, 2) + '-' +\n    pad(date.getUTCDate(), 2) + 'T' +\n    pad(date.getUTCHours(), 2) + ':' +\n    pad(date.getUTCMinutes(), 2) + ':' +\n    pad(date.getUTCSeconds(), 2) + '.' +\n    pad(date.getUTCMilliseconds(), 3)\n\n  return ret + '+00:00'\n}\n\nfunction normalizeQueryConfig (config, values, callback) {\n  // can take in strings or config objects\n  config = (typeof (config) === 'string') ? { text: config } : config\n  if (values) {\n    if (typeof values === 'function') {\n      config.callback = values\n    } else {\n      config.values = values\n    }\n  }\n  if (callback) {\n    config.callback = callback\n  }\n  return config\n}\n\nconst md5 = function (string) {\n  return crypto.createHash('md5').update(string, 'utf-8').digest('hex')\n}\n\n// See AuthenticationMD5Password at https://www.postgresql.org/docs/current/static/protocol-flow.html\nconst postgresMd5PasswordHash = function (user, password, salt) {\n  var inner = md5(password + user)\n  var outer = md5(Buffer.concat([Buffer.from(inner), salt]))\n  return 'md5' + outer\n}\n\nmodule.exports = {\n  prepareValue: function prepareValueWrapper (value) {\n    // this ensures that extra arguments do not get passed into prepareValue\n    // by accident, eg: from calling values.map(utils.prepareValue)\n    return prepareValue(value)\n  },\n  normalizeQueryConfig,\n  postgresMd5PasswordHash,\n  md5\n}\n"},"lineCount":166}},"hash":"87717918ca3bbbc34a37f2f5917cbdfc","cacheData":{"env":{}}}