{"dependencies":[{"name":"./source-map-generator","loc":{"line":8,"column":33}},{"name":"./util","loc":{"line":9,"column":19}}],"generated":{"js":"/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex];\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex];\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","map":{"mappings":[{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/source-map/lib/source-node.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}}],"sources":{"../node_modules/source-map/lib/source-node.js":"/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex];\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex];\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n"},"lineCount":414}},"hash":"5d98e36983fc1e91da775f71c1f1f312","cacheData":{"env":{}}}