{"dependencies":[{"name":"stream","loc":{"line":1,"column":29}},{"name":"readable-stream","loc":{"line":2,"column":32}},{"name":"util","loc":{"line":4,"column":22}},{"name":"xregexp","loc":{"line":6,"column":22}}],"generated":{"js":"var WritableStream = require('stream').Writable\n                     || require('readable-stream').Writable,\n    inherits = require('util').inherits,\n    inspect = require('util').inspect;\n\nvar XRegExp = require('xregexp').XRegExp;\n\nvar REX_LISTUNIX = XRegExp.cache('^(?<type>[\\\\-ld])(?<permission>([\\\\-r][\\\\-w][\\\\-xstT]){3})(?<acl>(\\\\+))?\\\\s+(?<inodes>\\\\d+)\\\\s+(?<owner>\\\\S+)\\\\s+(?<group>\\\\S+)\\\\s+(?<size>\\\\d+)\\\\s+(?<timestamp>((?<month1>\\\\w{3})\\\\s+(?<date1>\\\\d{1,2})\\\\s+(?<hour>\\\\d{1,2}):(?<minute>\\\\d{2}))|((?<month2>\\\\w{3})\\\\s+(?<date2>\\\\d{1,2})\\\\s+(?<year>\\\\d{4})))\\\\s+(?<name>.+)$'),\n    REX_LISTMSDOS = XRegExp.cache('^(?<month>\\\\d{2})(?:\\\\-|\\\\/)(?<date>\\\\d{2})(?:\\\\-|\\\\/)(?<year>\\\\d{2,4})\\\\s+(?<hour>\\\\d{2}):(?<minute>\\\\d{2})\\\\s{0,1}(?<ampm>[AaMmPp]{1,2})\\\\s+(?:(?<size>\\\\d+)|(?<isdir>\\\\<DIR\\\\>))\\\\s+(?<name>.+)$'),\n    RE_ENTRY_TOTAL = /^total/,\n    RE_RES_END = /(?:^|\\r?\\n)(\\d{3}) [^\\r\\n]*\\r?\\n/,\n    RE_EOL = /\\r?\\n/g,\n    RE_DASH = /\\-/g;\n\nvar MONTHS = {\n      jan: 1, feb: 2, mar: 3, apr: 4, may: 5, jun: 6,\n      jul: 7, aug: 8, sep: 9, oct: 10, nov: 11, dec: 12\n    };\n\nfunction Parser(options) {\n  if (!(this instanceof Parser))\n    return new Parser(options);\n  WritableStream.call(this);\n\n  this._buffer = '';\n  this._debug = options.debug;\n}\ninherits(Parser, WritableStream);\n\nParser.prototype._write = function(chunk, encoding, cb) {\n  var m, code, reRmLeadCode, rest = '', debug = this._debug;\n\n  this._buffer += chunk.toString('binary');\n\n  while (m = RE_RES_END.exec(this._buffer)) {\n    // support multiple terminating responses in the buffer\n    rest = this._buffer.substring(m.index + m[0].length);\n    if (rest.length)\n      this._buffer = this._buffer.substring(0, m.index + m[0].length);\n\n    debug&&debug('[parser] < ' + inspect(this._buffer));\n\n    // we have a terminating response line\n    code = parseInt(m[1], 10);\n\n    // RFC 959 does not require each line in a multi-line response to begin\n    // with '<code>-', but many servers will do this.\n    //\n    // remove this leading '<code>-' (or '<code> ' from last line) from each\n    // line in the response ...\n    reRmLeadCode = '(^|\\\\r?\\\\n)';\n    reRmLeadCode += m[1];\n    reRmLeadCode += '(?: |\\\\-)';\n    reRmLeadCode = new RegExp(reRmLeadCode, 'g');\n    var text = this._buffer.replace(reRmLeadCode, '$1').trim();\n    this._buffer = rest;\n\n    debug&&debug('[parser] Response: code=' + code + ', buffer=' + inspect(text));\n    this.emit('response', code, text);\n  }\n\n  cb();\n};\n\nParser.parseFeat = function(text) {\n  var lines = text.split(RE_EOL);\n  lines.shift(); // initial response line\n  lines.pop(); // final response line\n\n  for (var i = 0, len = lines.length; i < len; ++i)\n    lines[i] = lines[i].trim();\n\n  // just return the raw lines for now\n  return lines;\n};\n\nParser.parseListEntry = function(line) {\n  var ret,\n      info,\n      month, day, year,\n      hour, mins;\n\n  if (ret = XRegExp.exec(line, REX_LISTUNIX)) {\n    info = {\n      type: ret.type,\n      name: undefined,\n      target: undefined,\n      sticky: false,\n      rights: {\n        user: ret.permission.substr(0, 3).replace(RE_DASH, ''),\n        group: ret.permission.substr(3, 3).replace(RE_DASH, ''),\n        other: ret.permission.substr(6, 3).replace(RE_DASH, '')\n      },\n      acl: (ret.acl === '+'),\n      owner: ret.owner,\n      group: ret.group,\n      size: parseInt(ret.size, 10),\n      date: undefined\n    };\n\n    // check for sticky bit\n    var lastbit = info.rights.other.slice(-1);\n    if (lastbit === 't') {\n      info.rights.other = info.rights.other.slice(0, -1) + 'x';\n      info.sticky = true;\n    } else if (lastbit === 'T') {\n      info.rights.other = info.rights.other.slice(0, -1);\n      info.sticky = true;\n    }\n\n    if (ret.month1 !== undefined) {\n      month = parseInt(MONTHS[ret.month1.toLowerCase()], 10);\n      day = parseInt(ret.date1, 10);\n      year = (new Date()).getFullYear();\n      hour = parseInt(ret.hour, 10);\n      mins = parseInt(ret.minute, 10);\n      if (month < 10)\n        month = '0' + month;\n      if (day < 10)\n        day = '0' + day;\n      if (hour < 10)\n        hour = '0' + hour;\n      if (mins < 10)\n        mins = '0' + mins;\n      info.date = new Date(year + '-'\n                           + month + '-'\n                           + day + 'T'\n                           + hour + ':'\n                           + mins);\n      // If the date is in the past but no more than 6 months old, year\n      // isn't displayed and doesn't have to be the current year.\n      // \n      // If the date is in the future (less than an hour from now), year\n      // isn't displayed and doesn't have to be the current year.\n      // That second case is much more rare than the first and less annoying.\n      // It's impossible to fix without knowing about the server's timezone,\n      // so we just don't do anything about it.\n      // \n      // If we're here with a time that is more than 28 hours into the\n      // future (1 hour + maximum timezone offset which is 27 hours),\n      // there is a problem -- we should be in the second conditional block\n      if (info.date.getTime() - Date.now() > 100800000) {\n        info.date = new Date((year - 1) + '-'\n                             + month + '-'\n                             + day + 'T'\n                             + hour + ':'\n                             + mins);\n      }\n\n      // If we're here with a time that is more than 6 months old, there's\n      // a problem as well.\n      // Maybe local & remote servers aren't on the same timezone (with remote\n      // ahead of local)\n      // For instance, remote is in 2014 while local is still in 2013. In\n      // this case, a date like 01/01/13 02:23 could be detected instead of\n      // 01/01/14 02:23 \n      // Our trigger point will be 3600*24*31*6 (since we already use 31\n      // as an upper bound, no need to add the 27 hours timezone offset)\n      if (Date.now() - info.date.getTime() > 16070400000) {\n        info.date = new Date((year + 1) + '-'\n                             + month + '-'\n                             + day + 'T'\n                             + hour + ':'\n                             + mins);\n      }\n    } else if (ret.month2 !== undefined) {\n      month = parseInt(MONTHS[ret.month2.toLowerCase()], 10);\n      day = parseInt(ret.date2, 10);\n      year = parseInt(ret.year, 10);\n      if (month < 10)\n        month = '0' + month;\n      if (day < 10)\n        day = '0' + day;\n      info.date = new Date(year + '-' + month + '-' + day);\n    }\n    if (ret.type === 'l') {\n      var pos = ret.name.indexOf(' -> ');\n      info.name = ret.name.substring(0, pos);\n      info.target = ret.name.substring(pos+4);\n    } else\n      info.name = ret.name;\n    ret = info;\n  } else if (ret = XRegExp.exec(line, REX_LISTMSDOS)) {\n    info = {\n      name: ret.name,\n      type: (ret.isdir ? 'd' : '-'),\n      size: (ret.isdir ? 0 : parseInt(ret.size, 10)),\n      date: undefined,\n    };\n    month = parseInt(ret.month, 10),\n    day = parseInt(ret.date, 10),\n    year = parseInt(ret.year, 10),\n    hour = parseInt(ret.hour, 10),\n    mins = parseInt(ret.minute, 10);\n\n    if (year < 70)\n      year += 2000;\n    else\n      year += 1900;\n\n    if (ret.ampm[0].toLowerCase() === 'p' && hour < 12)\n      hour += 12;\n    else if (ret.ampm[0].toLowerCase() === 'a' && hour === 12)\n      hour = 0;\n\n    info.date = new Date(year, month - 1, day, hour, mins);\n\n    ret = info;\n  } else if (!RE_ENTRY_TOTAL.test(line))\n    ret = line; // could not parse, so at least give the end user a chance to\n                // look at the raw listing themselves\n\n  return ret;\n};\n\nmodule.exports = Parser;\n","map":{"mappings":[{"source":"../node_modules/ftp/lib/parser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/ftp/lib/parser.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}}],"sources":{"../node_modules/ftp/lib/parser.js":"var WritableStream = require('stream').Writable\n                     || require('readable-stream').Writable,\n    inherits = require('util').inherits,\n    inspect = require('util').inspect;\n\nvar XRegExp = require('xregexp').XRegExp;\n\nvar REX_LISTUNIX = XRegExp.cache('^(?<type>[\\\\-ld])(?<permission>([\\\\-r][\\\\-w][\\\\-xstT]){3})(?<acl>(\\\\+))?\\\\s+(?<inodes>\\\\d+)\\\\s+(?<owner>\\\\S+)\\\\s+(?<group>\\\\S+)\\\\s+(?<size>\\\\d+)\\\\s+(?<timestamp>((?<month1>\\\\w{3})\\\\s+(?<date1>\\\\d{1,2})\\\\s+(?<hour>\\\\d{1,2}):(?<minute>\\\\d{2}))|((?<month2>\\\\w{3})\\\\s+(?<date2>\\\\d{1,2})\\\\s+(?<year>\\\\d{4})))\\\\s+(?<name>.+)$'),\n    REX_LISTMSDOS = XRegExp.cache('^(?<month>\\\\d{2})(?:\\\\-|\\\\/)(?<date>\\\\d{2})(?:\\\\-|\\\\/)(?<year>\\\\d{2,4})\\\\s+(?<hour>\\\\d{2}):(?<minute>\\\\d{2})\\\\s{0,1}(?<ampm>[AaMmPp]{1,2})\\\\s+(?:(?<size>\\\\d+)|(?<isdir>\\\\<DIR\\\\>))\\\\s+(?<name>.+)$'),\n    RE_ENTRY_TOTAL = /^total/,\n    RE_RES_END = /(?:^|\\r?\\n)(\\d{3}) [^\\r\\n]*\\r?\\n/,\n    RE_EOL = /\\r?\\n/g,\n    RE_DASH = /\\-/g;\n\nvar MONTHS = {\n      jan: 1, feb: 2, mar: 3, apr: 4, may: 5, jun: 6,\n      jul: 7, aug: 8, sep: 9, oct: 10, nov: 11, dec: 12\n    };\n\nfunction Parser(options) {\n  if (!(this instanceof Parser))\n    return new Parser(options);\n  WritableStream.call(this);\n\n  this._buffer = '';\n  this._debug = options.debug;\n}\ninherits(Parser, WritableStream);\n\nParser.prototype._write = function(chunk, encoding, cb) {\n  var m, code, reRmLeadCode, rest = '', debug = this._debug;\n\n  this._buffer += chunk.toString('binary');\n\n  while (m = RE_RES_END.exec(this._buffer)) {\n    // support multiple terminating responses in the buffer\n    rest = this._buffer.substring(m.index + m[0].length);\n    if (rest.length)\n      this._buffer = this._buffer.substring(0, m.index + m[0].length);\n\n    debug&&debug('[parser] < ' + inspect(this._buffer));\n\n    // we have a terminating response line\n    code = parseInt(m[1], 10);\n\n    // RFC 959 does not require each line in a multi-line response to begin\n    // with '<code>-', but many servers will do this.\n    //\n    // remove this leading '<code>-' (or '<code> ' from last line) from each\n    // line in the response ...\n    reRmLeadCode = '(^|\\\\r?\\\\n)';\n    reRmLeadCode += m[1];\n    reRmLeadCode += '(?: |\\\\-)';\n    reRmLeadCode = new RegExp(reRmLeadCode, 'g');\n    var text = this._buffer.replace(reRmLeadCode, '$1').trim();\n    this._buffer = rest;\n\n    debug&&debug('[parser] Response: code=' + code + ', buffer=' + inspect(text));\n    this.emit('response', code, text);\n  }\n\n  cb();\n};\n\nParser.parseFeat = function(text) {\n  var lines = text.split(RE_EOL);\n  lines.shift(); // initial response line\n  lines.pop(); // final response line\n\n  for (var i = 0, len = lines.length; i < len; ++i)\n    lines[i] = lines[i].trim();\n\n  // just return the raw lines for now\n  return lines;\n};\n\nParser.parseListEntry = function(line) {\n  var ret,\n      info,\n      month, day, year,\n      hour, mins;\n\n  if (ret = XRegExp.exec(line, REX_LISTUNIX)) {\n    info = {\n      type: ret.type,\n      name: undefined,\n      target: undefined,\n      sticky: false,\n      rights: {\n        user: ret.permission.substr(0, 3).replace(RE_DASH, ''),\n        group: ret.permission.substr(3, 3).replace(RE_DASH, ''),\n        other: ret.permission.substr(6, 3).replace(RE_DASH, '')\n      },\n      acl: (ret.acl === '+'),\n      owner: ret.owner,\n      group: ret.group,\n      size: parseInt(ret.size, 10),\n      date: undefined\n    };\n\n    // check for sticky bit\n    var lastbit = info.rights.other.slice(-1);\n    if (lastbit === 't') {\n      info.rights.other = info.rights.other.slice(0, -1) + 'x';\n      info.sticky = true;\n    } else if (lastbit === 'T') {\n      info.rights.other = info.rights.other.slice(0, -1);\n      info.sticky = true;\n    }\n\n    if (ret.month1 !== undefined) {\n      month = parseInt(MONTHS[ret.month1.toLowerCase()], 10);\n      day = parseInt(ret.date1, 10);\n      year = (new Date()).getFullYear();\n      hour = parseInt(ret.hour, 10);\n      mins = parseInt(ret.minute, 10);\n      if (month < 10)\n        month = '0' + month;\n      if (day < 10)\n        day = '0' + day;\n      if (hour < 10)\n        hour = '0' + hour;\n      if (mins < 10)\n        mins = '0' + mins;\n      info.date = new Date(year + '-'\n                           + month + '-'\n                           + day + 'T'\n                           + hour + ':'\n                           + mins);\n      // If the date is in the past but no more than 6 months old, year\n      // isn't displayed and doesn't have to be the current year.\n      // \n      // If the date is in the future (less than an hour from now), year\n      // isn't displayed and doesn't have to be the current year.\n      // That second case is much more rare than the first and less annoying.\n      // It's impossible to fix without knowing about the server's timezone,\n      // so we just don't do anything about it.\n      // \n      // If we're here with a time that is more than 28 hours into the\n      // future (1 hour + maximum timezone offset which is 27 hours),\n      // there is a problem -- we should be in the second conditional block\n      if (info.date.getTime() - Date.now() > 100800000) {\n        info.date = new Date((year - 1) + '-'\n                             + month + '-'\n                             + day + 'T'\n                             + hour + ':'\n                             + mins);\n      }\n\n      // If we're here with a time that is more than 6 months old, there's\n      // a problem as well.\n      // Maybe local & remote servers aren't on the same timezone (with remote\n      // ahead of local)\n      // For instance, remote is in 2014 while local is still in 2013. In\n      // this case, a date like 01/01/13 02:23 could be detected instead of\n      // 01/01/14 02:23 \n      // Our trigger point will be 3600*24*31*6 (since we already use 31\n      // as an upper bound, no need to add the 27 hours timezone offset)\n      if (Date.now() - info.date.getTime() > 16070400000) {\n        info.date = new Date((year + 1) + '-'\n                             + month + '-'\n                             + day + 'T'\n                             + hour + ':'\n                             + mins);\n      }\n    } else if (ret.month2 !== undefined) {\n      month = parseInt(MONTHS[ret.month2.toLowerCase()], 10);\n      day = parseInt(ret.date2, 10);\n      year = parseInt(ret.year, 10);\n      if (month < 10)\n        month = '0' + month;\n      if (day < 10)\n        day = '0' + day;\n      info.date = new Date(year + '-' + month + '-' + day);\n    }\n    if (ret.type === 'l') {\n      var pos = ret.name.indexOf(' -> ');\n      info.name = ret.name.substring(0, pos);\n      info.target = ret.name.substring(pos+4);\n    } else\n      info.name = ret.name;\n    ret = info;\n  } else if (ret = XRegExp.exec(line, REX_LISTMSDOS)) {\n    info = {\n      name: ret.name,\n      type: (ret.isdir ? 'd' : '-'),\n      size: (ret.isdir ? 0 : parseInt(ret.size, 10)),\n      date: undefined,\n    };\n    month = parseInt(ret.month, 10),\n    day = parseInt(ret.date, 10),\n    year = parseInt(ret.year, 10),\n    hour = parseInt(ret.hour, 10),\n    mins = parseInt(ret.minute, 10);\n\n    if (year < 70)\n      year += 2000;\n    else\n      year += 1900;\n\n    if (ret.ampm[0].toLowerCase() === 'p' && hour < 12)\n      hour += 12;\n    else if (ret.ampm[0].toLowerCase() === 'a' && hour === 12)\n      hour = 0;\n\n    info.date = new Date(year, month - 1, day, hour, mins);\n\n    ret = info;\n  } else if (!RE_ENTRY_TOTAL.test(line))\n    ret = line; // could not parse, so at least give the end user a chance to\n                // look at the raw listing themselves\n\n  return ret;\n};\n\nmodule.exports = Parser;\n"},"lineCount":217}},"hash":"fe2580f2a89380feb41042a2cce06d1c","cacheData":{"env":{}}}