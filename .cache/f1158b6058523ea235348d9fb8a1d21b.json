{"dependencies":[{"name":"buffer","loc":{"line":3,"column":21}},{"name":"stream","loc":{"line":4,"column":24}}],"generated":{"js":"\n\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n","map":{"mappings":[{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/iconv-lite/lib/streams.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}}],"sources":{"../node_modules/iconv-lite/lib/streams.js":"\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n"},"lineCount":123}},"hash":"509fd0a49aa4dd827946ccd5bb4cbb3e","cacheData":{"env":{}}}