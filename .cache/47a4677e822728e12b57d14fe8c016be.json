{"dependencies":[{"name":"./PoolDefaults","loc":{"line":3,"column":29}}],"generated":{"js":"'use strict'\n\nconst PoolDefaults = require('./PoolDefaults')\n\nclass PoolOptions {\n  /**\n   * @param {Object} config\n   *   configuration for the pool\n   * @param {Number} config.max\n   *   Maximum number of items that can exist at the same time.  Default: 1.\n   *   Any further acquire requests will be pushed to the waiting list.\n   * @param {Number} config.min\n   *   Minimum number of items in pool (including in-use). Default: 0.\n   *   When the pool is created, or a resource destroyed, this minimum will\n   *   be checked. If the pool resource count is below the minimum, a new\n   *   resource will be created and added to the pool.\n   * @param {Number} config.maxWaitingClients\n   *   maximum number of queued requests allowed after which acquire calls will be rejected\n   * @param {Number} config.acquireTimeoutMillis\n   *   Delay in milliseconds after which the an `acquire` call will fail. optional.\n   *   Default: undefined. Should be positive and non-zero\n   * @param {Number} config.priorityRange\n   *   The range from 1 to be treated as a valid priority\n   * @param {Bool} [config.fifo=true]\n   *   Sets whether the pool has LIFO (last in, first out) behaviour with respect to idle objects.\n   *   if false then pool has FIFO behaviour\n   * @param {Bool} [config.autostart=true]\n   *   Should the pool start creating resources etc once the constructor is called\n   * @param {Number} opts.evictionRunIntervalMillis\n   *   How often to run eviction checks.  Default: 0 (does not run).\n   * @param {Number} opts.numTestsPerEvictionRun\n   *   Number of resources to check each eviction run.  Default: 3.\n   * @param {Number} opts.softIdleTimeoutMillis\n   *   amount of time an object may sit idle in the pool before it is eligible\n   *   for eviction by the idle object evictor (if any), with the extra condition\n   *   that at least \"min idle\" object instances remain in the pool. Default -1 (nothing can get evicted)\n   * @param {Number} opts.idleTimeoutMillis\n   *   the minimum amount of time that an object may sit idle in the pool before it is eligible for eviction\n   *   due to idle time. Supercedes \"softIdleTimeoutMillis\" Default: 30000\n   * @param {Promise} [config.Promise=Promise]\n   *   What promise implementation should the pool use, defaults to native promises.\n   */\n  constructor (opts) {\n    const poolDefaults = new PoolDefaults()\n\n    opts = opts || {}\n\n    this.fifo = (typeof opts.fifo === 'boolean') ? opts.fifo : poolDefaults.fifo\n    this.priorityRange = opts.priorityRange || poolDefaults.priorityRange\n\n    this.testOnBorrow = (typeof opts.testOnBorrow === 'boolean') ? opts.testOnBorrow : poolDefaults.testOnBorrow\n    this.testOnReturn = (typeof opts.testOnReturn === 'boolean') ? opts.testOnReturn : poolDefaults.testOnReturn\n\n    this.autostart = (typeof opts.autostart === 'boolean') ? opts.autostart : poolDefaults.autostart\n\n    if (opts.acquireTimeoutMillis) {\n      this.acquireTimeoutMillis = parseInt(opts.acquireTimeoutMillis, 10)\n    }\n\n    if (opts.maxWaitingClients) {\n      this.maxWaitingClients = parseInt(opts.maxWaitingClients, 10)\n    }\n\n    this.max = parseInt(opts.max, 10)\n    this.min = parseInt(opts.min, 10)\n\n    this.max = Math.max(isNaN(this.max) ? 1 : this.max, 1)\n    this.min = Math.min(isNaN(this.min) ? 0 : this.min, this.max)\n\n    this.evictionRunIntervalMillis = opts.evictionRunIntervalMillis || poolDefaults.evictionRunIntervalMillis\n    this.numTestsPerEvictionRun = opts.numTestsPerEvictionRun || poolDefaults.numTestsPerEvictionRun\n    this.softIdleTimeoutMillis = opts.softIdleTimeoutMillis || poolDefaults.softIdleTimeoutMillis\n    this.idleTimeoutMillis = opts.idleTimeoutMillis || poolDefaults.idleTimeoutMillis\n\n    this.Promise = (opts.Promise != null) ? opts.Promise : poolDefaults.Promise\n  }\n}\n\nmodule.exports = PoolOptions\n","map":{"mappings":[{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/generic-pool/lib/PoolOptions.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}}],"sources":{"../node_modules/generic-pool/lib/PoolOptions.js":"'use strict'\n\nconst PoolDefaults = require('./PoolDefaults')\n\nclass PoolOptions {\n  /**\n   * @param {Object} config\n   *   configuration for the pool\n   * @param {Number} config.max\n   *   Maximum number of items that can exist at the same time.  Default: 1.\n   *   Any further acquire requests will be pushed to the waiting list.\n   * @param {Number} config.min\n   *   Minimum number of items in pool (including in-use). Default: 0.\n   *   When the pool is created, or a resource destroyed, this minimum will\n   *   be checked. If the pool resource count is below the minimum, a new\n   *   resource will be created and added to the pool.\n   * @param {Number} config.maxWaitingClients\n   *   maximum number of queued requests allowed after which acquire calls will be rejected\n   * @param {Number} config.acquireTimeoutMillis\n   *   Delay in milliseconds after which the an `acquire` call will fail. optional.\n   *   Default: undefined. Should be positive and non-zero\n   * @param {Number} config.priorityRange\n   *   The range from 1 to be treated as a valid priority\n   * @param {Bool} [config.fifo=true]\n   *   Sets whether the pool has LIFO (last in, first out) behaviour with respect to idle objects.\n   *   if false then pool has FIFO behaviour\n   * @param {Bool} [config.autostart=true]\n   *   Should the pool start creating resources etc once the constructor is called\n   * @param {Number} opts.evictionRunIntervalMillis\n   *   How often to run eviction checks.  Default: 0 (does not run).\n   * @param {Number} opts.numTestsPerEvictionRun\n   *   Number of resources to check each eviction run.  Default: 3.\n   * @param {Number} opts.softIdleTimeoutMillis\n   *   amount of time an object may sit idle in the pool before it is eligible\n   *   for eviction by the idle object evictor (if any), with the extra condition\n   *   that at least \"min idle\" object instances remain in the pool. Default -1 (nothing can get evicted)\n   * @param {Number} opts.idleTimeoutMillis\n   *   the minimum amount of time that an object may sit idle in the pool before it is eligible for eviction\n   *   due to idle time. Supercedes \"softIdleTimeoutMillis\" Default: 30000\n   * @param {Promise} [config.Promise=Promise]\n   *   What promise implementation should the pool use, defaults to native promises.\n   */\n  constructor (opts) {\n    const poolDefaults = new PoolDefaults()\n\n    opts = opts || {}\n\n    this.fifo = (typeof opts.fifo === 'boolean') ? opts.fifo : poolDefaults.fifo\n    this.priorityRange = opts.priorityRange || poolDefaults.priorityRange\n\n    this.testOnBorrow = (typeof opts.testOnBorrow === 'boolean') ? opts.testOnBorrow : poolDefaults.testOnBorrow\n    this.testOnReturn = (typeof opts.testOnReturn === 'boolean') ? opts.testOnReturn : poolDefaults.testOnReturn\n\n    this.autostart = (typeof opts.autostart === 'boolean') ? opts.autostart : poolDefaults.autostart\n\n    if (opts.acquireTimeoutMillis) {\n      this.acquireTimeoutMillis = parseInt(opts.acquireTimeoutMillis, 10)\n    }\n\n    if (opts.maxWaitingClients) {\n      this.maxWaitingClients = parseInt(opts.maxWaitingClients, 10)\n    }\n\n    this.max = parseInt(opts.max, 10)\n    this.min = parseInt(opts.min, 10)\n\n    this.max = Math.max(isNaN(this.max) ? 1 : this.max, 1)\n    this.min = Math.min(isNaN(this.min) ? 0 : this.min, this.max)\n\n    this.evictionRunIntervalMillis = opts.evictionRunIntervalMillis || poolDefaults.evictionRunIntervalMillis\n    this.numTestsPerEvictionRun = opts.numTestsPerEvictionRun || poolDefaults.numTestsPerEvictionRun\n    this.softIdleTimeoutMillis = opts.softIdleTimeoutMillis || poolDefaults.softIdleTimeoutMillis\n    this.idleTimeoutMillis = opts.idleTimeoutMillis || poolDefaults.idleTimeoutMillis\n\n    this.Promise = (opts.Promise != null) ? opts.Promise : poolDefaults.Promise\n  }\n}\n\nmodule.exports = PoolOptions\n"},"lineCount":80}},"hash":"c39489f5e0d9b4853d84730668c21a0a","cacheData":{"env":{}}}