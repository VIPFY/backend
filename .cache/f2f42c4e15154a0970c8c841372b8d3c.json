{"dependencies":[],"generated":{"js":"// Generated by CoffeeScript 1.10.0\n(function() {\n  var Netmask, ip2long, long2ip;\n\n  long2ip = function(long) {\n    var a, b, c, d;\n    a = (long & (0xff << 24)) >>> 24;\n    b = (long & (0xff << 16)) >>> 16;\n    c = (long & (0xff << 8)) >>> 8;\n    d = long & 0xff;\n    return [a, b, c, d].join('.');\n  };\n\n  ip2long = function(ip) {\n    var b, byte, i, j, len;\n    b = (ip + '').split('.');\n    if (b.length === 0 || b.length > 4) {\n      throw new Error('Invalid IP');\n    }\n    for (i = j = 0, len = b.length; j < len; i = ++j) {\n      byte = b[i];\n      if (isNaN(parseInt(byte, 10))) {\n        throw new Error(\"Invalid byte: \" + byte);\n      }\n      if (byte < 0 || byte > 255) {\n        throw new Error(\"Invalid byte: \" + byte);\n      }\n    }\n    return ((b[0] || 0) << 24 | (b[1] || 0) << 16 | (b[2] || 0) << 8 | (b[3] || 0)) >>> 0;\n  };\n\n  Netmask = (function() {\n    function Netmask(net, mask) {\n      var error, error1, error2, i, j, ref;\n      if (typeof net !== 'string') {\n        throw new Error(\"Missing `net' parameter\");\n      }\n      if (!mask) {\n        ref = net.split('/', 2), net = ref[0], mask = ref[1];\n      }\n      if (!mask) {\n        switch (net.split('.').length) {\n          case 1:\n            mask = 8;\n            break;\n          case 2:\n            mask = 16;\n            break;\n          case 3:\n            mask = 24;\n            break;\n          case 4:\n            mask = 32;\n            break;\n          default:\n            throw new Error(\"Invalid net address: \" + net);\n        }\n      }\n      if (typeof mask === 'string' && mask.indexOf('.') > -1) {\n        try {\n          this.maskLong = ip2long(mask);\n        } catch (error1) {\n          error = error1;\n          throw new Error(\"Invalid mask: \" + mask);\n        }\n        for (i = j = 32; j >= 0; i = --j) {\n          if (this.maskLong === (0xffffffff << (32 - i)) >>> 0) {\n            this.bitmask = i;\n            break;\n          }\n        }\n      } else if (mask) {\n        this.bitmask = parseInt(mask, 10);\n        this.maskLong = 0;\n        if (this.bitmask > 0) {\n          this.maskLong = (0xffffffff << (32 - this.bitmask)) >>> 0;\n        }\n      } else {\n        throw new Error(\"Invalid mask: empty\");\n      }\n      try {\n        this.netLong = (ip2long(net) & this.maskLong) >>> 0;\n      } catch (error2) {\n        error = error2;\n        throw new Error(\"Invalid net address: \" + net);\n      }\n      if (!(this.bitmask <= 32)) {\n        throw new Error(\"Invalid mask for ip4: \" + mask);\n      }\n      this.size = Math.pow(2, 32 - this.bitmask);\n      this.base = long2ip(this.netLong);\n      this.mask = long2ip(this.maskLong);\n      this.hostmask = long2ip(~this.maskLong);\n      this.first = this.bitmask <= 30 ? long2ip(this.netLong + 1) : this.base;\n      this.last = this.bitmask <= 30 ? long2ip(this.netLong + this.size - 2) : long2ip(this.netLong + this.size - 1);\n      this.broadcast = this.bitmask <= 30 ? long2ip(this.netLong + this.size - 1) : void 0;\n    }\n\n    Netmask.prototype.contains = function(ip) {\n      if (typeof ip === 'string' && (ip.indexOf('/') > 0 || ip.split('.').length !== 4)) {\n        ip = new Netmask(ip);\n      }\n      if (ip instanceof Netmask) {\n        return this.contains(ip.base) && this.contains(ip.broadcast || ip.last);\n      } else {\n        return (ip2long(ip) & this.maskLong) >>> 0 === (this.netLong & this.maskLong) >>> 0;\n      }\n    };\n\n    Netmask.prototype.next = function(count) {\n      if (count == null) {\n        count = 1;\n      }\n      return new Netmask(long2ip(this.netLong + (this.size * count)), this.mask);\n    };\n\n    Netmask.prototype.forEach = function(fn) {\n      var index, j, k, len, long, range, ref, ref1, results, results1;\n      range = (function() {\n        results = [];\n        for (var j = ref = ip2long(this.first), ref1 = ip2long(this.last); ref <= ref1 ? j <= ref1 : j >= ref1; ref <= ref1 ? j++ : j--){ results.push(j); }\n        return results;\n      }).apply(this);\n      results1 = [];\n      for (index = k = 0, len = range.length; k < len; index = ++k) {\n        long = range[index];\n        results1.push(fn(long2ip(long), long, index));\n      }\n      return results1;\n    };\n\n    Netmask.prototype.toString = function() {\n      return this.base + \"/\" + this.bitmask;\n    };\n\n    return Netmask;\n\n  })();\n\n  exports.ip2long = ip2long;\n\n  exports.long2ip = long2ip;\n\n  exports.Netmask = Netmask;\n\n}).call(this);\n","map":{"mappings":[{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/netmask/lib/netmask.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}}],"sources":{"../node_modules/netmask/lib/netmask.js":"// Generated by CoffeeScript 1.10.0\n(function() {\n  var Netmask, ip2long, long2ip;\n\n  long2ip = function(long) {\n    var a, b, c, d;\n    a = (long & (0xff << 24)) >>> 24;\n    b = (long & (0xff << 16)) >>> 16;\n    c = (long & (0xff << 8)) >>> 8;\n    d = long & 0xff;\n    return [a, b, c, d].join('.');\n  };\n\n  ip2long = function(ip) {\n    var b, byte, i, j, len;\n    b = (ip + '').split('.');\n    if (b.length === 0 || b.length > 4) {\n      throw new Error('Invalid IP');\n    }\n    for (i = j = 0, len = b.length; j < len; i = ++j) {\n      byte = b[i];\n      if (isNaN(parseInt(byte, 10))) {\n        throw new Error(\"Invalid byte: \" + byte);\n      }\n      if (byte < 0 || byte > 255) {\n        throw new Error(\"Invalid byte: \" + byte);\n      }\n    }\n    return ((b[0] || 0) << 24 | (b[1] || 0) << 16 | (b[2] || 0) << 8 | (b[3] || 0)) >>> 0;\n  };\n\n  Netmask = (function() {\n    function Netmask(net, mask) {\n      var error, error1, error2, i, j, ref;\n      if (typeof net !== 'string') {\n        throw new Error(\"Missing `net' parameter\");\n      }\n      if (!mask) {\n        ref = net.split('/', 2), net = ref[0], mask = ref[1];\n      }\n      if (!mask) {\n        switch (net.split('.').length) {\n          case 1:\n            mask = 8;\n            break;\n          case 2:\n            mask = 16;\n            break;\n          case 3:\n            mask = 24;\n            break;\n          case 4:\n            mask = 32;\n            break;\n          default:\n            throw new Error(\"Invalid net address: \" + net);\n        }\n      }\n      if (typeof mask === 'string' && mask.indexOf('.') > -1) {\n        try {\n          this.maskLong = ip2long(mask);\n        } catch (error1) {\n          error = error1;\n          throw new Error(\"Invalid mask: \" + mask);\n        }\n        for (i = j = 32; j >= 0; i = --j) {\n          if (this.maskLong === (0xffffffff << (32 - i)) >>> 0) {\n            this.bitmask = i;\n            break;\n          }\n        }\n      } else if (mask) {\n        this.bitmask = parseInt(mask, 10);\n        this.maskLong = 0;\n        if (this.bitmask > 0) {\n          this.maskLong = (0xffffffff << (32 - this.bitmask)) >>> 0;\n        }\n      } else {\n        throw new Error(\"Invalid mask: empty\");\n      }\n      try {\n        this.netLong = (ip2long(net) & this.maskLong) >>> 0;\n      } catch (error2) {\n        error = error2;\n        throw new Error(\"Invalid net address: \" + net);\n      }\n      if (!(this.bitmask <= 32)) {\n        throw new Error(\"Invalid mask for ip4: \" + mask);\n      }\n      this.size = Math.pow(2, 32 - this.bitmask);\n      this.base = long2ip(this.netLong);\n      this.mask = long2ip(this.maskLong);\n      this.hostmask = long2ip(~this.maskLong);\n      this.first = this.bitmask <= 30 ? long2ip(this.netLong + 1) : this.base;\n      this.last = this.bitmask <= 30 ? long2ip(this.netLong + this.size - 2) : long2ip(this.netLong + this.size - 1);\n      this.broadcast = this.bitmask <= 30 ? long2ip(this.netLong + this.size - 1) : void 0;\n    }\n\n    Netmask.prototype.contains = function(ip) {\n      if (typeof ip === 'string' && (ip.indexOf('/') > 0 || ip.split('.').length !== 4)) {\n        ip = new Netmask(ip);\n      }\n      if (ip instanceof Netmask) {\n        return this.contains(ip.base) && this.contains(ip.broadcast || ip.last);\n      } else {\n        return (ip2long(ip) & this.maskLong) >>> 0 === (this.netLong & this.maskLong) >>> 0;\n      }\n    };\n\n    Netmask.prototype.next = function(count) {\n      if (count == null) {\n        count = 1;\n      }\n      return new Netmask(long2ip(this.netLong + (this.size * count)), this.mask);\n    };\n\n    Netmask.prototype.forEach = function(fn) {\n      var index, j, k, len, long, range, ref, ref1, results, results1;\n      range = (function() {\n        results = [];\n        for (var j = ref = ip2long(this.first), ref1 = ip2long(this.last); ref <= ref1 ? j <= ref1 : j >= ref1; ref <= ref1 ? j++ : j--){ results.push(j); }\n        return results;\n      }).apply(this);\n      results1 = [];\n      for (index = k = 0, len = range.length; k < len; index = ++k) {\n        long = range[index];\n        results1.push(fn(long2ip(long), long, index));\n      }\n      return results1;\n    };\n\n    Netmask.prototype.toString = function() {\n      return this.base + \"/\" + this.bitmask;\n    };\n\n    return Netmask;\n\n  })();\n\n  exports.ip2long = ip2long;\n\n  exports.long2ip = long2ip;\n\n  exports.Netmask = Netmask;\n\n}).call(this);\n"},"lineCount":147}},"hash":"58ef059cc33e7c582d70607ef5ec3c17","cacheData":{"env":{}}}