{"dependencies":[{"name":"crypto","loc":{"line":3,"column":21}},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n\n\"use strict\";\nvar crypto = require('crypto');\nexports.passwordDigest = function passwordDigest(nonce, created, password) {\n  // digest = base64 ( sha1 ( nonce + created + password ) )\n  var pwHash = crypto.createHash('sha1');\n  var rawNonce = new Buffer(nonce || '', 'base64').toString('binary');\n  pwHash.update(rawNonce + created + password);\n  return pwHash.digest('base64');\n};\n\n\nvar TNS_PREFIX = '__tns__'; // Prefix for targetNamespace\n\nexports.TNS_PREFIX = TNS_PREFIX;\n\n/**\n * Find a key from an object based on the value\n * @param {Object} Namespace prefix/uri mapping\n * @param {*} nsURI value\n * @returns {String} The matching key\n */\nexports.findPrefix = function(xmlnsMapping, nsURI) {\n  for (var n in xmlnsMapping) {\n    if (n === TNS_PREFIX) continue;\n    if (xmlnsMapping[n] === nsURI) {\n      return n;\n    }\n  }\n};\n","map":{"mappings":[{"source":"../node_modules/soap/lib/utils.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/soap/lib/utils.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}}],"sources":{"../node_modules/soap/lib/utils.js":"\n\"use strict\";\nvar crypto = require('crypto');\nexports.passwordDigest = function passwordDigest(nonce, created, password) {\n  // digest = base64 ( sha1 ( nonce + created + password ) )\n  var pwHash = crypto.createHash('sha1');\n  var rawNonce = new Buffer(nonce || '', 'base64').toString('binary');\n  pwHash.update(rawNonce + created + password);\n  return pwHash.digest('base64');\n};\n\n\nvar TNS_PREFIX = '__tns__'; // Prefix for targetNamespace\n\nexports.TNS_PREFIX = TNS_PREFIX;\n\n/**\n * Find a key from an object based on the value\n * @param {Object} Namespace prefix/uri mapping\n * @param {*} nsURI value\n * @returns {String} The matching key\n */\nexports.findPrefix = function(xmlnsMapping, nsURI) {\n  for (var n in xmlnsMapping) {\n    if (n === TNS_PREFIX) continue;\n    if (xmlnsMapping[n] === nsURI) {\n      return n;\n    }\n  }\n};\n"},"lineCount":32}},"hash":"cd025193509085df5fa6e864c5ec9d52","cacheData":{"env":{}}}