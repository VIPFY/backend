{"dependencies":[{"name":"./es7","loc":{"line":2,"column":19}},{"name":"../lib/types","loc":{"line":4,"column":31}},{"name":"../lib/shared","loc":{"line":7,"column":34}}],"generated":{"js":"module.exports = function (fork) {\n  fork.use(require(\"./es7\"));\n\n  var types = fork.use(require(\"../lib/types\"));\n  var def = types.Type.def;\n  var or = types.Type.or;\n  var defaults = fork.use(require(\"../lib/shared\")).defaults;\n\n  def(\"JSXAttribute\")\n    .bases(\"Node\")\n    .build(\"name\", \"value\")\n    .field(\"name\", or(def(\"JSXIdentifier\"), def(\"JSXNamespacedName\")))\n    .field(\"value\", or(\n      def(\"Literal\"), // attr=\"value\"\n      def(\"JSXExpressionContainer\"), // attr={value}\n      null // attr= or just attr\n    ), defaults[\"null\"]);\n\n  def(\"JSXIdentifier\")\n    .bases(\"Identifier\")\n    .build(\"name\")\n    .field(\"name\", String);\n\n  def(\"JSXNamespacedName\")\n    .bases(\"Node\")\n    .build(\"namespace\", \"name\")\n    .field(\"namespace\", def(\"JSXIdentifier\"))\n    .field(\"name\", def(\"JSXIdentifier\"));\n\n  def(\"JSXMemberExpression\")\n    .bases(\"MemberExpression\")\n    .build(\"object\", \"property\")\n    .field(\"object\", or(def(\"JSXIdentifier\"), def(\"JSXMemberExpression\")))\n    .field(\"property\", def(\"JSXIdentifier\"))\n    .field(\"computed\", Boolean, defaults.false);\n\n  var JSXElementName = or(\n    def(\"JSXIdentifier\"),\n    def(\"JSXNamespacedName\"),\n    def(\"JSXMemberExpression\")\n  );\n\n  def(\"JSXSpreadAttribute\")\n    .bases(\"Node\")\n    .build(\"argument\")\n    .field(\"argument\", def(\"Expression\"));\n\n  var JSXAttributes = [or(\n    def(\"JSXAttribute\"),\n    def(\"JSXSpreadAttribute\")\n  )];\n\n  def(\"JSXExpressionContainer\")\n    .bases(\"Expression\")\n    .build(\"expression\")\n    .field(\"expression\", def(\"Expression\"));\n\n  def(\"JSXElement\")\n    .bases(\"Expression\")\n    .build(\"openingElement\", \"closingElement\", \"children\")\n    .field(\"openingElement\", def(\"JSXOpeningElement\"))\n    .field(\"closingElement\", or(def(\"JSXClosingElement\"), null), defaults[\"null\"])\n    .field(\"children\", [or(\n      def(\"JSXElement\"),\n      def(\"JSXExpressionContainer\"),\n      def(\"JSXText\"),\n      def(\"Literal\") // TODO Esprima should return JSXText instead.\n    )], defaults.emptyArray)\n    .field(\"name\", JSXElementName, function () {\n      // Little-known fact: the `this` object inside a default function\n      // is none other than the partially-built object itself, and any\n      // fields initialized directly from builder function arguments\n      // (like openingElement, closingElement, and children) are\n      // guaranteed to be available.\n      return this.openingElement.name;\n    }, true) // hidden from traversal\n    .field(\"selfClosing\", Boolean, function () {\n      return this.openingElement.selfClosing;\n    }, true) // hidden from traversal\n    .field(\"attributes\", JSXAttributes, function () {\n      return this.openingElement.attributes;\n    }, true); // hidden from traversal\n\n  def(\"JSXOpeningElement\")\n    .bases(\"Node\") // TODO Does this make sense? Can't really be an JSXElement.\n    .build(\"name\", \"attributes\", \"selfClosing\")\n    .field(\"name\", JSXElementName)\n    .field(\"attributes\", JSXAttributes, defaults.emptyArray)\n    .field(\"selfClosing\", Boolean, defaults[\"false\"]);\n\n  def(\"JSXClosingElement\")\n    .bases(\"Node\") // TODO Same concern.\n    .build(\"name\")\n    .field(\"name\", JSXElementName);\n\n  def(\"JSXText\")\n    .bases(\"Literal\")\n    .build(\"value\")\n    .field(\"value\", String);\n\n  def(\"JSXEmptyExpression\").bases(\"Expression\").build();\n\n  // This PR has caused many people issues, but supporting it seems like a\n  // good idea anyway: https://github.com/babel/babel/pull/4988\n  def(\"JSXSpreadChild\")\n    .bases(\"Expression\")\n    .build(\"expression\")\n    .field(\"expression\", def(\"Expression\"));\n};\n","map":{"mappings":[{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/ast-types/def/jsx.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}}],"sources":{"../node_modules/ast-types/def/jsx.js":"module.exports = function (fork) {\n  fork.use(require(\"./es7\"));\n\n  var types = fork.use(require(\"../lib/types\"));\n  var def = types.Type.def;\n  var or = types.Type.or;\n  var defaults = fork.use(require(\"../lib/shared\")).defaults;\n\n  def(\"JSXAttribute\")\n    .bases(\"Node\")\n    .build(\"name\", \"value\")\n    .field(\"name\", or(def(\"JSXIdentifier\"), def(\"JSXNamespacedName\")))\n    .field(\"value\", or(\n      def(\"Literal\"), // attr=\"value\"\n      def(\"JSXExpressionContainer\"), // attr={value}\n      null // attr= or just attr\n    ), defaults[\"null\"]);\n\n  def(\"JSXIdentifier\")\n    .bases(\"Identifier\")\n    .build(\"name\")\n    .field(\"name\", String);\n\n  def(\"JSXNamespacedName\")\n    .bases(\"Node\")\n    .build(\"namespace\", \"name\")\n    .field(\"namespace\", def(\"JSXIdentifier\"))\n    .field(\"name\", def(\"JSXIdentifier\"));\n\n  def(\"JSXMemberExpression\")\n    .bases(\"MemberExpression\")\n    .build(\"object\", \"property\")\n    .field(\"object\", or(def(\"JSXIdentifier\"), def(\"JSXMemberExpression\")))\n    .field(\"property\", def(\"JSXIdentifier\"))\n    .field(\"computed\", Boolean, defaults.false);\n\n  var JSXElementName = or(\n    def(\"JSXIdentifier\"),\n    def(\"JSXNamespacedName\"),\n    def(\"JSXMemberExpression\")\n  );\n\n  def(\"JSXSpreadAttribute\")\n    .bases(\"Node\")\n    .build(\"argument\")\n    .field(\"argument\", def(\"Expression\"));\n\n  var JSXAttributes = [or(\n    def(\"JSXAttribute\"),\n    def(\"JSXSpreadAttribute\")\n  )];\n\n  def(\"JSXExpressionContainer\")\n    .bases(\"Expression\")\n    .build(\"expression\")\n    .field(\"expression\", def(\"Expression\"));\n\n  def(\"JSXElement\")\n    .bases(\"Expression\")\n    .build(\"openingElement\", \"closingElement\", \"children\")\n    .field(\"openingElement\", def(\"JSXOpeningElement\"))\n    .field(\"closingElement\", or(def(\"JSXClosingElement\"), null), defaults[\"null\"])\n    .field(\"children\", [or(\n      def(\"JSXElement\"),\n      def(\"JSXExpressionContainer\"),\n      def(\"JSXText\"),\n      def(\"Literal\") // TODO Esprima should return JSXText instead.\n    )], defaults.emptyArray)\n    .field(\"name\", JSXElementName, function () {\n      // Little-known fact: the `this` object inside a default function\n      // is none other than the partially-built object itself, and any\n      // fields initialized directly from builder function arguments\n      // (like openingElement, closingElement, and children) are\n      // guaranteed to be available.\n      return this.openingElement.name;\n    }, true) // hidden from traversal\n    .field(\"selfClosing\", Boolean, function () {\n      return this.openingElement.selfClosing;\n    }, true) // hidden from traversal\n    .field(\"attributes\", JSXAttributes, function () {\n      return this.openingElement.attributes;\n    }, true); // hidden from traversal\n\n  def(\"JSXOpeningElement\")\n    .bases(\"Node\") // TODO Does this make sense? Can't really be an JSXElement.\n    .build(\"name\", \"attributes\", \"selfClosing\")\n    .field(\"name\", JSXElementName)\n    .field(\"attributes\", JSXAttributes, defaults.emptyArray)\n    .field(\"selfClosing\", Boolean, defaults[\"false\"]);\n\n  def(\"JSXClosingElement\")\n    .bases(\"Node\") // TODO Same concern.\n    .build(\"name\")\n    .field(\"name\", JSXElementName);\n\n  def(\"JSXText\")\n    .bases(\"Literal\")\n    .build(\"value\")\n    .field(\"value\", String);\n\n  def(\"JSXEmptyExpression\").bases(\"Expression\").build();\n\n  // This PR has caused many people issues, but supporting it seems like a\n  // good idea anyway: https://github.com/babel/babel/pull/4988\n  def(\"JSXSpreadChild\")\n    .bases(\"Expression\")\n    .build(\"expression\")\n    .field(\"expression\", def(\"Expression\"));\n};\n"},"lineCount":110}},"hash":"c426826dbc67d1e0e0ac33e0fefa4c4f","cacheData":{"env":{}}}