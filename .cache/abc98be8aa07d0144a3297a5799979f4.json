{"dependencies":[{"name":"buffer","loc":{"line":2,"column":21}},{"name":"string_decoder","loc":{"line":49,"column":28}}],"generated":{"js":"\n\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (new Buffer('eda0bdedb2a9', 'hex').toString() !== 'ðŸ’©') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return new Buffer(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return new Buffer(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return new Buffer(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = new Buffer(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n","map":{"mappings":[{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/iconv-lite/encodings/internal.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}}],"sources":{"../node_modules/iconv-lite/encodings/internal.js":"\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (new Buffer('eda0bdedb2a9', 'hex').toString() !== 'ðŸ’©') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return new Buffer(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return new Buffer(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return new Buffer(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = new Buffer(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n"},"lineCount":190}},"hash":"bd39cdd5bf8a92e3f97568c9e3e37995","cacheData":{"env":{}}}