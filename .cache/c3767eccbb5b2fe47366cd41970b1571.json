{"dependencies":[{"name":"graphql","loc":{"line":3,"column":24}},{"name":"process"}],"generated":{"js":"var process = require(\"process\");\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar TracingExtension = /** @class */ (function () {\n    function TracingExtension() {\n        this.resolverCalls = [];\n    }\n    TracingExtension.prototype.requestDidStart = function () {\n        this.startWallTime = new Date();\n        this.startHrTime = process.hrtime();\n    };\n    TracingExtension.prototype.executionDidStart = function () { };\n    TracingExtension.prototype.willResolveField = function (_source, _args, _context, info) {\n        var _this = this;\n        var resolverCall = {\n            path: info.path,\n            fieldName: info.fieldName,\n            parentType: info.parentType,\n            returnType: info.returnType,\n            startOffset: process.hrtime(this.startHrTime)\n        };\n        this.resolverCalls.push(resolverCall);\n        return function () {\n            resolverCall.endOffset = process.hrtime(_this.startHrTime);\n        };\n    };\n    TracingExtension.prototype.didResolveField = function (_source, _args, _context, info) { };\n    TracingExtension.prototype.requestDidEnd = function () {\n        this.duration = process.hrtime(this.startHrTime);\n        this.endWallTime = new Date();\n    };\n    TracingExtension.prototype.format = function () {\n        return [\n            \"tracing\",\n            {\n                version: 1,\n                startTime: this.startWallTime.toISOString(),\n                endTime: this.endWallTime.toISOString(),\n                duration: durationHrTimeToNanos(this.duration),\n                execution: {\n                    resolvers: this.resolverCalls.map(function (resolverCall) {\n                        var startOffset = durationHrTimeToNanos(resolverCall.startOffset);\n                        var duration = resolverCall.endOffset\n                            ? durationHrTimeToNanos(resolverCall.endOffset) - startOffset\n                            : 0;\n                        return {\n                            path: graphql_1.responsePathAsArray(resolverCall.path),\n                            parentType: resolverCall.parentType.toString(),\n                            fieldName: resolverCall.fieldName,\n                            returnType: resolverCall.returnType.toString(),\n                            startOffset: startOffset,\n                            duration: duration\n                        };\n                    })\n                }\n            }\n        ];\n    };\n    return TracingExtension;\n}());\nexports.TracingExtension = TracingExtension;\n// Converts an hrtime array (as returned from process.hrtime) to nanoseconds.\n//\n// ONLY CALL THIS ON VALUES REPRESENTING DELTAS, NOT ON THE RAW RETURN VALUE\n// FROM process.hrtime() WITH NO ARGUMENTS.\n//\n// The entire point of the hrtime data structure is that the JavaScript Number\n// type can't represent all int64 values without loss of precision:\n// Number.MAX_SAFE_INTEGER nanoseconds is about 104 days. Calling this function\n// on a duration that represents a value less than 104 days is fine. Calling\n// this function on an absolute time (which is generally roughly time since\n// system boot) is not a good idea.\nfunction durationHrTimeToNanos(hrtime) {\n    return hrtime[0] * 1e9 + hrtime[1];\n}\n//# sourceMappingURL=index.js.map","map":{"mappings":[{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/apollo-tracing/lib/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}}],"sources":{"../node_modules/apollo-tracing/lib/index.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar graphql_1 = require(\"graphql\");\nvar TracingExtension = /** @class */ (function () {\n    function TracingExtension() {\n        this.resolverCalls = [];\n    }\n    TracingExtension.prototype.requestDidStart = function () {\n        this.startWallTime = new Date();\n        this.startHrTime = process.hrtime();\n    };\n    TracingExtension.prototype.executionDidStart = function () { };\n    TracingExtension.prototype.willResolveField = function (_source, _args, _context, info) {\n        var _this = this;\n        var resolverCall = {\n            path: info.path,\n            fieldName: info.fieldName,\n            parentType: info.parentType,\n            returnType: info.returnType,\n            startOffset: process.hrtime(this.startHrTime)\n        };\n        this.resolverCalls.push(resolverCall);\n        return function () {\n            resolverCall.endOffset = process.hrtime(_this.startHrTime);\n        };\n    };\n    TracingExtension.prototype.didResolveField = function (_source, _args, _context, info) { };\n    TracingExtension.prototype.requestDidEnd = function () {\n        this.duration = process.hrtime(this.startHrTime);\n        this.endWallTime = new Date();\n    };\n    TracingExtension.prototype.format = function () {\n        return [\n            \"tracing\",\n            {\n                version: 1,\n                startTime: this.startWallTime.toISOString(),\n                endTime: this.endWallTime.toISOString(),\n                duration: durationHrTimeToNanos(this.duration),\n                execution: {\n                    resolvers: this.resolverCalls.map(function (resolverCall) {\n                        var startOffset = durationHrTimeToNanos(resolverCall.startOffset);\n                        var duration = resolverCall.endOffset\n                            ? durationHrTimeToNanos(resolverCall.endOffset) - startOffset\n                            : 0;\n                        return {\n                            path: graphql_1.responsePathAsArray(resolverCall.path),\n                            parentType: resolverCall.parentType.toString(),\n                            fieldName: resolverCall.fieldName,\n                            returnType: resolverCall.returnType.toString(),\n                            startOffset: startOffset,\n                            duration: duration\n                        };\n                    })\n                }\n            }\n        ];\n    };\n    return TracingExtension;\n}());\nexports.TracingExtension = TracingExtension;\n// Converts an hrtime array (as returned from process.hrtime) to nanoseconds.\n//\n// ONLY CALL THIS ON VALUES REPRESENTING DELTAS, NOT ON THE RAW RETURN VALUE\n// FROM process.hrtime() WITH NO ARGUMENTS.\n//\n// The entire point of the hrtime data structure is that the JavaScript Number\n// type can't represent all int64 values without loss of precision:\n// Number.MAX_SAFE_INTEGER nanoseconds is about 104 days. Calling this function\n// on a duration that represents a value less than 104 days is fine. Calling\n// this function on an absolute time (which is generally roughly time since\n// system boot) is not a good idea.\nfunction durationHrTimeToNanos(hrtime) {\n    return hrtime[0] * 1e9 + hrtime[1];\n}\n//# sourceMappingURL=index.js.map"},"lineCount":77}},"hash":"7c9efeb5f8dc6384af164ddb0b74614c","cacheData":{"env":{}}}