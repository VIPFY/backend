{"dependencies":[{"name":"buffer","loc":{"line":2,"column":21}}],"generated":{"js":"\n\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = new Buffer(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = new Buffer(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBytes.push(buf);\n        this.initialBytesLen += buf.length;\n        \n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n        this.initialBytes.length = this.initialBytesLen = 0;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var res = this.decoder.write(buf),\n            trail = this.decoder.end();\n\n        return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n\n    if (buf.length >= 2) {\n        // Check BOM.\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n            enc = 'utf-16be';\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n            enc = 'utf-16le';\n        else {\n            // No BOM found. Try to deduce encoding from initial content.\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n            // So, we count ASCII as if it was LE or BE, and decide from that.\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\n\n            for (var i = 0; i < _len; i += 2) {\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\n            }\n\n            if (asciiCharsBE > asciiCharsLE)\n                enc = 'utf-16be';\n            else if (asciiCharsBE < asciiCharsLE)\n                enc = 'utf-16le';\n        }\n    }\n\n    return enc;\n}\n\n\n","map":{"mappings":[{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/iconv-lite/encodings/utf16.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}}],"sources":{"../node_modules/iconv-lite/encodings/utf16.js":"\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = new Buffer(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = new Buffer(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBytes.push(buf);\n        this.initialBytesLen += buf.length;\n        \n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n        this.initialBytes.length = this.initialBytesLen = 0;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var res = this.decoder.write(buf),\n            trail = this.decoder.end();\n\n        return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n\n    if (buf.length >= 2) {\n        // Check BOM.\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n            enc = 'utf-16be';\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n            enc = 'utf-16le';\n        else {\n            // No BOM found. Try to deduce encoding from initial content.\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n            // So, we count ASCII as if it was LE or BE, and decide from that.\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\n\n            for (var i = 0; i < _len; i += 2) {\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\n            }\n\n            if (asciiCharsBE > asciiCharsLE)\n                enc = 'utf-16be';\n            else if (asciiCharsBE < asciiCharsLE)\n                enc = 'utf-16le';\n        }\n    }\n\n    return enc;\n}\n\n\n"},"lineCount":179}},"hash":"c195074fc659909331802eb8845c70d1","cacheData":{"env":{}}}