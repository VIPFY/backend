{"dependencies":[{"name":"./core","loc":{"line":2,"column":21}},{"name":"../lib/types","loc":{"line":3,"column":33}}],"generated":{"js":"module.exports = function (fork) {\n    fork.use(require(\"./core\"));\n    var types = fork.use(require(\"../lib/types\"));\n    var def = types.Type.def;\n    var or = types.Type.or;\n\n    // Note that none of these types are buildable because the Mozilla Parser\n    // API doesn't specify any builder functions, and nobody uses E4X anymore.\n\n    def(\"XMLDefaultDeclaration\")\n        .bases(\"Declaration\")\n        .field(\"namespace\", def(\"Expression\"));\n\n    def(\"XMLAnyName\").bases(\"Expression\");\n\n    def(\"XMLQualifiedIdentifier\")\n        .bases(\"Expression\")\n        .field(\"left\", or(def(\"Identifier\"), def(\"XMLAnyName\")))\n        .field(\"right\", or(def(\"Identifier\"), def(\"Expression\")))\n        .field(\"computed\", Boolean);\n\n    def(\"XMLFunctionQualifiedIdentifier\")\n        .bases(\"Expression\")\n        .field(\"right\", or(def(\"Identifier\"), def(\"Expression\")))\n        .field(\"computed\", Boolean);\n\n    def(\"XMLAttributeSelector\")\n        .bases(\"Expression\")\n        .field(\"attribute\", def(\"Expression\"));\n\n    def(\"XMLFilterExpression\")\n        .bases(\"Expression\")\n        .field(\"left\", def(\"Expression\"))\n        .field(\"right\", def(\"Expression\"));\n\n    def(\"XMLElement\")\n        .bases(\"XML\", \"Expression\")\n        .field(\"contents\", [def(\"XML\")]);\n\n    def(\"XMLList\")\n        .bases(\"XML\", \"Expression\")\n        .field(\"contents\", [def(\"XML\")]);\n\n    def(\"XML\").bases(\"Node\");\n\n    def(\"XMLEscape\")\n        .bases(\"XML\")\n        .field(\"expression\", def(\"Expression\"));\n\n    def(\"XMLText\")\n        .bases(\"XML\")\n        .field(\"text\", String);\n\n    def(\"XMLStartTag\")\n        .bases(\"XML\")\n        .field(\"contents\", [def(\"XML\")]);\n\n    def(\"XMLEndTag\")\n        .bases(\"XML\")\n        .field(\"contents\", [def(\"XML\")]);\n\n    def(\"XMLPointTag\")\n        .bases(\"XML\")\n        .field(\"contents\", [def(\"XML\")]);\n\n    def(\"XMLName\")\n        .bases(\"XML\")\n        .field(\"contents\", or(String, [def(\"XML\")]));\n\n    def(\"XMLAttribute\")\n        .bases(\"XML\")\n        .field(\"value\", String);\n\n    def(\"XMLCdata\")\n        .bases(\"XML\")\n        .field(\"contents\", String);\n\n    def(\"XMLComment\")\n        .bases(\"XML\")\n        .field(\"contents\", String);\n\n    def(\"XMLProcessingInstruction\")\n        .bases(\"XML\")\n        .field(\"target\", String)\n        .field(\"contents\", or(String, null));\n};","map":{"mappings":[{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/ast-types/def/e4x.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}}],"sources":{"../node_modules/ast-types/def/e4x.js":"module.exports = function (fork) {\n    fork.use(require(\"./core\"));\n    var types = fork.use(require(\"../lib/types\"));\n    var def = types.Type.def;\n    var or = types.Type.or;\n\n    // Note that none of these types are buildable because the Mozilla Parser\n    // API doesn't specify any builder functions, and nobody uses E4X anymore.\n\n    def(\"XMLDefaultDeclaration\")\n        .bases(\"Declaration\")\n        .field(\"namespace\", def(\"Expression\"));\n\n    def(\"XMLAnyName\").bases(\"Expression\");\n\n    def(\"XMLQualifiedIdentifier\")\n        .bases(\"Expression\")\n        .field(\"left\", or(def(\"Identifier\"), def(\"XMLAnyName\")))\n        .field(\"right\", or(def(\"Identifier\"), def(\"Expression\")))\n        .field(\"computed\", Boolean);\n\n    def(\"XMLFunctionQualifiedIdentifier\")\n        .bases(\"Expression\")\n        .field(\"right\", or(def(\"Identifier\"), def(\"Expression\")))\n        .field(\"computed\", Boolean);\n\n    def(\"XMLAttributeSelector\")\n        .bases(\"Expression\")\n        .field(\"attribute\", def(\"Expression\"));\n\n    def(\"XMLFilterExpression\")\n        .bases(\"Expression\")\n        .field(\"left\", def(\"Expression\"))\n        .field(\"right\", def(\"Expression\"));\n\n    def(\"XMLElement\")\n        .bases(\"XML\", \"Expression\")\n        .field(\"contents\", [def(\"XML\")]);\n\n    def(\"XMLList\")\n        .bases(\"XML\", \"Expression\")\n        .field(\"contents\", [def(\"XML\")]);\n\n    def(\"XML\").bases(\"Node\");\n\n    def(\"XMLEscape\")\n        .bases(\"XML\")\n        .field(\"expression\", def(\"Expression\"));\n\n    def(\"XMLText\")\n        .bases(\"XML\")\n        .field(\"text\", String);\n\n    def(\"XMLStartTag\")\n        .bases(\"XML\")\n        .field(\"contents\", [def(\"XML\")]);\n\n    def(\"XMLEndTag\")\n        .bases(\"XML\")\n        .field(\"contents\", [def(\"XML\")]);\n\n    def(\"XMLPointTag\")\n        .bases(\"XML\")\n        .field(\"contents\", [def(\"XML\")]);\n\n    def(\"XMLName\")\n        .bases(\"XML\")\n        .field(\"contents\", or(String, [def(\"XML\")]));\n\n    def(\"XMLAttribute\")\n        .bases(\"XML\")\n        .field(\"value\", String);\n\n    def(\"XMLCdata\")\n        .bases(\"XML\")\n        .field(\"contents\", String);\n\n    def(\"XMLComment\")\n        .bases(\"XML\")\n        .field(\"contents\", String);\n\n    def(\"XMLProcessingInstruction\")\n        .bases(\"XML\")\n        .field(\"target\", String)\n        .field(\"contents\", or(String, null));\n};"},"lineCount":86}},"hash":"e97613e08275ccedfc233a0eb15e8237","cacheData":{"env":{}}}