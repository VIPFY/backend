{"dependencies":[{"name":"./data-types","loc":{"line":3,"column":26}},{"name":"util","loc":{"line":4,"column":21}},{"name":"lodash","loc":{"line":5,"column":18}},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict';\n\nconst dataTypes = require('./data-types');\nconst util = require('util');\nconst _ = require('lodash');\n\nfunction escape(val, timeZone, dialect, format) {\n  let prependN = false;\n  if (val === undefined || val === null) {\n    return 'NULL';\n  }\n  switch (typeof val) {\n    case 'boolean':\n    // SQLite doesn't have true/false support. MySQL aliases true/false to 1/0\n    // for us. Postgres actually has a boolean type with true/false literals,\n    // but sequelize doesn't use it yet.\n      if (dialect === 'sqlite' || dialect === 'mssql') {\n        return +!!val;\n      }\n      return '' + !!val;\n    case 'number':\n      return val + '';\n    case 'string':\n    // In mssql, prepend N to all quoted vals which are originally a string (for\n    // unicode compatibility)\n      prependN = dialect === 'mssql';\n      break;\n  }\n\n  if (val instanceof Date) {\n    val = dataTypes[dialect].DATE.prototype.stringify(val, { timezone: timeZone });\n  }\n\n  if (Buffer.isBuffer(val)) {\n    if (dataTypes[dialect].BLOB) {\n      return dataTypes[dialect].BLOB.prototype.stringify(val);\n    }\n\n    return dataTypes.BLOB.prototype.stringify(val);\n  }\n\n  if (Array.isArray(val)) {\n    const partialEscape = _.partial(escape, _, timeZone, dialect, format);\n    if (dialect === 'postgres' && !format) {\n      return dataTypes.ARRAY.prototype.stringify(val, {escape: partialEscape});\n    }\n    return val.map(partialEscape);\n  }\n\n  if (!val.replace) {\n    throw new Error('Invalid value ' + util.inspect(val));\n  }\n\n  if (dialect === 'postgres' || dialect === 'sqlite' || dialect === 'mssql') {\n    // http://www.postgresql.org/docs/8.2/static/sql-syntax-lexical.html#SQL-SYNTAX-STRINGS\n    // http://stackoverflow.com/q/603572/130598\n    val = val.replace(/'/g, \"''\");\n  } else {\n    val = val.replace(/[\\0\\n\\r\\b\\t\\\\\\'\\\"\\x1a]/g, s => {\n      switch (s) {\n        case '\\0': return '\\\\0';\n        case '\\n': return '\\\\n';\n        case '\\r': return '\\\\r';\n        case '\\b': return '\\\\b';\n        case '\\t': return '\\\\t';\n        case '\\x1a': return '\\\\Z';\n        default: return '\\\\' + s;\n      }\n    });\n  }\n  return (prependN ? \"N'\" : \"'\") + val + \"'\";\n}\nexports.escape = escape;\n\nfunction format(sql, values, timeZone, dialect) {\n  values = [].concat(values);\n\n  if (typeof sql !== 'string') {\n    throw new Error('Invalid SQL string provided: ' + sql);\n  }\n  return sql.replace(/\\?/g, match => {\n    if (!values.length) {\n      return match;\n    }\n\n    return escape(values.shift(), timeZone, dialect, true);\n  });\n}\nexports.format = format;\n\nfunction formatNamedParameters(sql, values, timeZone, dialect) {\n  return sql.replace(/\\:+(?!\\d)(\\w+)/g, (value, key) => {\n    if ('postgres' === dialect && '::' === value.slice(0, 2)) {\n      return value;\n    }\n\n    if (values[key] !== undefined) {\n      return escape(values[key], timeZone, dialect, true);\n    } else {\n      throw new Error('Named parameter \"' + value + '\" has no value in the given object.');\n    }\n  });\n}\nexports.formatNamedParameters = formatNamedParameters;\n","map":{"mappings":[{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/sequelize/lib/sql-string.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}}],"sources":{"../node_modules/sequelize/lib/sql-string.js":"'use strict';\n\nconst dataTypes = require('./data-types');\nconst util = require('util');\nconst _ = require('lodash');\n\nfunction escape(val, timeZone, dialect, format) {\n  let prependN = false;\n  if (val === undefined || val === null) {\n    return 'NULL';\n  }\n  switch (typeof val) {\n    case 'boolean':\n    // SQLite doesn't have true/false support. MySQL aliases true/false to 1/0\n    // for us. Postgres actually has a boolean type with true/false literals,\n    // but sequelize doesn't use it yet.\n      if (dialect === 'sqlite' || dialect === 'mssql') {\n        return +!!val;\n      }\n      return '' + !!val;\n    case 'number':\n      return val + '';\n    case 'string':\n    // In mssql, prepend N to all quoted vals which are originally a string (for\n    // unicode compatibility)\n      prependN = dialect === 'mssql';\n      break;\n  }\n\n  if (val instanceof Date) {\n    val = dataTypes[dialect].DATE.prototype.stringify(val, { timezone: timeZone });\n  }\n\n  if (Buffer.isBuffer(val)) {\n    if (dataTypes[dialect].BLOB) {\n      return dataTypes[dialect].BLOB.prototype.stringify(val);\n    }\n\n    return dataTypes.BLOB.prototype.stringify(val);\n  }\n\n  if (Array.isArray(val)) {\n    const partialEscape = _.partial(escape, _, timeZone, dialect, format);\n    if (dialect === 'postgres' && !format) {\n      return dataTypes.ARRAY.prototype.stringify(val, {escape: partialEscape});\n    }\n    return val.map(partialEscape);\n  }\n\n  if (!val.replace) {\n    throw new Error('Invalid value ' + util.inspect(val));\n  }\n\n  if (dialect === 'postgres' || dialect === 'sqlite' || dialect === 'mssql') {\n    // http://www.postgresql.org/docs/8.2/static/sql-syntax-lexical.html#SQL-SYNTAX-STRINGS\n    // http://stackoverflow.com/q/603572/130598\n    val = val.replace(/'/g, \"''\");\n  } else {\n    val = val.replace(/[\\0\\n\\r\\b\\t\\\\\\'\\\"\\x1a]/g, s => {\n      switch (s) {\n        case '\\0': return '\\\\0';\n        case '\\n': return '\\\\n';\n        case '\\r': return '\\\\r';\n        case '\\b': return '\\\\b';\n        case '\\t': return '\\\\t';\n        case '\\x1a': return '\\\\Z';\n        default: return '\\\\' + s;\n      }\n    });\n  }\n  return (prependN ? \"N'\" : \"'\") + val + \"'\";\n}\nexports.escape = escape;\n\nfunction format(sql, values, timeZone, dialect) {\n  values = [].concat(values);\n\n  if (typeof sql !== 'string') {\n    throw new Error('Invalid SQL string provided: ' + sql);\n  }\n  return sql.replace(/\\?/g, match => {\n    if (!values.length) {\n      return match;\n    }\n\n    return escape(values.shift(), timeZone, dialect, true);\n  });\n}\nexports.format = format;\n\nfunction formatNamedParameters(sql, values, timeZone, dialect) {\n  return sql.replace(/\\:+(?!\\d)(\\w+)/g, (value, key) => {\n    if ('postgres' === dialect && '::' === value.slice(0, 2)) {\n      return value;\n    }\n\n    if (values[key] !== undefined) {\n      return escape(values[key], timeZone, dialect, true);\n    } else {\n      throw new Error('Named parameter \"' + value + '\" has no value in the given object.');\n    }\n  });\n}\nexports.formatNamedParameters = formatNamedParameters;\n"},"lineCount":106}},"hash":"9c9ca6cf9d4671e27c330e44071d8771","cacheData":{"env":{}}}