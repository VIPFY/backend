{"dependencies":[{"name":"./utils","loc":{"line":3,"column":22}},{"name":"lodash","loc":{"line":4,"column":18}},{"name":"./data-types","loc":{"line":5,"column":26}},{"name":"./dialects/sqlite/query-interface","loc":{"line":6,"column":37}},{"name":"./dialects/mssql/query-interface","loc":{"line":7,"column":37}},{"name":"./dialects/mysql/query-interface","loc":{"line":8,"column":36}},{"name":"./transaction","loc":{"line":9,"column":28}},{"name":"./promise","loc":{"line":10,"column":24}},{"name":"./query-types","loc":{"line":11,"column":27}},{"name":"./operators","loc":{"line":12,"column":19}}],"generated":{"js":"'use strict';\n\nconst Utils = require('./utils');\nconst _ = require('lodash');\nconst DataTypes = require('./data-types');\nconst SQLiteQueryInterface = require('./dialects/sqlite/query-interface');\nconst MSSSQLQueryInterface = require('./dialects/mssql/query-interface');\nconst MySQLQueryInterface = require('./dialects/mysql/query-interface');\nconst Transaction = require('./transaction');\nconst Promise = require('./promise');\nconst QueryTypes = require('./query-types');\nconst Op = require('./operators');\n\n/**\n * The interface that Sequelize uses to talk to all databases\n *\n * @class QueryInterface\n */\nclass QueryInterface {\n  constructor(sequelize) {\n    this.sequelize = sequelize;\n    this.QueryGenerator = this.sequelize.dialect.QueryGenerator;\n  }\n\n  /**\n   * Creates a schema\n   *\n   * @param {String} schema    Schema name to create\n   * @param {Object} [options] Query options\n   *\n   * @return {Promise}\n   */\n  createSchema(schema, options) {\n    options = options || {};\n    const sql = this.QueryGenerator.createSchema(schema);\n    return this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Drops a schema\n   *\n   * @param {String} schema    Schema name to create\n   * @param {Object} [options] Query options\n   *\n   * @return {Promise}\n   */\n  dropSchema(schema, options) {\n    options = options || {};\n    const sql = this.QueryGenerator.dropSchema(schema);\n    return this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Drop all schemas\n   *\n   * @param {Object} [options] Query options\n   *\n   * @return {Promise}\n   */\n  dropAllSchemas(options) {\n    options = options || {};\n\n    if (!this.QueryGenerator._dialect.supports.schemas) {\n      return this.sequelize.drop(options);\n    } else {\n      return this.showAllSchemas(options).map(schemaName => this.dropSchema(schemaName, options));\n    }\n  }\n\n  /**\n   * Show all schemas\n   *\n   * @param {Object} [options] Query options\n   *\n   * @return {Promise<Array>}\n   */\n  showAllSchemas(options) {\n    options = _.assign({}, options, {\n      raw: true,\n      type: this.sequelize.QueryTypes.SELECT\n    });\n\n    const showSchemasSql = this.QueryGenerator.showSchemasQuery();\n\n    return this.sequelize.query(showSchemasSql, options).then(schemaNames => _.flatten(\n      _.map(schemaNames, value => value.schema_name ? value.schema_name : value)\n    ));\n  }\n\n  /**\n   * Returns database version\n   *\n   * @param {Object}    [options]      Query options\n   * @param {QueryType} [options.type] Query type\n   *\n   * @returns {Promise}\n   * @private\n   */\n  databaseVersion(options) {\n    return this.sequelize.query(\n      this.QueryGenerator.versionQuery(),\n      _.assign({}, options, { type: QueryTypes.VERSION })\n    );\n  }\n\n  /**\n   * Create a table with given set of attributes\n   *\n   * ```js\n   * queryInterface.createTable(\n   *   'nameOfTheNewTable',\n   *   {\n   *     id: {\n   *       type: Sequelize.INTEGER,\n   *       primaryKey: true,\n   *       autoIncrement: true\n   *     },\n   *     createdAt: {\n   *       type: Sequelize.DATE\n   *     },\n   *     updatedAt: {\n   *       type: Sequelize.DATE\n   *     },\n   *     attr1: Sequelize.STRING,\n   *     attr2: Sequelize.INTEGER,\n   *     attr3: {\n   *       type: Sequelize.BOOLEAN,\n   *       defaultValue: false,\n   *       allowNull: false\n   *     },\n   *     //foreign key usage\n   *     attr4: {\n   *       type: Sequelize.INTEGER,\n   *       references: {\n   *         model: 'another_table_name',\n   *         key: 'id'\n   *       },\n   *       onUpdate: 'cascade',\n   *       onDelete: 'cascade'\n   *     }\n   *   },\n   *   {\n   *     engine: 'MYISAM',    // default: 'InnoDB'\n   *     charset: 'latin1',   // default: null\n   *     schema: 'public'     // default: public, PostgreSQL only.\n   *   }\n   * )\n   * ```\n   *\n   * @param {String} tableName  Name of table to create\n   * @param {Array}  attributes List of table attributes to create\n   * @param {Object} [options]\n   * @param {Model}  [model]\n   *\n   * @return {Promise}\n   */\n  createTable(tableName, attributes, options, model) {\n    const keys = Object.keys(attributes);\n    const keyLen = keys.length;\n    let sql = '';\n    let i = 0;\n\n    options = _.clone(options) || {};\n\n    attributes = _.mapValues(attributes, attribute => {\n      if (!_.isPlainObject(attribute)) {\n        attribute = { type: attribute, allowNull: true };\n      }\n\n      attribute = this.sequelize.normalizeAttribute(attribute);\n\n      return attribute;\n    });\n\n    // Postgres requires a special SQL command for enums\n    if (this.sequelize.options.dialect === 'postgres') {\n      const promises = [];\n\n      for (i = 0; i < keyLen; i++) {\n        const attribute = attributes[keys[i]];\n        const type = attribute.type;\n\n        if (\n          type instanceof DataTypes.ENUM ||\n          (type instanceof DataTypes.ARRAY && type.type instanceof DataTypes.ENUM) //ARRAY sub type is ENUM\n        ) {\n          sql = this.QueryGenerator.pgListEnums(tableName, attribute.field || keys[i], options);\n          promises.push(this.sequelize.query(\n            sql,\n            _.assign({}, options, { plain: true, raw: true, type: QueryTypes.SELECT })\n          ));\n        }\n      }\n\n      return Promise.all(promises).then(results => {\n        const promises = [];\n        let enumIdx = 0;\n\n        for (i = 0; i < keyLen; i++) {\n          const attribute = attributes[keys[i]];\n          const type = attribute.type;\n          const enumType = type.type || type;\n\n          if (\n            type instanceof DataTypes.ENUM ||\n            (type instanceof DataTypes.ARRAY && enumType instanceof DataTypes.ENUM) //ARRAY sub type is ENUM\n          ) {\n            // If the enum type doesn't exist then create it\n            if (!results[enumIdx]) {\n              sql = this.QueryGenerator.pgEnum(tableName, attribute.field || keys[i], enumType, options);\n              promises.push(this.sequelize.query(\n                sql,\n                _.assign({}, options, { raw: true })\n              ));\n            } else if (!!results[enumIdx] && !!model) {\n              const enumVals = this.QueryGenerator.fromArray(results[enumIdx].enum_value);\n              const vals = enumType.values;\n\n              vals.forEach((value, idx) => {\n                // reset out after/before options since it's for every enum value\n                const valueOptions = _.clone(options);\n                valueOptions.before = null;\n                valueOptions.after = null;\n\n                if (enumVals.indexOf(value) === -1) {\n                  if (vals[idx + 1]) {\n                    valueOptions.before = vals[idx + 1];\n                  }\n                  else if (vals[idx - 1]) {\n                    valueOptions.after = vals[idx - 1];\n                  }\n                  valueOptions.supportsSearchPath = false;\n                  promises.push(this.sequelize.query(this.QueryGenerator.pgEnumAdd(tableName, attribute.field || keys[i], value, valueOptions), valueOptions));\n                }\n              });\n              enumIdx++;\n            }\n          }\n        }\n\n        if (!tableName.schema &&\n          (options.schema || !!model && model._schema)) {\n          tableName = this.QueryGenerator.addSchema({\n            tableName,\n            _schema: !!model && model._schema || options.schema\n          });\n        }\n\n        attributes = this.QueryGenerator.attributesToSQL(attributes, {\n          context: 'createTable'\n        });\n        sql = this.QueryGenerator.createTableQuery(tableName, attributes, options);\n\n        return Promise.all(promises)\n          .tap(() => {\n            // If ENUM processed, then refresh OIDs\n            if (promises.length) {\n              return this.sequelize.dialect.connectionManager._refreshDynamicOIDs()\n                .then(() => {\n                  return this.sequelize.refreshTypes(DataTypes.postgres);\n                });\n            }\n          })\n          .then(() => {\n            return this.sequelize.query(sql, options);\n          });\n      });\n    } else {\n      if (!tableName.schema &&\n        (options.schema || !!model && model._schema)) {\n        tableName = this.QueryGenerator.addSchema({\n          tableName,\n          _schema: !!model && model._schema || options.schema\n        });\n      }\n\n      attributes = this.QueryGenerator.attributesToSQL(attributes, {\n        context: 'createTable'\n      });\n      sql = this.QueryGenerator.createTableQuery(tableName, attributes, options);\n\n      return this.sequelize.query(sql, options);\n    }\n  }\n\n  /**\n   * Drops a table from database\n   *\n   * @param {String} tableName Table name to drop\n   * @param {Object} options   Query options\n   *\n   * @return {Promise}\n   */\n  dropTable(tableName, options) {\n    // if we're forcing we should be cascading unless explicitly stated otherwise\n    options = _.clone(options) || {};\n    options.cascade = options.cascade || options.force || false;\n\n    let sql = this.QueryGenerator.dropTableQuery(tableName, options);\n\n    return this.sequelize.query(sql, options).then(() => {\n      const promises = [];\n\n      // Since postgres has a special case for enums, we should drop the related\n      // enum type within the table and attribute\n      if (this.sequelize.options.dialect === 'postgres') {\n        const instanceTable = this.sequelize.modelManager.getModel(tableName, { attribute: 'tableName' });\n\n        if (instanceTable) {\n          const getTableName = (!options || !options.schema || options.schema === 'public' ? '' : options.schema + '_') + tableName;\n\n          const keys = Object.keys(instanceTable.rawAttributes);\n          const keyLen = keys.length;\n\n          for (let i = 0; i < keyLen; i++) {\n            if (instanceTable.rawAttributes[keys[i]].type instanceof DataTypes.ENUM) {\n              sql = this.QueryGenerator.pgEnumDrop(getTableName, keys[i]);\n              options.supportsSearchPath = false;\n              promises.push(this.sequelize.query(sql, _.assign({}, options, { raw: true })));\n            }\n          }\n        }\n      }\n\n      return Promise.all(promises).get(0);\n    });\n  }\n\n  /**\n   * Drop all tables from database\n   *\n   * @param {Object} [options]\n   * @param {Array}  [options.skip] List of table to skip\n   *\n   * @return {Promise}\n   */\n  dropAllTables(options) {\n    options = options || {};\n    const skip = options.skip || [];\n\n    const dropAllTables = tableNames => Promise.each(tableNames, tableName => {\n      // if tableName is not in the Array of tables names then dont drop it\n      if (skip.indexOf(tableName.tableName || tableName) === -1) {\n        return this.dropTable(tableName, _.assign({}, options, { cascade: true }) );\n      }\n    });\n\n    return this.showAllTables(options).then(tableNames => {\n      if (this.sequelize.options.dialect === 'sqlite') {\n        return this.sequelize.query('PRAGMA foreign_keys;', options).then(result => {\n          const foreignKeysAreEnabled = result.foreign_keys === 1;\n\n          if (foreignKeysAreEnabled) {\n            return this.sequelize.query('PRAGMA foreign_keys = OFF', options)\n              .then(() => dropAllTables(tableNames))\n              .then(() => this.sequelize.query('PRAGMA foreign_keys = ON', options));\n          } else {\n            return dropAllTables(tableNames);\n          }\n        });\n      } else {\n        return this.getForeignKeysForTables(tableNames, options).then(foreignKeys => {\n          const promises = [];\n\n          tableNames.forEach(tableName => {\n            let normalizedTableName = tableName;\n            if (_.isObject(tableName)) {\n              normalizedTableName = tableName.schema + '.' + tableName.tableName;\n            }\n\n            foreignKeys[normalizedTableName].forEach(foreignKey => {\n              const sql = this.QueryGenerator.dropForeignKeyQuery(tableName, foreignKey);\n              promises.push(this.sequelize.query(sql, options));\n            });\n          });\n\n          return Promise.all(promises).then(() => dropAllTables(tableNames));\n        });\n      }\n    });\n  }\n\n  /**\n   * Drop all enums from database, Postgres Only\n   *\n   * @param {Object} options Query options\n   *\n   * @return {Promise}\n   * @private\n   */\n  dropAllEnums(options) {\n    if (this.sequelize.getDialect() !== 'postgres') {\n      return Promise.resolve();\n    }\n\n    options = options || {};\n\n    return this.pgListEnums(null, options).map(result => this.sequelize.query(\n      this.QueryGenerator.pgEnumDrop(null, null, this.QueryGenerator.pgEscapeAndQuote(result.enum_name)),\n      _.assign({}, options, { raw: true })\n    ));\n  }\n\n  /**\n   * List all enums, Postgres Only\n   *\n   * @param {String} [tableName]  Table whose enum to list\n   * @param {Object} [options]    Query options\n   *\n   * @return {Promise}\n   * @private\n   */\n  pgListEnums(tableName, options) {\n    options = options || {};\n    const sql = this.QueryGenerator.pgListEnums(tableName);\n    return this.sequelize.query(sql, _.assign({}, options, { plain: false, raw: true, type: QueryTypes.SELECT }));\n  }\n\n  /**\n   * Renames a table\n   *\n   * @param {String} before    Current name of table\n   * @param {String} after     New name from table\n   * @param {Object} [options] Query options\n   *\n   * @return {Promise}\n   */\n  renameTable(before, after, options) {\n    options = options || {};\n    const sql = this.QueryGenerator.renameTableQuery(before, after);\n    return this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Get all tables in current database\n   *\n   * @param {Object}    [options] Query options\n   * @param {Boolean}   [options.raw=true] Run query in raw mode\n   * @param {QueryType} [options.type=QueryType.SHOWTABLE]\n   *\n   * @return {Promise<Array>}\n   * @private\n   */\n  showAllTables(options) {\n    options = _.assign({}, options, {\n      raw: true,\n      type: QueryTypes.SHOWTABLES\n    });\n\n    const showTablesSql = this.QueryGenerator.showTablesQuery();\n    return this.sequelize.query(showTablesSql, options).then(tableNames => _.flatten(tableNames));\n  }\n\n  /**\n   * Describe a table structure\n   *\n   * This method returns an array of hashes containing information about all attributes in the table.\n   *\n   * ```js\n   * {\n   *    name: {\n   *      type:         'VARCHAR(255)', // this will be 'CHARACTER VARYING' for pg!\n   *      allowNull:    true,\n   *      defaultValue: null\n   *    },\n   *    isBetaMember: {\n   *      type:         'TINYINT(1)', // this will be 'BOOLEAN' for pg!\n   *      allowNull:    false,\n   *      defaultValue: false\n   *    }\n   * }\n   * ```\n   * @param {String} tableName\n   * @param {Object} [options] Query options\n   *\n   * @return {Promise<Object>}\n   */\n  describeTable(tableName, options) {\n    let schema = null;\n    let schemaDelimiter = null;\n\n    if (typeof options === 'string') {\n      schema = options;\n    } else if (typeof options === 'object' && options !== null) {\n      schema = options.schema || null;\n      schemaDelimiter = options.schemaDelimiter || null;\n    }\n\n    if (typeof tableName === 'object' && tableName !== null) {\n      schema = tableName.schema;\n      tableName = tableName.tableName;\n    }\n\n    const sql = this.QueryGenerator.describeTableQuery(tableName, schema, schemaDelimiter);\n\n    return this.sequelize.query(\n      sql,\n      _.assign({}, options, { type: QueryTypes.DESCRIBE })\n    ).then(data => {\n      // If no data is returned from the query, then the table name may be wrong.\n      // Query generators that use information_schema for retrieving table info will just return an empty result set,\n      // it will not throw an error like built-ins do (e.g. DESCRIBE on MySql).\n      if (_.isEmpty(data)) {\n        return Promise.reject('No description found for \"' + tableName + '\" table. Check the table name and schema; remember, they _are_ case sensitive.');\n      } else {\n        return Promise.resolve(data);\n      }\n    });\n  }\n\n  /**\n   * Add a new column into a table\n   *\n   * @param {String} table     Table to add column to\n   * @param {String} key       Column name\n   * @param {Object} attribute Attribute definition\n   * @param {Object} [options] Query options\n   *\n   * @return {Promise}\n   */\n  addColumn(table, key, attribute, options) {\n    if (!table || !key || !attribute) {\n      throw new Error('addColumn takes atleast 3 arguments (table, attribute name, attribute definition)');\n    }\n\n    options = options || {};\n    attribute = this.sequelize.normalizeAttribute(attribute);\n    return this.sequelize.query(this.QueryGenerator.addColumnQuery(table, key, attribute), options);\n  }\n\n  /**\n   * Remove a column from table\n   *\n   * @param {String} tableName      Table to remove column from\n   * @param {String} attributeName  Columns name to remove\n   * @param {Object} [options]      Query options\n   *\n   * @return {Promise}\n   */\n  removeColumn(tableName, attributeName, options) {\n    options = options || {};\n    switch (this.sequelize.options.dialect) {\n      case 'sqlite':\n        // sqlite needs some special treatment as it cannot drop a column\n        return SQLiteQueryInterface.removeColumn.call(this, tableName, attributeName, options);\n      case 'mssql':\n        // mssql needs special treatment as it cannot drop a column with a default or foreign key constraint\n        return MSSSQLQueryInterface.removeColumn.call(this, tableName, attributeName, options);\n      case 'mysql':\n        // mysql needs special treatment as it cannot drop a column with a foreign key constraint\n        return MySQLQueryInterface.removeColumn.call(this, tableName, attributeName, options);\n      default:\n        return this.sequelize.query(this.QueryGenerator.removeColumnQuery(tableName, attributeName), options);\n    }\n  }\n\n  /**\n   * Change a column definition\n   *\n   * @param {String} tableName          Table name to change from\n   * @param {String} attributeName      Column name\n   * @param {Object} dataTypeOrOptions  Attribute definition for new column\n   * @param {Object} [options]          Query options\n   *\n   * @return {Promise}\n   */\n  changeColumn(tableName, attributeName, dataTypeOrOptions, options) {\n    const attributes = {};\n    options = options || {};\n\n    if (_.values(DataTypes).indexOf(dataTypeOrOptions) > -1) {\n      attributes[attributeName] = { type: dataTypeOrOptions, allowNull: true };\n    } else {\n      attributes[attributeName] = dataTypeOrOptions;\n    }\n\n    attributes[attributeName].type = this.sequelize.normalizeDataType(attributes[attributeName].type);\n\n    if (this.sequelize.options.dialect === 'sqlite') {\n      // sqlite needs some special treatment as it cannot change a column\n      return SQLiteQueryInterface.changeColumn.call(this, tableName, attributes, options);\n    } else {\n      const query = this.QueryGenerator.attributesToSQL(attributes);\n      const sql = this.QueryGenerator.changeColumnQuery(tableName, query);\n\n      return this.sequelize.query(sql, options);\n    }\n  }\n\n  /**\n   * Rename a column\n   *\n   * @param {String} tableName        Table name whose column to rename\n   * @param {String} attrNameBefore   Current column name\n   * @param {String} attrNameAfter    New column name\n   * @param {Object} [options]        Query option\n   *\n   * @return {Promise}\n   */\n  renameColumn(tableName, attrNameBefore, attrNameAfter, options) {\n    options = options || {};\n    return this.describeTable(tableName, options).then(data => {\n      if (!data[attrNameBefore]) {\n        throw new Error('Table ' + tableName + ' doesn\\'t have the column ' + attrNameBefore);\n      }\n\n      data = data[attrNameBefore] || {};\n\n      const _options = {};\n\n      _options[attrNameAfter] = {\n        attribute: attrNameAfter,\n        type: data.type,\n        allowNull: data.allowNull,\n        defaultValue: data.defaultValue\n      };\n\n      // fix: a not-null column cannot have null as default value\n      if (data.defaultValue === null && !data.allowNull) {\n        delete _options[attrNameAfter].defaultValue;\n      }\n\n      if (this.sequelize.options.dialect === 'sqlite') {\n        // sqlite needs some special treatment as it cannot rename a column\n        return SQLiteQueryInterface.renameColumn.call(this, tableName, attrNameBefore, attrNameAfter, options);\n      } else {\n        const sql = this.QueryGenerator.renameColumnQuery(\n          tableName,\n          attrNameBefore,\n          this.QueryGenerator.attributesToSQL(_options)\n        );\n        return this.sequelize.query(sql, options);\n      }\n    });\n  }\n\n  /**\n   * Add index to a column\n   *\n   * @param {String}  tableName        Table name to add index on\n   * @param {Object}  options\n   * @param {Array}   options.fields   List of attributes to add index on\n   * @param {Boolean} [options.unique] Create a unique index\n   * @param {String}  [options.using]  Useful for GIN indexes\n   * @param {String}  [options.type]   Type of index, available options are UNIQUE|FULLTEXT|SPATIAL\n   * @param {String}  [options.name]   Name of the index. Default is <table>_<attr1>_<attr2>\n   * @param {Object}  [options.where]  Where condition on index, for partial indexes\n   *\n   * @return {Promise}\n   */\n  addIndex(tableName, attributes, options, rawTablename) {\n    // Support for passing tableName, attributes, options or tableName, options (with a fields param which is the attributes)\n    if (!Array.isArray(attributes)) {\n      rawTablename = options;\n      options = attributes;\n      attributes = options.fields;\n    }\n    // testhint argsConform.end\n\n    if (!rawTablename) {\n      // Map for backwards compat\n      rawTablename = tableName;\n    }\n\n    options = Utils.cloneDeep(options);\n    options.fields = attributes;\n    const sql = this.QueryGenerator.addIndexQuery(tableName, options, rawTablename);\n    return this.sequelize.query(sql, _.assign({}, options, { supportsSearchPath: false }));\n  }\n\n  /**\n   * Show indexes on a table\n   *\n   * @param {String} tableName\n   * @param {Object} [options]   Query options\n   *\n   * @return {Promise<Array>}\n   * @private\n   */\n  showIndex(tableName, options) {\n    const sql = this.QueryGenerator.showIndexesQuery(tableName, options);\n    return this.sequelize.query(sql, _.assign({}, options, { type: QueryTypes.SHOWINDEXES }));\n  }\n\n  nameIndexes(indexes, rawTablename) {\n    return this.QueryGenerator.nameIndexes(indexes, rawTablename);\n  }\n\n  getForeignKeysForTables(tableNames, options) {\n    if (tableNames.length === 0) {\n      return Promise.resolve({});\n    }\n\n    options = _.assign({}, options || {}, { type: QueryTypes.FOREIGNKEYS });\n\n    return Promise.map(tableNames, tableName =>\n      this.sequelize.query(this.QueryGenerator.getForeignKeysQuery(tableName, this.sequelize.config.database), options)\n    ).then(results => {\n      const result = {};\n\n      tableNames.forEach((tableName, i) => {\n        if (_.isObject(tableName)) {\n          tableName = tableName.schema + '.' + tableName.tableName;\n        }\n\n        result[tableName] = _.isArray(results[i])\n          ? results[i].map(r => r.constraint_name)\n          : [results[i] && results[i].constraint_name];\n\n        result[tableName] = result[tableName].filter(_.identity);\n      });\n\n      return result;\n    });\n  }\n\n  /**\n   * Remove an already existing index from a table\n   *\n   * @param {String} tableName             Table name to drop index from\n   * @param {String} indexNameOrAttributes Index name\n   * @param {Object} [options]             Query options\n   *\n   * @return {Promise}\n   */\n  removeIndex(tableName, indexNameOrAttributes, options) {\n    options = options || {};\n    const sql = this.QueryGenerator.removeIndexQuery(tableName, indexNameOrAttributes);\n    return this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Add constraints to table\n   *\n   * Available constraints:\n   * - UNIQUE\n   * - DEFAULT (MSSQL only)\n   * - CHECK (MySQL - Ignored by the database engine )\n   * - FOREIGN KEY\n   * - PRIMARY KEY\n   *\n   * UNIQUE\n   * ```js\n   * queryInterface.addConstraint('Users', ['email'], {\n   *   type: 'unique',\n   *   name: 'custom_unique_constraint_name'\n   * });\n   * ```\n   *\n   * CHECK\n   * ```js\n   * queryInterface.addConstraint('Users', ['roles'], {\n   *   type: 'check',\n   *   where: {\n   *      roles: ['user', 'admin', 'moderator', 'guest']\n   *   }\n   * });\n   * ```\n   * Default - MSSQL only\n   * ```js\n   * queryInterface.addConstraint('Users', ['roles'], {\n   *    type: 'default',\n   *    defaultValue: 'guest'\n   * });\n   * ```\n   *\n   * Primary Key\n   * ```js\n   * queryInterface.addConstraint('Users', ['username'], {\n   *    type: 'primary key',\n   *    name: 'custom_primary_constraint_name'\n   * });\n   * ```\n   *\n   * Foreign Key\n   * ```js\n   * queryInterface.addConstraint('Posts', ['username'], {\n   *   type: 'FOREIGN KEY',\n   *   name: 'custom_fkey_constraint_name',\n   *   references: { //Required field\n   *     table: 'target_table_name',\n   *     field: 'target_column_name'\n   *   },\n   *   onDelete: 'cascade',\n   *   onUpdate: 'cascade'\n   * });\n   * ```\n   *\n   * @param {String} tableName                  Table name where you want to add a constraint\n   * @param {Array}  attributes                 Array of column names to apply the constraint over\n   * @param {Object} options                    An object to define the constraint name, type etc\n   * @param {String} options.type               Type of constraint. One of the values in available constraints(case insensitive)\n   * @param {String} [options.name]             Name of the constraint. If not specified, sequelize automatically creates a named constraint based on constraint type, table & column names\n   * @param {String} [options.defaultValue]     The value for the default constraint\n   * @param {Object} [options.where]            Where clause/expression for the CHECK constraint\n   * @param {Object} [options.references]       Object specifying target table, column name to create foreign key constraint\n   * @param {String} [options.references.table] Target table name\n   * @param {String} [options.references.field] Target column name\n   *\n   * @return {Promise}\n   */\n  addConstraint(tableName, attributes, options, rawTablename) {\n    if (!Array.isArray(attributes)) {\n      rawTablename = options;\n      options = attributes;\n      attributes = options.fields;\n    }\n\n    if (!options.type) {\n      throw new Error('Constraint type must be specified through options.type');\n    }\n\n    if (!rawTablename) {\n      // Map for backwards compat\n      rawTablename = tableName;\n    }\n\n    options = Utils.cloneDeep(options);\n    options.fields = attributes;\n\n    if (this.sequelize.dialect.name === 'sqlite') {\n      return SQLiteQueryInterface.addConstraint.call(this, tableName, options, rawTablename);\n    } else {\n      const sql = this.QueryGenerator.addConstraintQuery(tableName, options, rawTablename);\n      return this.sequelize.query(sql, options);\n    }\n  }\n\n  showConstraint(tableName, options) {\n    const sql = this.QueryGenerator.showConstraintsQuery(tableName, options);\n    return this.sequelize.query(sql, Object.assign({}, options, { type: QueryTypes.SHOWCONSTRAINTS }));\n  }\n\n  /**\n   *\n   * @param {String} tableName       Table name to drop constraint from\n   * @param {String} constraintName  Constraint name\n   * @param {Object} options         Query options\n   *\n   * @return {Promise}\n   */\n  removeConstraint(tableName, constraintName, options) {\n    options = options || {};\n\n    switch (this.sequelize.options.dialect) {\n      case 'mysql':\n        //Mysql does not support DROP CONSTRAINT. Instead DROP PRIMARY, FOREIGN KEY, INDEX should be used\n        return MySQLQueryInterface.removeConstraint.call(this, tableName, constraintName, options);\n      case 'sqlite':\n        return SQLiteQueryInterface.removeConstraint.call(this, tableName, constraintName, options);\n      default:\n        const sql = this.QueryGenerator.removeConstraintQuery(tableName, constraintName);\n        return this.sequelize.query(sql, options);\n    }\n  }\n\n  insert(instance, tableName, values, options) {\n    options = Utils.cloneDeep(options);\n    options.hasTrigger = instance && instance.constructor.options.hasTrigger;\n    const sql = this.QueryGenerator.insertQuery(tableName, values, instance && instance.constructor.rawAttributes, options);\n\n    options.type = QueryTypes.INSERT;\n    options.instance = instance;\n\n    return this.sequelize.query(sql, options).then(results => {\n      if (instance) results[0].isNewRecord = false;\n      return results;\n    });\n  }\n\n  upsert(tableName, valuesByField, updateValues, where, model, options) {\n    const wheres = [];\n    const attributes = Object.keys(valuesByField);\n    let indexes = [];\n    let indexFields;\n\n    options = _.clone(options);\n\n    if (!Utils.isWhereEmpty(where)) {\n      wheres.push(where);\n    }\n\n    // Lets combine uniquekeys and indexes into one\n    indexes = _.map(model.options.uniqueKeys, value => {\n      return value.fields;\n    });\n\n    _.each(model.options.indexes, value => {\n      if (value.unique) {\n        // fields in the index may both the strings or objects with an attribute property - lets sanitize that\n        indexFields = _.map(value.fields, field => {\n          if (_.isPlainObject(field)) {\n            return field.attribute;\n          }\n          return field;\n        });\n        indexes.push(indexFields);\n      }\n    });\n\n    for (const index of indexes) {\n      if (_.intersection(attributes, index).length === index.length) {\n        where = {};\n        for (const field of index) {\n          where[field] = valuesByField[field];\n        }\n        wheres.push(where);\n      }\n    }\n\n    where = { [Op.or]: wheres };\n\n    options.type = QueryTypes.UPSERT;\n    options.raw = true;\n\n    const sql = this.QueryGenerator.upsertQuery(tableName, valuesByField, updateValues, where, model, options);\n    return this.sequelize.query(sql, options).then(rowCount => {\n      if (rowCount === undefined) {\n        return rowCount;\n      }\n\n      // MySQL returns 1 for inserted, 2 for updated http://dev.mysql.com/doc/refman/5.0/en/insert-on-duplicate.html. Postgres has been modded to do the same\n\n      return rowCount === 1;\n    });\n  }\n\n  /**\n   * Insert records into a table\n   *\n   * ```js\n   * queryInterface.bulkInsert('roles', [{\n   *    label: 'user',\n   *    createdAt: new Date(),\n   *    updatedAt: new Date()\n   *  }, {\n   *    label: 'admin',\n   *    createdAt: new Date(),\n   *    updatedAt: new Date()\n   *  }]);\n   * ```\n   *\n   * @param {String} tableName Table name to insert record to\n   * @param {Array}  records   List of records to insert\n   *\n   * @return {Promise}\n   */\n  bulkInsert(tableName, records, options, attributes) {\n    options = _.clone(options) || {};\n    options.type = QueryTypes.INSERT;\n    const sql = this.QueryGenerator.bulkInsertQuery(tableName, records, options, attributes);\n    return this.sequelize.query(sql, options).then(results => results[0]);\n  }\n\n  update(instance, tableName, values, identifier, options) {\n    options = _.clone(options || {});\n    options.hasTrigger = !!(instance && instance._modelOptions && instance._modelOptions.hasTrigger);\n\n    const sql = this.QueryGenerator.updateQuery(tableName, values, identifier, options, instance.constructor.rawAttributes);\n\n    options.type = QueryTypes.UPDATE;\n\n    options.instance = instance;\n    return this.sequelize.query(sql, options);\n  }\n\n  bulkUpdate(tableName, values, identifier, options, attributes) {\n    options = Utils.cloneDeep(options);\n    if (typeof identifier === 'object') identifier = Utils.cloneDeep(identifier);\n\n    const sql = this.QueryGenerator.updateQuery(tableName, values, identifier, options, attributes);\n    const table = _.isObject(tableName) ? tableName : { tableName };\n    const model = _.find(this.sequelize.modelManager.models, { tableName: table.tableName });\n\n    options.model = model;\n    return this.sequelize.query(sql, options);\n  }\n\n  delete(instance, tableName, identifier, options) {\n    const cascades = [];\n    const sql = this.QueryGenerator.deleteQuery(tableName, identifier, null, instance.constructor);\n\n    options = _.clone(options) || {};\n\n    // Check for a restrict field\n    if (!!instance.constructor && !!instance.constructor.associations) {\n      const keys = Object.keys(instance.constructor.associations);\n      const length = keys.length;\n      let association;\n\n      for (let i = 0; i < length; i++) {\n        association = instance.constructor.associations[keys[i]];\n        if (association.options && association.options.onDelete &&\n          association.options.onDelete.toLowerCase() === 'cascade' &&\n          association.options.useHooks === true) {\n          cascades.push(association.accessors.get);\n        }\n      }\n    }\n\n    return Promise.each(cascades, cascade => {\n      return instance[cascade](options).then(instances => {\n        // Check for hasOne relationship with non-existing associate (\"has zero\")\n        if (!instances) {\n          return Promise.resolve();\n        }\n\n        if (!Array.isArray(instances)) instances = [instances];\n\n        return Promise.each(instances, instance => instance.destroy(options));\n      });\n    }).then(() => {\n      options.instance = instance;\n      return this.sequelize.query(sql, options);\n    });\n  }\n\n  /**\n   * Delete records from a table\n   *\n   * @param {String} tableName  Table name from where to delete records\n   * @param {Object} identifier Where conditions to find records to delete\n   *\n   * @return {Promise}\n   */\n  bulkDelete(tableName, identifier, options, model) {\n    options = Utils.cloneDeep(options);\n    options = _.defaults(options, {limit: null});\n    if (typeof identifier === 'object') identifier = Utils.cloneDeep(identifier);\n\n    const sql = this.QueryGenerator.deleteQuery(tableName, identifier, options, model);\n    return this.sequelize.query(sql, options);\n  }\n\n  select(model, tableName, options) {\n    options = Utils.cloneDeep(options);\n    options.type = QueryTypes.SELECT;\n    options.model = model;\n\n    return this.sequelize.query(\n      this.QueryGenerator.selectQuery(tableName, options, model),\n      options\n    );\n  }\n\n  increment(model, tableName, values, identifier, options) {\n    options = Utils.cloneDeep(options);\n\n    const sql = this.QueryGenerator.arithmeticQuery('+', tableName, values, identifier, options, options.attributes);\n\n    options.type = QueryTypes.UPDATE;\n    options.model = model;\n\n    return this.sequelize.query(sql, options);\n  }\n\n  decrement(model, tableName, values, identifier, options) {\n    options = Utils.cloneDeep(options);\n\n    const sql = this.QueryGenerator.arithmeticQuery('-', tableName, values, identifier, options, options.attributes);\n\n    options.type = QueryTypes.UPDATE;\n    options.model = model;\n\n    return this.sequelize.query(sql, options);\n  }\n\n  rawSelect(tableName, options, attributeSelector, Model) {\n    if (options.schema) {\n      tableName = this.QueryGenerator.addSchema({\n        tableName,\n        _schema: options.schema\n      });\n    }\n\n    options = Utils.cloneDeep(options);\n    options = _.defaults(options, {\n      raw: true,\n      plain: true,\n      type: QueryTypes.SELECT\n    });\n\n    const sql = this.QueryGenerator.selectQuery(tableName, options, Model);\n\n    if (attributeSelector === undefined) {\n      throw new Error('Please pass an attribute selector!');\n    }\n\n    return this.sequelize.query(sql, options).then(data => {\n      if (!options.plain) {\n        return data;\n      }\n\n      let result = data ? data[attributeSelector] : null;\n\n      if (options && options.dataType) {\n        const dataType = options.dataType;\n\n        if (dataType instanceof DataTypes.DECIMAL || dataType instanceof DataTypes.FLOAT) {\n          result = parseFloat(result);\n        } else if (dataType instanceof DataTypes.INTEGER || dataType instanceof DataTypes.BIGINT) {\n          result = parseInt(result, 10);\n        } else if (dataType instanceof DataTypes.DATE) {\n          if (!_.isNull(result) && !_.isDate(result)) {\n            result = new Date(result);\n          }\n        } else if (dataType instanceof DataTypes.STRING) {\n          // Nothing to do, result is already a string.\n        }\n      }\n\n      return result;\n    });\n  }\n\n  createTrigger(tableName, triggerName, timingType, fireOnArray, functionName, functionParams, optionsArray, options) {\n    const sql = this.QueryGenerator.createTrigger(tableName, triggerName, timingType, fireOnArray, functionName, functionParams, optionsArray);\n    options = options || {};\n    if (sql) {\n      return this.sequelize.query(sql, options);\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  dropTrigger(tableName, triggerName, options) {\n    const sql = this.QueryGenerator.dropTrigger(tableName, triggerName);\n    options = options || {};\n\n    if (sql) {\n      return this.sequelize.query(sql, options);\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  renameTrigger(tableName, oldTriggerName, newTriggerName, options) {\n    const sql = this.QueryGenerator.renameTrigger(tableName, oldTriggerName, newTriggerName);\n    options = options || {};\n\n    if (sql) {\n      return this.sequelize.query(sql, options);\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  /**\n   * Create SQL function\n   *\n   * ```js\n   * queryInterface.createFunction(\n   *   'someFunction',\n   *   [\n   *     {type: 'integer', name: 'param', direction: 'IN'}\n   *   ],\n   *   'integer',\n   *   'plpgsql',\n   *   'RETURN param + 1;',\n   *   [\n   *     'IMMUTABLE',\n   *     'LEAKPROOF'\n   *   ]\n   * );\n   * ```\n   *\n   * @param {String} functionName Name of SQL function to create\n   * @param {Array}  params       List of parameters declared for SQL function\n   * @param {String} returnType   SQL type of function returned value\n   * @param {String} language     The name of the language that the function is implemented in\n   * @param {String} body         Source code of function\n   * @param {Array}  optionsArray Extra-options for creation\n   * @param {Object} [options]\n   *\n   * @return {Promise}\n   */\n  createFunction(functionName, params, returnType, language, body, optionsArray, options) {\n    const sql = this.QueryGenerator.createFunction(functionName, params, returnType, language, body, optionsArray);\n    options = options || {};\n\n    if (sql) {\n      return this.sequelize.query(sql, options);\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  /**\n   * Drop SQL function\n   *\n   * ```js\n   * queryInterface.dropFunction(\n   *   'someFunction',\n   *   [\n   *     {type: 'varchar', name: 'param1', direction: 'IN'},\n   *     {type: 'integer', name: 'param2', direction: 'INOUT'}\n   *   ]\n   * );\n   * ```\n   *\n   * @param {String} functionName Name of SQL function to drop\n   * @param {Array}  params       List of parameters declared for SQL function\n   * @param {Object} [options]\n   *\n   * @return {Promise}\n   */\n  dropFunction(functionName, params, options) {\n    const sql = this.QueryGenerator.dropFunction(functionName, params);\n    options = options || {};\n\n    if (sql) {\n      return this.sequelize.query(sql, options);\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  /**\n   * Rename SQL function\n   *\n   * ```js\n   * queryInterface.renameFunction(\n   *   'fooFunction',\n   *   [\n   *     {type: 'varchar', name: 'param1', direction: 'IN'},\n   *     {type: 'integer', name: 'param2', direction: 'INOUT'}\n   *   ],\n   *   'barFunction'\n   * );\n   * ```\n   *\n   * @param {String} oldFunctionName\n   * @param {Array}  params           List of parameters declared for SQL function\n   * @param {String} newFunctionName\n   * @param {Object} [options]\n   *\n   * @return {Promise}\n   */\n  renameFunction(oldFunctionName, params, newFunctionName, options) {\n    const sql = this.QueryGenerator.renameFunction(oldFunctionName, params, newFunctionName);\n    options = options || {};\n\n    if (sql) {\n      return this.sequelize.query(sql, options);\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  // Helper methods useful for querying\n\n  /**\n   * Escape an identifier (e.g. a table or attribute name). If force is true,\n   * the identifier will be quoted even if the `quoteIdentifiers` option is\n   * false.\n   * @private\n   */\n  quoteIdentifier(identifier, force) {\n    return this.QueryGenerator.quoteIdentifier(identifier, force);\n  }\n\n  quoteTable(identifier) {\n    return this.QueryGenerator.quoteTable(identifier);\n  }\n\n  /**\n   * Split an identifier into .-separated tokens and quote each part.\n   * If force is true, the identifier will be quoted even if the\n   * `quoteIdentifiers` option is false.\n   * @private\n   */\n  quoteIdentifiers(identifiers, force) {\n    return this.QueryGenerator.quoteIdentifiers(identifiers, force);\n  }\n\n  /**\n   * Escape a value (e.g. a string, number or date)\n   * @private\n   */\n  escape(value) {\n    return this.QueryGenerator.escape(value);\n  }\n\n  setAutocommit(transaction, value, options) {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error('Unable to set autocommit for a transaction without transaction object!');\n    }\n    if (transaction.parent) {\n      // Not possible to set a separate isolation level for savepoints\n      return Promise.resolve();\n    }\n\n    options = _.assign({}, options, {\n      transaction: transaction.parent || transaction\n    });\n\n    const sql = this.QueryGenerator.setAutocommitQuery(value, {\n      parent: transaction.parent\n    });\n\n    if (!sql) return Promise.resolve();\n\n    return this.sequelize.query(sql, options);\n  }\n\n  setIsolationLevel(transaction, value, options) {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error('Unable to set isolation level for a transaction without transaction object!');\n    }\n\n    if (transaction.parent || !value) {\n      // Not possible to set a separate isolation level for savepoints\n      return Promise.resolve();\n    }\n\n    options = _.assign({}, options, {\n      transaction: transaction.parent || transaction\n    });\n\n    const sql = this.QueryGenerator.setIsolationLevelQuery(value, {\n      parent: transaction.parent\n    });\n\n    if (!sql) return Promise.resolve();\n\n    return this.sequelize.query(sql, options);\n  }\n\n  startTransaction(transaction, options) {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error('Unable to start a transaction without transaction object!');\n    }\n\n    options = _.assign({}, options, {\n      transaction: transaction.parent || transaction\n    });\n    options.transaction.name = transaction.parent ? transaction.name : undefined;\n    const sql = this.QueryGenerator.startTransactionQuery(transaction);\n\n    return this.sequelize.query(sql, options);\n  }\n\n  deferConstraints(transaction, options) {\n    options = _.assign({}, options, {\n      transaction: transaction.parent || transaction\n    });\n\n    const sql = this.QueryGenerator.deferConstraintsQuery(options);\n\n    if (sql) {\n      return this.sequelize.query(sql, options);\n    }\n\n    return Promise.resolve();\n  }\n\n  commitTransaction(transaction, options) {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error('Unable to commit a transaction without transaction object!');\n    }\n    if (transaction.parent) {\n      // Savepoints cannot be committed\n      return Promise.resolve();\n    }\n\n    options = _.assign({}, options, {\n      transaction: transaction.parent || transaction,\n      supportsSearchPath: false\n    });\n\n    const sql = this.QueryGenerator.commitTransactionQuery(transaction);\n    const promise = this.sequelize.query(sql, options);\n\n    transaction.finished = 'commit';\n\n    return promise;\n  }\n\n  rollbackTransaction(transaction, options) {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error('Unable to rollback a transaction without transaction object!');\n    }\n\n    options = _.assign({}, options, {\n      transaction: transaction.parent || transaction,\n      supportsSearchPath: false\n    });\n    options.transaction.name = transaction.parent ? transaction.name : undefined;\n    const sql = this.QueryGenerator.rollbackTransactionQuery(transaction);\n    const promise = this.sequelize.query(sql, options);\n\n    transaction.finished = 'rollback';\n\n    return promise;\n  }\n}\n\nmodule.exports = QueryInterface;\nmodule.exports.QueryInterface = QueryInterface;\nmodule.exports.default = QueryInterface;\n","map":{"mappings":[{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1008,"column":0},"generated":{"line":1008,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1009,"column":0},"generated":{"line":1009,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1010,"column":0},"generated":{"line":1010,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1011,"column":0},"generated":{"line":1011,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1012,"column":0},"generated":{"line":1012,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1013,"column":0},"generated":{"line":1013,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1014,"column":0},"generated":{"line":1014,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1015,"column":0},"generated":{"line":1015,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1016,"column":0},"generated":{"line":1016,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1017,"column":0},"generated":{"line":1017,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1018,"column":0},"generated":{"line":1018,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1019,"column":0},"generated":{"line":1019,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1020,"column":0},"generated":{"line":1020,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1021,"column":0},"generated":{"line":1021,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1022,"column":0},"generated":{"line":1022,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1023,"column":0},"generated":{"line":1023,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1024,"column":0},"generated":{"line":1024,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1025,"column":0},"generated":{"line":1025,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1026,"column":0},"generated":{"line":1026,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1027,"column":0},"generated":{"line":1027,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1028,"column":0},"generated":{"line":1028,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1029,"column":0},"generated":{"line":1029,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1030,"column":0},"generated":{"line":1030,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1031,"column":0},"generated":{"line":1031,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1032,"column":0},"generated":{"line":1032,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1033,"column":0},"generated":{"line":1033,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1034,"column":0},"generated":{"line":1034,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1035,"column":0},"generated":{"line":1035,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1036,"column":0},"generated":{"line":1036,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1037,"column":0},"generated":{"line":1037,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1038,"column":0},"generated":{"line":1038,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1039,"column":0},"generated":{"line":1039,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1040,"column":0},"generated":{"line":1040,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1041,"column":0},"generated":{"line":1041,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1042,"column":0},"generated":{"line":1042,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1043,"column":0},"generated":{"line":1043,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1044,"column":0},"generated":{"line":1044,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1045,"column":0},"generated":{"line":1045,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1046,"column":0},"generated":{"line":1046,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1047,"column":0},"generated":{"line":1047,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1048,"column":0},"generated":{"line":1048,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1049,"column":0},"generated":{"line":1049,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1050,"column":0},"generated":{"line":1050,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1051,"column":0},"generated":{"line":1051,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1052,"column":0},"generated":{"line":1052,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1053,"column":0},"generated":{"line":1053,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1054,"column":0},"generated":{"line":1054,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1055,"column":0},"generated":{"line":1055,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1056,"column":0},"generated":{"line":1056,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1057,"column":0},"generated":{"line":1057,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1058,"column":0},"generated":{"line":1058,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1059,"column":0},"generated":{"line":1059,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1060,"column":0},"generated":{"line":1060,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1061,"column":0},"generated":{"line":1061,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1062,"column":0},"generated":{"line":1062,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1063,"column":0},"generated":{"line":1063,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1064,"column":0},"generated":{"line":1064,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1065,"column":0},"generated":{"line":1065,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1066,"column":0},"generated":{"line":1066,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1067,"column":0},"generated":{"line":1067,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1068,"column":0},"generated":{"line":1068,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1069,"column":0},"generated":{"line":1069,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1070,"column":0},"generated":{"line":1070,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1071,"column":0},"generated":{"line":1071,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1072,"column":0},"generated":{"line":1072,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1073,"column":0},"generated":{"line":1073,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1074,"column":0},"generated":{"line":1074,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1075,"column":0},"generated":{"line":1075,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1076,"column":0},"generated":{"line":1076,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1077,"column":0},"generated":{"line":1077,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1078,"column":0},"generated":{"line":1078,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1079,"column":0},"generated":{"line":1079,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1080,"column":0},"generated":{"line":1080,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1081,"column":0},"generated":{"line":1081,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1082,"column":0},"generated":{"line":1082,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1083,"column":0},"generated":{"line":1083,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1084,"column":0},"generated":{"line":1084,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1085,"column":0},"generated":{"line":1085,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1086,"column":0},"generated":{"line":1086,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1087,"column":0},"generated":{"line":1087,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1088,"column":0},"generated":{"line":1088,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1089,"column":0},"generated":{"line":1089,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1090,"column":0},"generated":{"line":1090,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1091,"column":0},"generated":{"line":1091,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1092,"column":0},"generated":{"line":1092,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1093,"column":0},"generated":{"line":1093,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1094,"column":0},"generated":{"line":1094,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1095,"column":0},"generated":{"line":1095,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1096,"column":0},"generated":{"line":1096,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1097,"column":0},"generated":{"line":1097,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1098,"column":0},"generated":{"line":1098,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1099,"column":0},"generated":{"line":1099,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1100,"column":0},"generated":{"line":1100,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1101,"column":0},"generated":{"line":1101,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1102,"column":0},"generated":{"line":1102,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1103,"column":0},"generated":{"line":1103,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1104,"column":0},"generated":{"line":1104,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1105,"column":0},"generated":{"line":1105,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1106,"column":0},"generated":{"line":1106,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1107,"column":0},"generated":{"line":1107,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1108,"column":0},"generated":{"line":1108,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1109,"column":0},"generated":{"line":1109,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1110,"column":0},"generated":{"line":1110,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1111,"column":0},"generated":{"line":1111,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1112,"column":0},"generated":{"line":1112,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1113,"column":0},"generated":{"line":1113,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1114,"column":0},"generated":{"line":1114,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1115,"column":0},"generated":{"line":1115,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1116,"column":0},"generated":{"line":1116,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1117,"column":0},"generated":{"line":1117,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1118,"column":0},"generated":{"line":1118,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1119,"column":0},"generated":{"line":1119,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1120,"column":0},"generated":{"line":1120,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1121,"column":0},"generated":{"line":1121,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1122,"column":0},"generated":{"line":1122,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1123,"column":0},"generated":{"line":1123,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1124,"column":0},"generated":{"line":1124,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1125,"column":0},"generated":{"line":1125,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1126,"column":0},"generated":{"line":1126,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1127,"column":0},"generated":{"line":1127,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1128,"column":0},"generated":{"line":1128,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1129,"column":0},"generated":{"line":1129,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1130,"column":0},"generated":{"line":1130,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1131,"column":0},"generated":{"line":1131,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1132,"column":0},"generated":{"line":1132,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1133,"column":0},"generated":{"line":1133,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1134,"column":0},"generated":{"line":1134,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1135,"column":0},"generated":{"line":1135,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1136,"column":0},"generated":{"line":1136,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1137,"column":0},"generated":{"line":1137,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1138,"column":0},"generated":{"line":1138,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1139,"column":0},"generated":{"line":1139,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1140,"column":0},"generated":{"line":1140,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1141,"column":0},"generated":{"line":1141,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1142,"column":0},"generated":{"line":1142,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1143,"column":0},"generated":{"line":1143,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1144,"column":0},"generated":{"line":1144,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1145,"column":0},"generated":{"line":1145,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1146,"column":0},"generated":{"line":1146,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1147,"column":0},"generated":{"line":1147,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1148,"column":0},"generated":{"line":1148,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1149,"column":0},"generated":{"line":1149,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1150,"column":0},"generated":{"line":1150,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1151,"column":0},"generated":{"line":1151,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1152,"column":0},"generated":{"line":1152,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1153,"column":0},"generated":{"line":1153,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1154,"column":0},"generated":{"line":1154,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1155,"column":0},"generated":{"line":1155,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1156,"column":0},"generated":{"line":1156,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1157,"column":0},"generated":{"line":1157,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1158,"column":0},"generated":{"line":1158,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1159,"column":0},"generated":{"line":1159,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1160,"column":0},"generated":{"line":1160,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1161,"column":0},"generated":{"line":1161,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1162,"column":0},"generated":{"line":1162,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1163,"column":0},"generated":{"line":1163,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1164,"column":0},"generated":{"line":1164,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1165,"column":0},"generated":{"line":1165,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1166,"column":0},"generated":{"line":1166,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1167,"column":0},"generated":{"line":1167,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1168,"column":0},"generated":{"line":1168,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1169,"column":0},"generated":{"line":1169,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1170,"column":0},"generated":{"line":1170,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1171,"column":0},"generated":{"line":1171,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1172,"column":0},"generated":{"line":1172,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1173,"column":0},"generated":{"line":1173,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1174,"column":0},"generated":{"line":1174,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1175,"column":0},"generated":{"line":1175,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1176,"column":0},"generated":{"line":1176,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1177,"column":0},"generated":{"line":1177,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1178,"column":0},"generated":{"line":1178,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1179,"column":0},"generated":{"line":1179,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1180,"column":0},"generated":{"line":1180,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1181,"column":0},"generated":{"line":1181,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1182,"column":0},"generated":{"line":1182,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1183,"column":0},"generated":{"line":1183,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1184,"column":0},"generated":{"line":1184,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1185,"column":0},"generated":{"line":1185,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1186,"column":0},"generated":{"line":1186,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1187,"column":0},"generated":{"line":1187,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1188,"column":0},"generated":{"line":1188,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1189,"column":0},"generated":{"line":1189,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1190,"column":0},"generated":{"line":1190,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1191,"column":0},"generated":{"line":1191,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1192,"column":0},"generated":{"line":1192,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1193,"column":0},"generated":{"line":1193,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1194,"column":0},"generated":{"line":1194,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1195,"column":0},"generated":{"line":1195,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1196,"column":0},"generated":{"line":1196,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1197,"column":0},"generated":{"line":1197,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1198,"column":0},"generated":{"line":1198,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1199,"column":0},"generated":{"line":1199,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1200,"column":0},"generated":{"line":1200,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1201,"column":0},"generated":{"line":1201,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1202,"column":0},"generated":{"line":1202,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1203,"column":0},"generated":{"line":1203,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1204,"column":0},"generated":{"line":1204,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1205,"column":0},"generated":{"line":1205,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1206,"column":0},"generated":{"line":1206,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1207,"column":0},"generated":{"line":1207,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1208,"column":0},"generated":{"line":1208,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1209,"column":0},"generated":{"line":1209,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1210,"column":0},"generated":{"line":1210,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1211,"column":0},"generated":{"line":1211,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1212,"column":0},"generated":{"line":1212,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1213,"column":0},"generated":{"line":1213,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1214,"column":0},"generated":{"line":1214,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1215,"column":0},"generated":{"line":1215,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1216,"column":0},"generated":{"line":1216,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1217,"column":0},"generated":{"line":1217,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1218,"column":0},"generated":{"line":1218,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1219,"column":0},"generated":{"line":1219,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1220,"column":0},"generated":{"line":1220,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1221,"column":0},"generated":{"line":1221,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1222,"column":0},"generated":{"line":1222,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1223,"column":0},"generated":{"line":1223,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1224,"column":0},"generated":{"line":1224,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1225,"column":0},"generated":{"line":1225,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1226,"column":0},"generated":{"line":1226,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1227,"column":0},"generated":{"line":1227,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1228,"column":0},"generated":{"line":1228,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1229,"column":0},"generated":{"line":1229,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1230,"column":0},"generated":{"line":1230,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1231,"column":0},"generated":{"line":1231,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1232,"column":0},"generated":{"line":1232,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1233,"column":0},"generated":{"line":1233,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1234,"column":0},"generated":{"line":1234,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1235,"column":0},"generated":{"line":1235,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1236,"column":0},"generated":{"line":1236,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1237,"column":0},"generated":{"line":1237,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1238,"column":0},"generated":{"line":1238,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1239,"column":0},"generated":{"line":1239,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1240,"column":0},"generated":{"line":1240,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1241,"column":0},"generated":{"line":1241,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1242,"column":0},"generated":{"line":1242,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1243,"column":0},"generated":{"line":1243,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1244,"column":0},"generated":{"line":1244,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1245,"column":0},"generated":{"line":1245,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1246,"column":0},"generated":{"line":1246,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1247,"column":0},"generated":{"line":1247,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1248,"column":0},"generated":{"line":1248,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1249,"column":0},"generated":{"line":1249,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1250,"column":0},"generated":{"line":1250,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1251,"column":0},"generated":{"line":1251,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1252,"column":0},"generated":{"line":1252,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1253,"column":0},"generated":{"line":1253,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1254,"column":0},"generated":{"line":1254,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1255,"column":0},"generated":{"line":1255,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1256,"column":0},"generated":{"line":1256,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1257,"column":0},"generated":{"line":1257,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1258,"column":0},"generated":{"line":1258,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1259,"column":0},"generated":{"line":1259,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1260,"column":0},"generated":{"line":1260,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1261,"column":0},"generated":{"line":1261,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1262,"column":0},"generated":{"line":1262,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1263,"column":0},"generated":{"line":1263,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1264,"column":0},"generated":{"line":1264,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1265,"column":0},"generated":{"line":1265,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1266,"column":0},"generated":{"line":1266,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1267,"column":0},"generated":{"line":1267,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1268,"column":0},"generated":{"line":1268,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1269,"column":0},"generated":{"line":1269,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1270,"column":0},"generated":{"line":1270,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1271,"column":0},"generated":{"line":1271,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1272,"column":0},"generated":{"line":1272,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1273,"column":0},"generated":{"line":1273,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1274,"column":0},"generated":{"line":1274,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1275,"column":0},"generated":{"line":1275,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1276,"column":0},"generated":{"line":1276,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1277,"column":0},"generated":{"line":1277,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1278,"column":0},"generated":{"line":1278,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1279,"column":0},"generated":{"line":1279,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1280,"column":0},"generated":{"line":1280,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1281,"column":0},"generated":{"line":1281,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1282,"column":0},"generated":{"line":1282,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1283,"column":0},"generated":{"line":1283,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1284,"column":0},"generated":{"line":1284,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1285,"column":0},"generated":{"line":1285,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1286,"column":0},"generated":{"line":1286,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1287,"column":0},"generated":{"line":1287,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1288,"column":0},"generated":{"line":1288,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1289,"column":0},"generated":{"line":1289,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1290,"column":0},"generated":{"line":1290,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1291,"column":0},"generated":{"line":1291,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1292,"column":0},"generated":{"line":1292,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1293,"column":0},"generated":{"line":1293,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1294,"column":0},"generated":{"line":1294,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1295,"column":0},"generated":{"line":1295,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1296,"column":0},"generated":{"line":1296,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1297,"column":0},"generated":{"line":1297,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1298,"column":0},"generated":{"line":1298,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1299,"column":0},"generated":{"line":1299,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1300,"column":0},"generated":{"line":1300,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1301,"column":0},"generated":{"line":1301,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1302,"column":0},"generated":{"line":1302,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1303,"column":0},"generated":{"line":1303,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1304,"column":0},"generated":{"line":1304,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1305,"column":0},"generated":{"line":1305,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1306,"column":0},"generated":{"line":1306,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1307,"column":0},"generated":{"line":1307,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1308,"column":0},"generated":{"line":1308,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1309,"column":0},"generated":{"line":1309,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1310,"column":0},"generated":{"line":1310,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1311,"column":0},"generated":{"line":1311,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1312,"column":0},"generated":{"line":1312,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1313,"column":0},"generated":{"line":1313,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1314,"column":0},"generated":{"line":1314,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1315,"column":0},"generated":{"line":1315,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1316,"column":0},"generated":{"line":1316,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1317,"column":0},"generated":{"line":1317,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1318,"column":0},"generated":{"line":1318,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1319,"column":0},"generated":{"line":1319,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1320,"column":0},"generated":{"line":1320,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1321,"column":0},"generated":{"line":1321,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1322,"column":0},"generated":{"line":1322,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1323,"column":0},"generated":{"line":1323,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1324,"column":0},"generated":{"line":1324,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1325,"column":0},"generated":{"line":1325,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1326,"column":0},"generated":{"line":1326,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1327,"column":0},"generated":{"line":1327,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1328,"column":0},"generated":{"line":1328,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1329,"column":0},"generated":{"line":1329,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1330,"column":0},"generated":{"line":1330,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1331,"column":0},"generated":{"line":1331,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1332,"column":0},"generated":{"line":1332,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1333,"column":0},"generated":{"line":1333,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1334,"column":0},"generated":{"line":1334,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1335,"column":0},"generated":{"line":1335,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1336,"column":0},"generated":{"line":1336,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1337,"column":0},"generated":{"line":1337,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1338,"column":0},"generated":{"line":1338,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1339,"column":0},"generated":{"line":1339,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1340,"column":0},"generated":{"line":1340,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1341,"column":0},"generated":{"line":1341,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1342,"column":0},"generated":{"line":1342,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1343,"column":0},"generated":{"line":1343,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1344,"column":0},"generated":{"line":1344,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1345,"column":0},"generated":{"line":1345,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1346,"column":0},"generated":{"line":1346,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1347,"column":0},"generated":{"line":1347,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1348,"column":0},"generated":{"line":1348,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1349,"column":0},"generated":{"line":1349,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1350,"column":0},"generated":{"line":1350,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1351,"column":0},"generated":{"line":1351,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1352,"column":0},"generated":{"line":1352,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1353,"column":0},"generated":{"line":1353,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1354,"column":0},"generated":{"line":1354,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1355,"column":0},"generated":{"line":1355,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1356,"column":0},"generated":{"line":1356,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1357,"column":0},"generated":{"line":1357,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1358,"column":0},"generated":{"line":1358,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1359,"column":0},"generated":{"line":1359,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1360,"column":0},"generated":{"line":1360,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1361,"column":0},"generated":{"line":1361,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1362,"column":0},"generated":{"line":1362,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1363,"column":0},"generated":{"line":1363,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1364,"column":0},"generated":{"line":1364,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1365,"column":0},"generated":{"line":1365,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1366,"column":0},"generated":{"line":1366,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1367,"column":0},"generated":{"line":1367,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1368,"column":0},"generated":{"line":1368,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1369,"column":0},"generated":{"line":1369,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1370,"column":0},"generated":{"line":1370,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1371,"column":0},"generated":{"line":1371,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1372,"column":0},"generated":{"line":1372,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1373,"column":0},"generated":{"line":1373,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1374,"column":0},"generated":{"line":1374,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1375,"column":0},"generated":{"line":1375,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1376,"column":0},"generated":{"line":1376,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1377,"column":0},"generated":{"line":1377,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1378,"column":0},"generated":{"line":1378,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1379,"column":0},"generated":{"line":1379,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1380,"column":0},"generated":{"line":1380,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1381,"column":0},"generated":{"line":1381,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1382,"column":0},"generated":{"line":1382,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1383,"column":0},"generated":{"line":1383,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1384,"column":0},"generated":{"line":1384,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1385,"column":0},"generated":{"line":1385,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1386,"column":0},"generated":{"line":1386,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1387,"column":0},"generated":{"line":1387,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1388,"column":0},"generated":{"line":1388,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1389,"column":0},"generated":{"line":1389,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1390,"column":0},"generated":{"line":1390,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1391,"column":0},"generated":{"line":1391,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1392,"column":0},"generated":{"line":1392,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1393,"column":0},"generated":{"line":1393,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1394,"column":0},"generated":{"line":1394,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1395,"column":0},"generated":{"line":1395,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1396,"column":0},"generated":{"line":1396,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1397,"column":0},"generated":{"line":1397,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1398,"column":0},"generated":{"line":1398,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1399,"column":0},"generated":{"line":1399,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1400,"column":0},"generated":{"line":1400,"column":0}},{"source":"../node_modules/sequelize/lib/query-interface.js","original":{"line":1401,"column":0},"generated":{"line":1401,"column":0}}],"sources":{"../node_modules/sequelize/lib/query-interface.js":"'use strict';\n\nconst Utils = require('./utils');\nconst _ = require('lodash');\nconst DataTypes = require('./data-types');\nconst SQLiteQueryInterface = require('./dialects/sqlite/query-interface');\nconst MSSSQLQueryInterface = require('./dialects/mssql/query-interface');\nconst MySQLQueryInterface = require('./dialects/mysql/query-interface');\nconst Transaction = require('./transaction');\nconst Promise = require('./promise');\nconst QueryTypes = require('./query-types');\nconst Op = require('./operators');\n\n/**\n * The interface that Sequelize uses to talk to all databases\n *\n * @class QueryInterface\n */\nclass QueryInterface {\n  constructor(sequelize) {\n    this.sequelize = sequelize;\n    this.QueryGenerator = this.sequelize.dialect.QueryGenerator;\n  }\n\n  /**\n   * Creates a schema\n   *\n   * @param {String} schema    Schema name to create\n   * @param {Object} [options] Query options\n   *\n   * @return {Promise}\n   */\n  createSchema(schema, options) {\n    options = options || {};\n    const sql = this.QueryGenerator.createSchema(schema);\n    return this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Drops a schema\n   *\n   * @param {String} schema    Schema name to create\n   * @param {Object} [options] Query options\n   *\n   * @return {Promise}\n   */\n  dropSchema(schema, options) {\n    options = options || {};\n    const sql = this.QueryGenerator.dropSchema(schema);\n    return this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Drop all schemas\n   *\n   * @param {Object} [options] Query options\n   *\n   * @return {Promise}\n   */\n  dropAllSchemas(options) {\n    options = options || {};\n\n    if (!this.QueryGenerator._dialect.supports.schemas) {\n      return this.sequelize.drop(options);\n    } else {\n      return this.showAllSchemas(options).map(schemaName => this.dropSchema(schemaName, options));\n    }\n  }\n\n  /**\n   * Show all schemas\n   *\n   * @param {Object} [options] Query options\n   *\n   * @return {Promise<Array>}\n   */\n  showAllSchemas(options) {\n    options = _.assign({}, options, {\n      raw: true,\n      type: this.sequelize.QueryTypes.SELECT\n    });\n\n    const showSchemasSql = this.QueryGenerator.showSchemasQuery();\n\n    return this.sequelize.query(showSchemasSql, options).then(schemaNames => _.flatten(\n      _.map(schemaNames, value => value.schema_name ? value.schema_name : value)\n    ));\n  }\n\n  /**\n   * Returns database version\n   *\n   * @param {Object}    [options]      Query options\n   * @param {QueryType} [options.type] Query type\n   *\n   * @returns {Promise}\n   * @private\n   */\n  databaseVersion(options) {\n    return this.sequelize.query(\n      this.QueryGenerator.versionQuery(),\n      _.assign({}, options, { type: QueryTypes.VERSION })\n    );\n  }\n\n  /**\n   * Create a table with given set of attributes\n   *\n   * ```js\n   * queryInterface.createTable(\n   *   'nameOfTheNewTable',\n   *   {\n   *     id: {\n   *       type: Sequelize.INTEGER,\n   *       primaryKey: true,\n   *       autoIncrement: true\n   *     },\n   *     createdAt: {\n   *       type: Sequelize.DATE\n   *     },\n   *     updatedAt: {\n   *       type: Sequelize.DATE\n   *     },\n   *     attr1: Sequelize.STRING,\n   *     attr2: Sequelize.INTEGER,\n   *     attr3: {\n   *       type: Sequelize.BOOLEAN,\n   *       defaultValue: false,\n   *       allowNull: false\n   *     },\n   *     //foreign key usage\n   *     attr4: {\n   *       type: Sequelize.INTEGER,\n   *       references: {\n   *         model: 'another_table_name',\n   *         key: 'id'\n   *       },\n   *       onUpdate: 'cascade',\n   *       onDelete: 'cascade'\n   *     }\n   *   },\n   *   {\n   *     engine: 'MYISAM',    // default: 'InnoDB'\n   *     charset: 'latin1',   // default: null\n   *     schema: 'public'     // default: public, PostgreSQL only.\n   *   }\n   * )\n   * ```\n   *\n   * @param {String} tableName  Name of table to create\n   * @param {Array}  attributes List of table attributes to create\n   * @param {Object} [options]\n   * @param {Model}  [model]\n   *\n   * @return {Promise}\n   */\n  createTable(tableName, attributes, options, model) {\n    const keys = Object.keys(attributes);\n    const keyLen = keys.length;\n    let sql = '';\n    let i = 0;\n\n    options = _.clone(options) || {};\n\n    attributes = _.mapValues(attributes, attribute => {\n      if (!_.isPlainObject(attribute)) {\n        attribute = { type: attribute, allowNull: true };\n      }\n\n      attribute = this.sequelize.normalizeAttribute(attribute);\n\n      return attribute;\n    });\n\n    // Postgres requires a special SQL command for enums\n    if (this.sequelize.options.dialect === 'postgres') {\n      const promises = [];\n\n      for (i = 0; i < keyLen; i++) {\n        const attribute = attributes[keys[i]];\n        const type = attribute.type;\n\n        if (\n          type instanceof DataTypes.ENUM ||\n          (type instanceof DataTypes.ARRAY && type.type instanceof DataTypes.ENUM) //ARRAY sub type is ENUM\n        ) {\n          sql = this.QueryGenerator.pgListEnums(tableName, attribute.field || keys[i], options);\n          promises.push(this.sequelize.query(\n            sql,\n            _.assign({}, options, { plain: true, raw: true, type: QueryTypes.SELECT })\n          ));\n        }\n      }\n\n      return Promise.all(promises).then(results => {\n        const promises = [];\n        let enumIdx = 0;\n\n        for (i = 0; i < keyLen; i++) {\n          const attribute = attributes[keys[i]];\n          const type = attribute.type;\n          const enumType = type.type || type;\n\n          if (\n            type instanceof DataTypes.ENUM ||\n            (type instanceof DataTypes.ARRAY && enumType instanceof DataTypes.ENUM) //ARRAY sub type is ENUM\n          ) {\n            // If the enum type doesn't exist then create it\n            if (!results[enumIdx]) {\n              sql = this.QueryGenerator.pgEnum(tableName, attribute.field || keys[i], enumType, options);\n              promises.push(this.sequelize.query(\n                sql,\n                _.assign({}, options, { raw: true })\n              ));\n            } else if (!!results[enumIdx] && !!model) {\n              const enumVals = this.QueryGenerator.fromArray(results[enumIdx].enum_value);\n              const vals = enumType.values;\n\n              vals.forEach((value, idx) => {\n                // reset out after/before options since it's for every enum value\n                const valueOptions = _.clone(options);\n                valueOptions.before = null;\n                valueOptions.after = null;\n\n                if (enumVals.indexOf(value) === -1) {\n                  if (vals[idx + 1]) {\n                    valueOptions.before = vals[idx + 1];\n                  }\n                  else if (vals[idx - 1]) {\n                    valueOptions.after = vals[idx - 1];\n                  }\n                  valueOptions.supportsSearchPath = false;\n                  promises.push(this.sequelize.query(this.QueryGenerator.pgEnumAdd(tableName, attribute.field || keys[i], value, valueOptions), valueOptions));\n                }\n              });\n              enumIdx++;\n            }\n          }\n        }\n\n        if (!tableName.schema &&\n          (options.schema || !!model && model._schema)) {\n          tableName = this.QueryGenerator.addSchema({\n            tableName,\n            _schema: !!model && model._schema || options.schema\n          });\n        }\n\n        attributes = this.QueryGenerator.attributesToSQL(attributes, {\n          context: 'createTable'\n        });\n        sql = this.QueryGenerator.createTableQuery(tableName, attributes, options);\n\n        return Promise.all(promises)\n          .tap(() => {\n            // If ENUM processed, then refresh OIDs\n            if (promises.length) {\n              return this.sequelize.dialect.connectionManager._refreshDynamicOIDs()\n                .then(() => {\n                  return this.sequelize.refreshTypes(DataTypes.postgres);\n                });\n            }\n          })\n          .then(() => {\n            return this.sequelize.query(sql, options);\n          });\n      });\n    } else {\n      if (!tableName.schema &&\n        (options.schema || !!model && model._schema)) {\n        tableName = this.QueryGenerator.addSchema({\n          tableName,\n          _schema: !!model && model._schema || options.schema\n        });\n      }\n\n      attributes = this.QueryGenerator.attributesToSQL(attributes, {\n        context: 'createTable'\n      });\n      sql = this.QueryGenerator.createTableQuery(tableName, attributes, options);\n\n      return this.sequelize.query(sql, options);\n    }\n  }\n\n  /**\n   * Drops a table from database\n   *\n   * @param {String} tableName Table name to drop\n   * @param {Object} options   Query options\n   *\n   * @return {Promise}\n   */\n  dropTable(tableName, options) {\n    // if we're forcing we should be cascading unless explicitly stated otherwise\n    options = _.clone(options) || {};\n    options.cascade = options.cascade || options.force || false;\n\n    let sql = this.QueryGenerator.dropTableQuery(tableName, options);\n\n    return this.sequelize.query(sql, options).then(() => {\n      const promises = [];\n\n      // Since postgres has a special case for enums, we should drop the related\n      // enum type within the table and attribute\n      if (this.sequelize.options.dialect === 'postgres') {\n        const instanceTable = this.sequelize.modelManager.getModel(tableName, { attribute: 'tableName' });\n\n        if (instanceTable) {\n          const getTableName = (!options || !options.schema || options.schema === 'public' ? '' : options.schema + '_') + tableName;\n\n          const keys = Object.keys(instanceTable.rawAttributes);\n          const keyLen = keys.length;\n\n          for (let i = 0; i < keyLen; i++) {\n            if (instanceTable.rawAttributes[keys[i]].type instanceof DataTypes.ENUM) {\n              sql = this.QueryGenerator.pgEnumDrop(getTableName, keys[i]);\n              options.supportsSearchPath = false;\n              promises.push(this.sequelize.query(sql, _.assign({}, options, { raw: true })));\n            }\n          }\n        }\n      }\n\n      return Promise.all(promises).get(0);\n    });\n  }\n\n  /**\n   * Drop all tables from database\n   *\n   * @param {Object} [options]\n   * @param {Array}  [options.skip] List of table to skip\n   *\n   * @return {Promise}\n   */\n  dropAllTables(options) {\n    options = options || {};\n    const skip = options.skip || [];\n\n    const dropAllTables = tableNames => Promise.each(tableNames, tableName => {\n      // if tableName is not in the Array of tables names then dont drop it\n      if (skip.indexOf(tableName.tableName || tableName) === -1) {\n        return this.dropTable(tableName, _.assign({}, options, { cascade: true }) );\n      }\n    });\n\n    return this.showAllTables(options).then(tableNames => {\n      if (this.sequelize.options.dialect === 'sqlite') {\n        return this.sequelize.query('PRAGMA foreign_keys;', options).then(result => {\n          const foreignKeysAreEnabled = result.foreign_keys === 1;\n\n          if (foreignKeysAreEnabled) {\n            return this.sequelize.query('PRAGMA foreign_keys = OFF', options)\n              .then(() => dropAllTables(tableNames))\n              .then(() => this.sequelize.query('PRAGMA foreign_keys = ON', options));\n          } else {\n            return dropAllTables(tableNames);\n          }\n        });\n      } else {\n        return this.getForeignKeysForTables(tableNames, options).then(foreignKeys => {\n          const promises = [];\n\n          tableNames.forEach(tableName => {\n            let normalizedTableName = tableName;\n            if (_.isObject(tableName)) {\n              normalizedTableName = tableName.schema + '.' + tableName.tableName;\n            }\n\n            foreignKeys[normalizedTableName].forEach(foreignKey => {\n              const sql = this.QueryGenerator.dropForeignKeyQuery(tableName, foreignKey);\n              promises.push(this.sequelize.query(sql, options));\n            });\n          });\n\n          return Promise.all(promises).then(() => dropAllTables(tableNames));\n        });\n      }\n    });\n  }\n\n  /**\n   * Drop all enums from database, Postgres Only\n   *\n   * @param {Object} options Query options\n   *\n   * @return {Promise}\n   * @private\n   */\n  dropAllEnums(options) {\n    if (this.sequelize.getDialect() !== 'postgres') {\n      return Promise.resolve();\n    }\n\n    options = options || {};\n\n    return this.pgListEnums(null, options).map(result => this.sequelize.query(\n      this.QueryGenerator.pgEnumDrop(null, null, this.QueryGenerator.pgEscapeAndQuote(result.enum_name)),\n      _.assign({}, options, { raw: true })\n    ));\n  }\n\n  /**\n   * List all enums, Postgres Only\n   *\n   * @param {String} [tableName]  Table whose enum to list\n   * @param {Object} [options]    Query options\n   *\n   * @return {Promise}\n   * @private\n   */\n  pgListEnums(tableName, options) {\n    options = options || {};\n    const sql = this.QueryGenerator.pgListEnums(tableName);\n    return this.sequelize.query(sql, _.assign({}, options, { plain: false, raw: true, type: QueryTypes.SELECT }));\n  }\n\n  /**\n   * Renames a table\n   *\n   * @param {String} before    Current name of table\n   * @param {String} after     New name from table\n   * @param {Object} [options] Query options\n   *\n   * @return {Promise}\n   */\n  renameTable(before, after, options) {\n    options = options || {};\n    const sql = this.QueryGenerator.renameTableQuery(before, after);\n    return this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Get all tables in current database\n   *\n   * @param {Object}    [options] Query options\n   * @param {Boolean}   [options.raw=true] Run query in raw mode\n   * @param {QueryType} [options.type=QueryType.SHOWTABLE]\n   *\n   * @return {Promise<Array>}\n   * @private\n   */\n  showAllTables(options) {\n    options = _.assign({}, options, {\n      raw: true,\n      type: QueryTypes.SHOWTABLES\n    });\n\n    const showTablesSql = this.QueryGenerator.showTablesQuery();\n    return this.sequelize.query(showTablesSql, options).then(tableNames => _.flatten(tableNames));\n  }\n\n  /**\n   * Describe a table structure\n   *\n   * This method returns an array of hashes containing information about all attributes in the table.\n   *\n   * ```js\n   * {\n   *    name: {\n   *      type:         'VARCHAR(255)', // this will be 'CHARACTER VARYING' for pg!\n   *      allowNull:    true,\n   *      defaultValue: null\n   *    },\n   *    isBetaMember: {\n   *      type:         'TINYINT(1)', // this will be 'BOOLEAN' for pg!\n   *      allowNull:    false,\n   *      defaultValue: false\n   *    }\n   * }\n   * ```\n   * @param {String} tableName\n   * @param {Object} [options] Query options\n   *\n   * @return {Promise<Object>}\n   */\n  describeTable(tableName, options) {\n    let schema = null;\n    let schemaDelimiter = null;\n\n    if (typeof options === 'string') {\n      schema = options;\n    } else if (typeof options === 'object' && options !== null) {\n      schema = options.schema || null;\n      schemaDelimiter = options.schemaDelimiter || null;\n    }\n\n    if (typeof tableName === 'object' && tableName !== null) {\n      schema = tableName.schema;\n      tableName = tableName.tableName;\n    }\n\n    const sql = this.QueryGenerator.describeTableQuery(tableName, schema, schemaDelimiter);\n\n    return this.sequelize.query(\n      sql,\n      _.assign({}, options, { type: QueryTypes.DESCRIBE })\n    ).then(data => {\n      // If no data is returned from the query, then the table name may be wrong.\n      // Query generators that use information_schema for retrieving table info will just return an empty result set,\n      // it will not throw an error like built-ins do (e.g. DESCRIBE on MySql).\n      if (_.isEmpty(data)) {\n        return Promise.reject('No description found for \"' + tableName + '\" table. Check the table name and schema; remember, they _are_ case sensitive.');\n      } else {\n        return Promise.resolve(data);\n      }\n    });\n  }\n\n  /**\n   * Add a new column into a table\n   *\n   * @param {String} table     Table to add column to\n   * @param {String} key       Column name\n   * @param {Object} attribute Attribute definition\n   * @param {Object} [options] Query options\n   *\n   * @return {Promise}\n   */\n  addColumn(table, key, attribute, options) {\n    if (!table || !key || !attribute) {\n      throw new Error('addColumn takes atleast 3 arguments (table, attribute name, attribute definition)');\n    }\n\n    options = options || {};\n    attribute = this.sequelize.normalizeAttribute(attribute);\n    return this.sequelize.query(this.QueryGenerator.addColumnQuery(table, key, attribute), options);\n  }\n\n  /**\n   * Remove a column from table\n   *\n   * @param {String} tableName      Table to remove column from\n   * @param {String} attributeName  Columns name to remove\n   * @param {Object} [options]      Query options\n   *\n   * @return {Promise}\n   */\n  removeColumn(tableName, attributeName, options) {\n    options = options || {};\n    switch (this.sequelize.options.dialect) {\n      case 'sqlite':\n        // sqlite needs some special treatment as it cannot drop a column\n        return SQLiteQueryInterface.removeColumn.call(this, tableName, attributeName, options);\n      case 'mssql':\n        // mssql needs special treatment as it cannot drop a column with a default or foreign key constraint\n        return MSSSQLQueryInterface.removeColumn.call(this, tableName, attributeName, options);\n      case 'mysql':\n        // mysql needs special treatment as it cannot drop a column with a foreign key constraint\n        return MySQLQueryInterface.removeColumn.call(this, tableName, attributeName, options);\n      default:\n        return this.sequelize.query(this.QueryGenerator.removeColumnQuery(tableName, attributeName), options);\n    }\n  }\n\n  /**\n   * Change a column definition\n   *\n   * @param {String} tableName          Table name to change from\n   * @param {String} attributeName      Column name\n   * @param {Object} dataTypeOrOptions  Attribute definition for new column\n   * @param {Object} [options]          Query options\n   *\n   * @return {Promise}\n   */\n  changeColumn(tableName, attributeName, dataTypeOrOptions, options) {\n    const attributes = {};\n    options = options || {};\n\n    if (_.values(DataTypes).indexOf(dataTypeOrOptions) > -1) {\n      attributes[attributeName] = { type: dataTypeOrOptions, allowNull: true };\n    } else {\n      attributes[attributeName] = dataTypeOrOptions;\n    }\n\n    attributes[attributeName].type = this.sequelize.normalizeDataType(attributes[attributeName].type);\n\n    if (this.sequelize.options.dialect === 'sqlite') {\n      // sqlite needs some special treatment as it cannot change a column\n      return SQLiteQueryInterface.changeColumn.call(this, tableName, attributes, options);\n    } else {\n      const query = this.QueryGenerator.attributesToSQL(attributes);\n      const sql = this.QueryGenerator.changeColumnQuery(tableName, query);\n\n      return this.sequelize.query(sql, options);\n    }\n  }\n\n  /**\n   * Rename a column\n   *\n   * @param {String} tableName        Table name whose column to rename\n   * @param {String} attrNameBefore   Current column name\n   * @param {String} attrNameAfter    New column name\n   * @param {Object} [options]        Query option\n   *\n   * @return {Promise}\n   */\n  renameColumn(tableName, attrNameBefore, attrNameAfter, options) {\n    options = options || {};\n    return this.describeTable(tableName, options).then(data => {\n      if (!data[attrNameBefore]) {\n        throw new Error('Table ' + tableName + ' doesn\\'t have the column ' + attrNameBefore);\n      }\n\n      data = data[attrNameBefore] || {};\n\n      const _options = {};\n\n      _options[attrNameAfter] = {\n        attribute: attrNameAfter,\n        type: data.type,\n        allowNull: data.allowNull,\n        defaultValue: data.defaultValue\n      };\n\n      // fix: a not-null column cannot have null as default value\n      if (data.defaultValue === null && !data.allowNull) {\n        delete _options[attrNameAfter].defaultValue;\n      }\n\n      if (this.sequelize.options.dialect === 'sqlite') {\n        // sqlite needs some special treatment as it cannot rename a column\n        return SQLiteQueryInterface.renameColumn.call(this, tableName, attrNameBefore, attrNameAfter, options);\n      } else {\n        const sql = this.QueryGenerator.renameColumnQuery(\n          tableName,\n          attrNameBefore,\n          this.QueryGenerator.attributesToSQL(_options)\n        );\n        return this.sequelize.query(sql, options);\n      }\n    });\n  }\n\n  /**\n   * Add index to a column\n   *\n   * @param {String}  tableName        Table name to add index on\n   * @param {Object}  options\n   * @param {Array}   options.fields   List of attributes to add index on\n   * @param {Boolean} [options.unique] Create a unique index\n   * @param {String}  [options.using]  Useful for GIN indexes\n   * @param {String}  [options.type]   Type of index, available options are UNIQUE|FULLTEXT|SPATIAL\n   * @param {String}  [options.name]   Name of the index. Default is <table>_<attr1>_<attr2>\n   * @param {Object}  [options.where]  Where condition on index, for partial indexes\n   *\n   * @return {Promise}\n   */\n  addIndex(tableName, attributes, options, rawTablename) {\n    // Support for passing tableName, attributes, options or tableName, options (with a fields param which is the attributes)\n    if (!Array.isArray(attributes)) {\n      rawTablename = options;\n      options = attributes;\n      attributes = options.fields;\n    }\n    // testhint argsConform.end\n\n    if (!rawTablename) {\n      // Map for backwards compat\n      rawTablename = tableName;\n    }\n\n    options = Utils.cloneDeep(options);\n    options.fields = attributes;\n    const sql = this.QueryGenerator.addIndexQuery(tableName, options, rawTablename);\n    return this.sequelize.query(sql, _.assign({}, options, { supportsSearchPath: false }));\n  }\n\n  /**\n   * Show indexes on a table\n   *\n   * @param {String} tableName\n   * @param {Object} [options]   Query options\n   *\n   * @return {Promise<Array>}\n   * @private\n   */\n  showIndex(tableName, options) {\n    const sql = this.QueryGenerator.showIndexesQuery(tableName, options);\n    return this.sequelize.query(sql, _.assign({}, options, { type: QueryTypes.SHOWINDEXES }));\n  }\n\n  nameIndexes(indexes, rawTablename) {\n    return this.QueryGenerator.nameIndexes(indexes, rawTablename);\n  }\n\n  getForeignKeysForTables(tableNames, options) {\n    if (tableNames.length === 0) {\n      return Promise.resolve({});\n    }\n\n    options = _.assign({}, options || {}, { type: QueryTypes.FOREIGNKEYS });\n\n    return Promise.map(tableNames, tableName =>\n      this.sequelize.query(this.QueryGenerator.getForeignKeysQuery(tableName, this.sequelize.config.database), options)\n    ).then(results => {\n      const result = {};\n\n      tableNames.forEach((tableName, i) => {\n        if (_.isObject(tableName)) {\n          tableName = tableName.schema + '.' + tableName.tableName;\n        }\n\n        result[tableName] = _.isArray(results[i])\n          ? results[i].map(r => r.constraint_name)\n          : [results[i] && results[i].constraint_name];\n\n        result[tableName] = result[tableName].filter(_.identity);\n      });\n\n      return result;\n    });\n  }\n\n  /**\n   * Remove an already existing index from a table\n   *\n   * @param {String} tableName             Table name to drop index from\n   * @param {String} indexNameOrAttributes Index name\n   * @param {Object} [options]             Query options\n   *\n   * @return {Promise}\n   */\n  removeIndex(tableName, indexNameOrAttributes, options) {\n    options = options || {};\n    const sql = this.QueryGenerator.removeIndexQuery(tableName, indexNameOrAttributes);\n    return this.sequelize.query(sql, options);\n  }\n\n  /**\n   * Add constraints to table\n   *\n   * Available constraints:\n   * - UNIQUE\n   * - DEFAULT (MSSQL only)\n   * - CHECK (MySQL - Ignored by the database engine )\n   * - FOREIGN KEY\n   * - PRIMARY KEY\n   *\n   * UNIQUE\n   * ```js\n   * queryInterface.addConstraint('Users', ['email'], {\n   *   type: 'unique',\n   *   name: 'custom_unique_constraint_name'\n   * });\n   * ```\n   *\n   * CHECK\n   * ```js\n   * queryInterface.addConstraint('Users', ['roles'], {\n   *   type: 'check',\n   *   where: {\n   *      roles: ['user', 'admin', 'moderator', 'guest']\n   *   }\n   * });\n   * ```\n   * Default - MSSQL only\n   * ```js\n   * queryInterface.addConstraint('Users', ['roles'], {\n   *    type: 'default',\n   *    defaultValue: 'guest'\n   * });\n   * ```\n   *\n   * Primary Key\n   * ```js\n   * queryInterface.addConstraint('Users', ['username'], {\n   *    type: 'primary key',\n   *    name: 'custom_primary_constraint_name'\n   * });\n   * ```\n   *\n   * Foreign Key\n   * ```js\n   * queryInterface.addConstraint('Posts', ['username'], {\n   *   type: 'FOREIGN KEY',\n   *   name: 'custom_fkey_constraint_name',\n   *   references: { //Required field\n   *     table: 'target_table_name',\n   *     field: 'target_column_name'\n   *   },\n   *   onDelete: 'cascade',\n   *   onUpdate: 'cascade'\n   * });\n   * ```\n   *\n   * @param {String} tableName                  Table name where you want to add a constraint\n   * @param {Array}  attributes                 Array of column names to apply the constraint over\n   * @param {Object} options                    An object to define the constraint name, type etc\n   * @param {String} options.type               Type of constraint. One of the values in available constraints(case insensitive)\n   * @param {String} [options.name]             Name of the constraint. If not specified, sequelize automatically creates a named constraint based on constraint type, table & column names\n   * @param {String} [options.defaultValue]     The value for the default constraint\n   * @param {Object} [options.where]            Where clause/expression for the CHECK constraint\n   * @param {Object} [options.references]       Object specifying target table, column name to create foreign key constraint\n   * @param {String} [options.references.table] Target table name\n   * @param {String} [options.references.field] Target column name\n   *\n   * @return {Promise}\n   */\n  addConstraint(tableName, attributes, options, rawTablename) {\n    if (!Array.isArray(attributes)) {\n      rawTablename = options;\n      options = attributes;\n      attributes = options.fields;\n    }\n\n    if (!options.type) {\n      throw new Error('Constraint type must be specified through options.type');\n    }\n\n    if (!rawTablename) {\n      // Map for backwards compat\n      rawTablename = tableName;\n    }\n\n    options = Utils.cloneDeep(options);\n    options.fields = attributes;\n\n    if (this.sequelize.dialect.name === 'sqlite') {\n      return SQLiteQueryInterface.addConstraint.call(this, tableName, options, rawTablename);\n    } else {\n      const sql = this.QueryGenerator.addConstraintQuery(tableName, options, rawTablename);\n      return this.sequelize.query(sql, options);\n    }\n  }\n\n  showConstraint(tableName, options) {\n    const sql = this.QueryGenerator.showConstraintsQuery(tableName, options);\n    return this.sequelize.query(sql, Object.assign({}, options, { type: QueryTypes.SHOWCONSTRAINTS }));\n  }\n\n  /**\n   *\n   * @param {String} tableName       Table name to drop constraint from\n   * @param {String} constraintName  Constraint name\n   * @param {Object} options         Query options\n   *\n   * @return {Promise}\n   */\n  removeConstraint(tableName, constraintName, options) {\n    options = options || {};\n\n    switch (this.sequelize.options.dialect) {\n      case 'mysql':\n        //Mysql does not support DROP CONSTRAINT. Instead DROP PRIMARY, FOREIGN KEY, INDEX should be used\n        return MySQLQueryInterface.removeConstraint.call(this, tableName, constraintName, options);\n      case 'sqlite':\n        return SQLiteQueryInterface.removeConstraint.call(this, tableName, constraintName, options);\n      default:\n        const sql = this.QueryGenerator.removeConstraintQuery(tableName, constraintName);\n        return this.sequelize.query(sql, options);\n    }\n  }\n\n  insert(instance, tableName, values, options) {\n    options = Utils.cloneDeep(options);\n    options.hasTrigger = instance && instance.constructor.options.hasTrigger;\n    const sql = this.QueryGenerator.insertQuery(tableName, values, instance && instance.constructor.rawAttributes, options);\n\n    options.type = QueryTypes.INSERT;\n    options.instance = instance;\n\n    return this.sequelize.query(sql, options).then(results => {\n      if (instance) results[0].isNewRecord = false;\n      return results;\n    });\n  }\n\n  upsert(tableName, valuesByField, updateValues, where, model, options) {\n    const wheres = [];\n    const attributes = Object.keys(valuesByField);\n    let indexes = [];\n    let indexFields;\n\n    options = _.clone(options);\n\n    if (!Utils.isWhereEmpty(where)) {\n      wheres.push(where);\n    }\n\n    // Lets combine uniquekeys and indexes into one\n    indexes = _.map(model.options.uniqueKeys, value => {\n      return value.fields;\n    });\n\n    _.each(model.options.indexes, value => {\n      if (value.unique) {\n        // fields in the index may both the strings or objects with an attribute property - lets sanitize that\n        indexFields = _.map(value.fields, field => {\n          if (_.isPlainObject(field)) {\n            return field.attribute;\n          }\n          return field;\n        });\n        indexes.push(indexFields);\n      }\n    });\n\n    for (const index of indexes) {\n      if (_.intersection(attributes, index).length === index.length) {\n        where = {};\n        for (const field of index) {\n          where[field] = valuesByField[field];\n        }\n        wheres.push(where);\n      }\n    }\n\n    where = { [Op.or]: wheres };\n\n    options.type = QueryTypes.UPSERT;\n    options.raw = true;\n\n    const sql = this.QueryGenerator.upsertQuery(tableName, valuesByField, updateValues, where, model, options);\n    return this.sequelize.query(sql, options).then(rowCount => {\n      if (rowCount === undefined) {\n        return rowCount;\n      }\n\n      // MySQL returns 1 for inserted, 2 for updated http://dev.mysql.com/doc/refman/5.0/en/insert-on-duplicate.html. Postgres has been modded to do the same\n\n      return rowCount === 1;\n    });\n  }\n\n  /**\n   * Insert records into a table\n   *\n   * ```js\n   * queryInterface.bulkInsert('roles', [{\n   *    label: 'user',\n   *    createdAt: new Date(),\n   *    updatedAt: new Date()\n   *  }, {\n   *    label: 'admin',\n   *    createdAt: new Date(),\n   *    updatedAt: new Date()\n   *  }]);\n   * ```\n   *\n   * @param {String} tableName Table name to insert record to\n   * @param {Array}  records   List of records to insert\n   *\n   * @return {Promise}\n   */\n  bulkInsert(tableName, records, options, attributes) {\n    options = _.clone(options) || {};\n    options.type = QueryTypes.INSERT;\n    const sql = this.QueryGenerator.bulkInsertQuery(tableName, records, options, attributes);\n    return this.sequelize.query(sql, options).then(results => results[0]);\n  }\n\n  update(instance, tableName, values, identifier, options) {\n    options = _.clone(options || {});\n    options.hasTrigger = !!(instance && instance._modelOptions && instance._modelOptions.hasTrigger);\n\n    const sql = this.QueryGenerator.updateQuery(tableName, values, identifier, options, instance.constructor.rawAttributes);\n\n    options.type = QueryTypes.UPDATE;\n\n    options.instance = instance;\n    return this.sequelize.query(sql, options);\n  }\n\n  bulkUpdate(tableName, values, identifier, options, attributes) {\n    options = Utils.cloneDeep(options);\n    if (typeof identifier === 'object') identifier = Utils.cloneDeep(identifier);\n\n    const sql = this.QueryGenerator.updateQuery(tableName, values, identifier, options, attributes);\n    const table = _.isObject(tableName) ? tableName : { tableName };\n    const model = _.find(this.sequelize.modelManager.models, { tableName: table.tableName });\n\n    options.model = model;\n    return this.sequelize.query(sql, options);\n  }\n\n  delete(instance, tableName, identifier, options) {\n    const cascades = [];\n    const sql = this.QueryGenerator.deleteQuery(tableName, identifier, null, instance.constructor);\n\n    options = _.clone(options) || {};\n\n    // Check for a restrict field\n    if (!!instance.constructor && !!instance.constructor.associations) {\n      const keys = Object.keys(instance.constructor.associations);\n      const length = keys.length;\n      let association;\n\n      for (let i = 0; i < length; i++) {\n        association = instance.constructor.associations[keys[i]];\n        if (association.options && association.options.onDelete &&\n          association.options.onDelete.toLowerCase() === 'cascade' &&\n          association.options.useHooks === true) {\n          cascades.push(association.accessors.get);\n        }\n      }\n    }\n\n    return Promise.each(cascades, cascade => {\n      return instance[cascade](options).then(instances => {\n        // Check for hasOne relationship with non-existing associate (\"has zero\")\n        if (!instances) {\n          return Promise.resolve();\n        }\n\n        if (!Array.isArray(instances)) instances = [instances];\n\n        return Promise.each(instances, instance => instance.destroy(options));\n      });\n    }).then(() => {\n      options.instance = instance;\n      return this.sequelize.query(sql, options);\n    });\n  }\n\n  /**\n   * Delete records from a table\n   *\n   * @param {String} tableName  Table name from where to delete records\n   * @param {Object} identifier Where conditions to find records to delete\n   *\n   * @return {Promise}\n   */\n  bulkDelete(tableName, identifier, options, model) {\n    options = Utils.cloneDeep(options);\n    options = _.defaults(options, {limit: null});\n    if (typeof identifier === 'object') identifier = Utils.cloneDeep(identifier);\n\n    const sql = this.QueryGenerator.deleteQuery(tableName, identifier, options, model);\n    return this.sequelize.query(sql, options);\n  }\n\n  select(model, tableName, options) {\n    options = Utils.cloneDeep(options);\n    options.type = QueryTypes.SELECT;\n    options.model = model;\n\n    return this.sequelize.query(\n      this.QueryGenerator.selectQuery(tableName, options, model),\n      options\n    );\n  }\n\n  increment(model, tableName, values, identifier, options) {\n    options = Utils.cloneDeep(options);\n\n    const sql = this.QueryGenerator.arithmeticQuery('+', tableName, values, identifier, options, options.attributes);\n\n    options.type = QueryTypes.UPDATE;\n    options.model = model;\n\n    return this.sequelize.query(sql, options);\n  }\n\n  decrement(model, tableName, values, identifier, options) {\n    options = Utils.cloneDeep(options);\n\n    const sql = this.QueryGenerator.arithmeticQuery('-', tableName, values, identifier, options, options.attributes);\n\n    options.type = QueryTypes.UPDATE;\n    options.model = model;\n\n    return this.sequelize.query(sql, options);\n  }\n\n  rawSelect(tableName, options, attributeSelector, Model) {\n    if (options.schema) {\n      tableName = this.QueryGenerator.addSchema({\n        tableName,\n        _schema: options.schema\n      });\n    }\n\n    options = Utils.cloneDeep(options);\n    options = _.defaults(options, {\n      raw: true,\n      plain: true,\n      type: QueryTypes.SELECT\n    });\n\n    const sql = this.QueryGenerator.selectQuery(tableName, options, Model);\n\n    if (attributeSelector === undefined) {\n      throw new Error('Please pass an attribute selector!');\n    }\n\n    return this.sequelize.query(sql, options).then(data => {\n      if (!options.plain) {\n        return data;\n      }\n\n      let result = data ? data[attributeSelector] : null;\n\n      if (options && options.dataType) {\n        const dataType = options.dataType;\n\n        if (dataType instanceof DataTypes.DECIMAL || dataType instanceof DataTypes.FLOAT) {\n          result = parseFloat(result);\n        } else if (dataType instanceof DataTypes.INTEGER || dataType instanceof DataTypes.BIGINT) {\n          result = parseInt(result, 10);\n        } else if (dataType instanceof DataTypes.DATE) {\n          if (!_.isNull(result) && !_.isDate(result)) {\n            result = new Date(result);\n          }\n        } else if (dataType instanceof DataTypes.STRING) {\n          // Nothing to do, result is already a string.\n        }\n      }\n\n      return result;\n    });\n  }\n\n  createTrigger(tableName, triggerName, timingType, fireOnArray, functionName, functionParams, optionsArray, options) {\n    const sql = this.QueryGenerator.createTrigger(tableName, triggerName, timingType, fireOnArray, functionName, functionParams, optionsArray);\n    options = options || {};\n    if (sql) {\n      return this.sequelize.query(sql, options);\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  dropTrigger(tableName, triggerName, options) {\n    const sql = this.QueryGenerator.dropTrigger(tableName, triggerName);\n    options = options || {};\n\n    if (sql) {\n      return this.sequelize.query(sql, options);\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  renameTrigger(tableName, oldTriggerName, newTriggerName, options) {\n    const sql = this.QueryGenerator.renameTrigger(tableName, oldTriggerName, newTriggerName);\n    options = options || {};\n\n    if (sql) {\n      return this.sequelize.query(sql, options);\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  /**\n   * Create SQL function\n   *\n   * ```js\n   * queryInterface.createFunction(\n   *   'someFunction',\n   *   [\n   *     {type: 'integer', name: 'param', direction: 'IN'}\n   *   ],\n   *   'integer',\n   *   'plpgsql',\n   *   'RETURN param + 1;',\n   *   [\n   *     'IMMUTABLE',\n   *     'LEAKPROOF'\n   *   ]\n   * );\n   * ```\n   *\n   * @param {String} functionName Name of SQL function to create\n   * @param {Array}  params       List of parameters declared for SQL function\n   * @param {String} returnType   SQL type of function returned value\n   * @param {String} language     The name of the language that the function is implemented in\n   * @param {String} body         Source code of function\n   * @param {Array}  optionsArray Extra-options for creation\n   * @param {Object} [options]\n   *\n   * @return {Promise}\n   */\n  createFunction(functionName, params, returnType, language, body, optionsArray, options) {\n    const sql = this.QueryGenerator.createFunction(functionName, params, returnType, language, body, optionsArray);\n    options = options || {};\n\n    if (sql) {\n      return this.sequelize.query(sql, options);\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  /**\n   * Drop SQL function\n   *\n   * ```js\n   * queryInterface.dropFunction(\n   *   'someFunction',\n   *   [\n   *     {type: 'varchar', name: 'param1', direction: 'IN'},\n   *     {type: 'integer', name: 'param2', direction: 'INOUT'}\n   *   ]\n   * );\n   * ```\n   *\n   * @param {String} functionName Name of SQL function to drop\n   * @param {Array}  params       List of parameters declared for SQL function\n   * @param {Object} [options]\n   *\n   * @return {Promise}\n   */\n  dropFunction(functionName, params, options) {\n    const sql = this.QueryGenerator.dropFunction(functionName, params);\n    options = options || {};\n\n    if (sql) {\n      return this.sequelize.query(sql, options);\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  /**\n   * Rename SQL function\n   *\n   * ```js\n   * queryInterface.renameFunction(\n   *   'fooFunction',\n   *   [\n   *     {type: 'varchar', name: 'param1', direction: 'IN'},\n   *     {type: 'integer', name: 'param2', direction: 'INOUT'}\n   *   ],\n   *   'barFunction'\n   * );\n   * ```\n   *\n   * @param {String} oldFunctionName\n   * @param {Array}  params           List of parameters declared for SQL function\n   * @param {String} newFunctionName\n   * @param {Object} [options]\n   *\n   * @return {Promise}\n   */\n  renameFunction(oldFunctionName, params, newFunctionName, options) {\n    const sql = this.QueryGenerator.renameFunction(oldFunctionName, params, newFunctionName);\n    options = options || {};\n\n    if (sql) {\n      return this.sequelize.query(sql, options);\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  // Helper methods useful for querying\n\n  /**\n   * Escape an identifier (e.g. a table or attribute name). If force is true,\n   * the identifier will be quoted even if the `quoteIdentifiers` option is\n   * false.\n   * @private\n   */\n  quoteIdentifier(identifier, force) {\n    return this.QueryGenerator.quoteIdentifier(identifier, force);\n  }\n\n  quoteTable(identifier) {\n    return this.QueryGenerator.quoteTable(identifier);\n  }\n\n  /**\n   * Split an identifier into .-separated tokens and quote each part.\n   * If force is true, the identifier will be quoted even if the\n   * `quoteIdentifiers` option is false.\n   * @private\n   */\n  quoteIdentifiers(identifiers, force) {\n    return this.QueryGenerator.quoteIdentifiers(identifiers, force);\n  }\n\n  /**\n   * Escape a value (e.g. a string, number or date)\n   * @private\n   */\n  escape(value) {\n    return this.QueryGenerator.escape(value);\n  }\n\n  setAutocommit(transaction, value, options) {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error('Unable to set autocommit for a transaction without transaction object!');\n    }\n    if (transaction.parent) {\n      // Not possible to set a separate isolation level for savepoints\n      return Promise.resolve();\n    }\n\n    options = _.assign({}, options, {\n      transaction: transaction.parent || transaction\n    });\n\n    const sql = this.QueryGenerator.setAutocommitQuery(value, {\n      parent: transaction.parent\n    });\n\n    if (!sql) return Promise.resolve();\n\n    return this.sequelize.query(sql, options);\n  }\n\n  setIsolationLevel(transaction, value, options) {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error('Unable to set isolation level for a transaction without transaction object!');\n    }\n\n    if (transaction.parent || !value) {\n      // Not possible to set a separate isolation level for savepoints\n      return Promise.resolve();\n    }\n\n    options = _.assign({}, options, {\n      transaction: transaction.parent || transaction\n    });\n\n    const sql = this.QueryGenerator.setIsolationLevelQuery(value, {\n      parent: transaction.parent\n    });\n\n    if (!sql) return Promise.resolve();\n\n    return this.sequelize.query(sql, options);\n  }\n\n  startTransaction(transaction, options) {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error('Unable to start a transaction without transaction object!');\n    }\n\n    options = _.assign({}, options, {\n      transaction: transaction.parent || transaction\n    });\n    options.transaction.name = transaction.parent ? transaction.name : undefined;\n    const sql = this.QueryGenerator.startTransactionQuery(transaction);\n\n    return this.sequelize.query(sql, options);\n  }\n\n  deferConstraints(transaction, options) {\n    options = _.assign({}, options, {\n      transaction: transaction.parent || transaction\n    });\n\n    const sql = this.QueryGenerator.deferConstraintsQuery(options);\n\n    if (sql) {\n      return this.sequelize.query(sql, options);\n    }\n\n    return Promise.resolve();\n  }\n\n  commitTransaction(transaction, options) {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error('Unable to commit a transaction without transaction object!');\n    }\n    if (transaction.parent) {\n      // Savepoints cannot be committed\n      return Promise.resolve();\n    }\n\n    options = _.assign({}, options, {\n      transaction: transaction.parent || transaction,\n      supportsSearchPath: false\n    });\n\n    const sql = this.QueryGenerator.commitTransactionQuery(transaction);\n    const promise = this.sequelize.query(sql, options);\n\n    transaction.finished = 'commit';\n\n    return promise;\n  }\n\n  rollbackTransaction(transaction, options) {\n    if (!transaction || !(transaction instanceof Transaction)) {\n      throw new Error('Unable to rollback a transaction without transaction object!');\n    }\n\n    options = _.assign({}, options, {\n      transaction: transaction.parent || transaction,\n      supportsSearchPath: false\n    });\n    options.transaction.name = transaction.parent ? transaction.name : undefined;\n    const sql = this.QueryGenerator.rollbackTransactionQuery(transaction);\n    const promise = this.sequelize.query(sql, options);\n\n    transaction.finished = 'rollback';\n\n    return promise;\n  }\n}\n\nmodule.exports = QueryInterface;\nmodule.exports.QueryInterface = QueryInterface;\nmodule.exports.default = QueryInterface;\n"},"lineCount":1401}},"hash":"e67b1d163a70fe8f5eb8cc6ad1a5ade4","cacheData":{"env":{}}}