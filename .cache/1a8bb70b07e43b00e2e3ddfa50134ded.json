{"dependencies":[{"name":"net","loc":{"line":6,"column":18}},{"name":"ip","loc":{"line":7,"column":17}}],"generated":{"js":"\n/**\n * Module dependencies.\n */\n\nvar net = require('net');\nvar ip = require('ip');\n\n/**\n * Module exports.\n */\n\nmodule.exports = myIpAddress;\n\nmyIpAddress.async = true;\n\n/**\n * Returns the IP address of the host that the Navigator is running on, as\n * a string in the dot-separated integer format.\n *\n * Example:\n *\n * ``` js\n * myIpAddress()\n *   // would return the string \"198.95.249.79\" if you were running the\n *   // Navigator on that host.\n * ```\n *\n * @return {String} external IP address\n */\n\nfunction myIpAddress (fn) {\n  // 8.8.8.8:53 is \"Google Public DNS\":\n  // https://developers.google.com/speed/public-dns/\n  var socket = net.connect({ host: '8.8.8.8', port: 53 });\n  socket.once('error', function(err) {\n    // if we fail to access Google DNS (as in firewall blocks access), \n    // fallback to querying IP locally\n    fn(null, ip.address());\n  });\n  socket.once('connect', function () {\n    socket.removeListener('error', fn);\n    var ip = socket.address().address;\n    socket.destroy();\n    fn(null, ip);\n  });\n}\n","map":{"mappings":[{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/pac-resolver/myIpAddress.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}}],"sources":{"../node_modules/pac-resolver/myIpAddress.js":"\n/**\n * Module dependencies.\n */\n\nvar net = require('net');\nvar ip = require('ip');\n\n/**\n * Module exports.\n */\n\nmodule.exports = myIpAddress;\n\nmyIpAddress.async = true;\n\n/**\n * Returns the IP address of the host that the Navigator is running on, as\n * a string in the dot-separated integer format.\n *\n * Example:\n *\n * ``` js\n * myIpAddress()\n *   // would return the string \"198.95.249.79\" if you were running the\n *   // Navigator on that host.\n * ```\n *\n * @return {String} external IP address\n */\n\nfunction myIpAddress (fn) {\n  // 8.8.8.8:53 is \"Google Public DNS\":\n  // https://developers.google.com/speed/public-dns/\n  var socket = net.connect({ host: '8.8.8.8', port: 53 });\n  socket.once('error', function(err) {\n    // if we fail to access Google DNS (as in firewall blocks access), \n    // fallback to querying IP locally\n    fn(null, ip.address());\n  });\n  socket.once('connect', function () {\n    socket.removeListener('error', fn);\n    var ip = socket.address().address;\n    socket.destroy();\n    fn(null, ip);\n  });\n}\n"},"lineCount":48}},"hash":"50bc114b7a3145fc0efc9e9a1748cfe5","cacheData":{"env":{}}}