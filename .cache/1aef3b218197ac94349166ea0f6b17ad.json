{"dependencies":[{"name":"lodash","loc":{"line":3,"column":18}},{"name":"../../utils","loc":{"line":4,"column":22}},{"name":"../../data-types","loc":{"line":5,"column":26}},{"name":"../abstract/query-generator","loc":{"line":6,"column":39}},{"name":"crypto","loc":{"line":7,"column":28}},{"name":"semver","loc":{"line":8,"column":23}},{"name":"../../operators","loc":{"line":10,"column":19}}],"generated":{"js":"'use strict';\n\nconst _ = require('lodash');\nconst Utils = require('../../utils');\nconst DataTypes = require('../../data-types');\nconst AbstractQueryGenerator = require('../abstract/query-generator');\nconst randomBytes = require('crypto').randomBytes;\nconst semver = require('semver');\n\nconst Op = require('../../operators');\n\n/* istanbul ignore next */\nconst throwMethodUndefined = function(methodName) {\n  throw new Error('The method \"' + methodName + '\" is not defined! Please add it to your sql dialect.');\n};\n\nconst QueryGenerator = {\n  __proto__: AbstractQueryGenerator,\n  options: {},\n  dialect: 'mssql',\n\n  createSchema(schema) {\n    return [\n      'IF NOT EXISTS (SELECT schema_name',\n      'FROM information_schema.schemata',\n      'WHERE schema_name =', wrapSingleQuote(schema), ')',\n      'BEGIN',\n      \"EXEC sp_executesql N'CREATE SCHEMA\",\n      this.quoteIdentifier(schema),\n      \";'\",\n      'END;'\n    ].join(' ');\n  },\n\n  showSchemasQuery() {\n    return [\n      'SELECT \"name\" as \"schema_name\" FROM sys.schemas as s',\n      'WHERE \"s\".\"name\" NOT IN (',\n      \"'INFORMATION_SCHEMA', 'dbo', 'guest', 'sys', 'archive'\",\n      ')', 'AND', '\"s\".\"name\" NOT LIKE', \"'db_%'\"\n    ].join(' ');\n  },\n\n  versionQuery() {\n    // Uses string manipulation to convert the MS Maj.Min.Patch.Build to semver Maj.Min.Patch\n    return [\n      'DECLARE @ms_ver NVARCHAR(20);',\n      \"SET @ms_ver = REVERSE(CONVERT(NVARCHAR(20), SERVERPROPERTY('ProductVersion')));\",\n      \"SELECT REVERSE(SUBSTRING(@ms_ver, CHARINDEX('.', @ms_ver)+1, 20)) AS 'version'\"\n    ].join(' ');\n  },\n\n  createTableQuery(tableName, attributes, options) {\n    const query = \"IF OBJECT_ID('<%= table %>', 'U') IS NULL CREATE TABLE <%= table %> (<%= attributes %>)\",\n      primaryKeys = [],\n      foreignKeys = {},\n      attrStr = [],\n      self = this;\n\n    for (const attr in attributes) {\n      if (attributes.hasOwnProperty(attr)) {\n        const dataType = attributes[attr];\n        let match;\n\n        if (_.includes(dataType, 'PRIMARY KEY')) {\n          primaryKeys.push(attr);\n\n          if (_.includes(dataType, 'REFERENCES')) {\n            // MSSQL doesn't support inline REFERENCES declarations: move to the end\n            match = dataType.match(/^(.+) (REFERENCES.*)$/);\n            attrStr.push(this.quoteIdentifier(attr) + ' ' + match[1].replace(/PRIMARY KEY/, ''));\n            foreignKeys[attr] = match[2];\n          } else {\n            attrStr.push(this.quoteIdentifier(attr) + ' ' + dataType.replace(/PRIMARY KEY/, ''));\n          }\n        } else if (_.includes(dataType, 'REFERENCES')) {\n          // MSSQL doesn't support inline REFERENCES declarations: move to the end\n          match = dataType.match(/^(.+) (REFERENCES.*)$/);\n          attrStr.push(this.quoteIdentifier(attr) + ' ' + match[1]);\n          foreignKeys[attr] = match[2];\n        } else {\n          attrStr.push(this.quoteIdentifier(attr) + ' ' + dataType);\n        }\n      }\n    }\n\n    const values = {\n        table: this.quoteTable(tableName),\n        attributes: attrStr.join(', ')\n      },\n      pkString = primaryKeys.map(pk => { return this.quoteIdentifier(pk); }).join(', ');\n\n    if (options.uniqueKeys) {\n      _.each(options.uniqueKeys, (columns, indexName) => {\n        if (!_.isString(indexName)) {\n          indexName = 'uniq_' + tableName + '_' + columns.fields.join('_');\n        }\n        values.attributes += ', CONSTRAINT ' + self.quoteIdentifier(indexName) + ' UNIQUE (' + _.map(columns.fields, self.quoteIdentifier).join(', ') + ')';\n      });\n    }\n\n    if (pkString.length > 0) {\n      values.attributes += ', PRIMARY KEY (' + pkString + ')';\n    }\n\n    for (const fkey in foreignKeys) {\n      if (foreignKeys.hasOwnProperty(fkey)) {\n        values.attributes += ', FOREIGN KEY (' + this.quoteIdentifier(fkey) + ') ' + foreignKeys[fkey];\n      }\n    }\n\n    return _.template(query, this._templateSettings)(values).trim() + ';';\n  },\n\n  describeTableQuery(tableName, schema) {\n    let sql = [\n      'SELECT',\n      \"c.COLUMN_NAME AS 'Name',\",\n      \"c.DATA_TYPE AS 'Type',\",\n      \"c.CHARACTER_MAXIMUM_LENGTH AS 'Length',\",\n      \"c.IS_NULLABLE as 'IsNull',\",\n      \"COLUMN_DEFAULT AS 'Default',\",\n      \"pk.CONSTRAINT_TYPE AS 'Constraint'\",\n      'FROM',\n      'INFORMATION_SCHEMA.TABLES t',\n      'INNER JOIN',\n      'INFORMATION_SCHEMA.COLUMNS c ON t.TABLE_NAME = c.TABLE_NAME AND t.TABLE_SCHEMA = c.TABLE_SCHEMA',\n      'LEFT JOIN (SELECT tc.table_schema, tc.table_name, ',\n      'cu.column_name, tc.constraint_type ',\n      'FROM information_schema.TABLE_CONSTRAINTS tc ',\n      'JOIN information_schema.KEY_COLUMN_USAGE  cu ',\n      'ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name ',\n      'and tc.constraint_name=cu.constraint_name ',\n      'and tc.constraint_type=\\'PRIMARY KEY\\') pk ',\n      'ON pk.table_schema=c.table_schema ',\n      'AND pk.table_name=c.table_name ',\n      'AND pk.column_name=c.column_name ',\n      'WHERE t.TABLE_NAME =', wrapSingleQuote(tableName)\n    ].join(' ');\n\n    if (schema) {\n      sql += 'AND t.TABLE_SCHEMA =' + wrapSingleQuote(schema);\n    }\n\n    return sql;\n  },\n\n  renameTableQuery(before, after) {\n    const query = 'EXEC sp_rename <%= before %>, <%= after %>;';\n    return _.template(query, this._templateSettings)({\n      before: this.quoteTable(before),\n      after: this.quoteTable(after)\n    });\n  },\n\n  showTablesQuery() {\n    return 'SELECT TABLE_NAME, TABLE_SCHEMA FROM INFORMATION_SCHEMA.TABLES;';\n  },\n\n  dropTableQuery(tableName) {\n    const query = \"IF OBJECT_ID('<%= table %>', 'U') IS NOT NULL DROP TABLE <%= table %>\";\n    const values = {\n      table: this.quoteTable(tableName)\n    };\n\n    return _.template(query, this._templateSettings)(values).trim() + ';';\n  },\n\n  addColumnQuery(table, key, dataType) {\n    // FIXME: attributeToSQL SHOULD be using attributes in addColumnQuery\n    //        but instead we need to pass the key along as the field here\n    dataType.field = key;\n\n    const query = 'ALTER TABLE <%= table %> ADD <%= attribute %>;',\n      attribute = _.template('<%= key %> <%= definition %>', this._templateSettings)({\n        key: this.quoteIdentifier(key),\n        definition: this.attributeToSQL(dataType, {\n          context: 'addColumn'\n        })\n      });\n\n    return _.template(query, this._templateSettings)({\n      table: this.quoteTable(table),\n      attribute\n    });\n  },\n\n  removeColumnQuery(tableName, attributeName) {\n    const query = 'ALTER TABLE <%= tableName %> DROP COLUMN <%= attributeName %>;';\n    return _.template(query, this._templateSettings)({\n      tableName: this.quoteTable(tableName),\n      attributeName: this.quoteIdentifier(attributeName)\n    });\n  },\n\n  changeColumnQuery(tableName, attributes) {\n    const query = 'ALTER TABLE <%= tableName %> <%= query %>;';\n    const attrString = [],\n      constraintString = [];\n\n    for (const attributeName in attributes) {\n      const definition = attributes[attributeName];\n      if (definition.match(/REFERENCES/)) {\n        constraintString.push(_.template('<%= fkName %> FOREIGN KEY (<%= attrName %>) <%= definition %>', this._templateSettings)({\n          fkName: this.quoteIdentifier(attributeName + '_foreign_idx'),\n          attrName: this.quoteIdentifier(attributeName),\n          definition: definition.replace(/.+?(?=REFERENCES)/, '')\n        }));\n      } else {\n        attrString.push(_.template('<%= attrName %> <%= definition %>', this._templateSettings)({\n          attrName: this.quoteIdentifier(attributeName),\n          definition\n        }));\n      }\n    }\n\n    let finalQuery = '';\n    if (attrString.length) {\n      finalQuery += 'ALTER COLUMN ' + attrString.join(', ');\n      finalQuery += constraintString.length ? ' ' : '';\n    }\n    if (constraintString.length) {\n      finalQuery += 'ADD CONSTRAINT ' + constraintString.join(', ');\n    }\n\n    return _.template(query, this._templateSettings)({\n      tableName: this.quoteTable(tableName),\n      query: finalQuery\n    });\n  },\n\n  renameColumnQuery(tableName, attrBefore, attributes) {\n    const query = \"EXEC sp_rename '<%= tableName %>.<%= before %>', '<%= after %>', 'COLUMN';\",\n      newName = Object.keys(attributes)[0];\n\n    return _.template(query, this._templateSettings)({\n      tableName: this.quoteTable(tableName),\n      before: attrBefore,\n      after: newName\n    });\n  },\n\n  bulkInsertQuery(tableName, attrValueHashes, options, attributes) {\n    options = options || {};\n    attributes = attributes || {};\n    const query = 'INSERT INTO <%= table %> (<%= attributes %>)<%= output %> VALUES <%= tuples %>;',\n      emptyQuery = 'INSERT INTO <%= table %><%= output %> DEFAULT VALUES',\n      tuples = [],\n      allAttributes = [],\n      allQueries = [];\n\n    let needIdentityInsertWrapper = false,\n      outputFragment;\n\n    if (options.returning) {\n      outputFragment = ' OUTPUT INSERTED.*';\n    }\n\n    _.forEach(attrValueHashes, attrValueHash => {\n      // special case for empty objects with primary keys\n      const fields = Object.keys(attrValueHash);\n      const firstAttr = attributes[fields[0]];\n      if (fields.length === 1 && firstAttr && firstAttr.autoIncrement && attrValueHash[fields[0]] === null) {\n        allQueries.push(emptyQuery);\n        return;\n      }\n\n      // normal case\n      _.forOwn(attrValueHash, (value, key) => {\n        if (value !== null && attributes[key] && attributes[key].autoIncrement) {\n          needIdentityInsertWrapper = true;\n        }\n\n        if (allAttributes.indexOf(key) === -1) {\n          if (value === null && attributes[key] && attributes[key].autoIncrement)\n            return;\n\n          allAttributes.push(key);\n        }\n      });\n    });\n\n    if (allAttributes.length > 0) {\n      _.forEach(attrValueHashes, attrValueHash => {\n        tuples.push('(' +\n          allAttributes.map(key =>\n            this.escape(attrValueHash[key])).join(',') +\n        ')');\n      });\n\n      allQueries.push(query);\n    }\n    const commands = [];\n    let offset = 0;\n    const batch = Math.floor(250 / (allAttributes.length + 1)) + 1;\n    while (offset < Math.max(tuples.length, 1)) {\n      const replacements = {\n        table: this.quoteTable(tableName),\n        attributes: allAttributes.map(attr =>\n          this.quoteIdentifier(attr)).join(','),\n        tuples: tuples.slice(offset, Math.min(tuples.length, offset + batch)),\n        output: outputFragment\n      };\n\n      let generatedQuery = _.template(allQueries.join(';'), this._templateSettings)(replacements);\n      if (needIdentityInsertWrapper) {\n        generatedQuery = [\n          'SET IDENTITY_INSERT', this.quoteTable(tableName), 'ON;',\n          generatedQuery,\n          'SET IDENTITY_INSERT', this.quoteTable(tableName), 'OFF;'\n        ].join(' ');\n      }\n      commands.push(generatedQuery);\n      offset += batch;\n    }\n    return commands.join(';');\n  },\n\n  updateQuery(tableName, attrValueHash, where, options, attributes) {\n    let sql = super.updateQuery(tableName, attrValueHash, where, options, attributes);\n    if (options.limit) {\n      const updateArgs = `UPDATE TOP(${this.escape(options.limit)})`;\n      sql = sql.replace('UPDATE', updateArgs);\n    }\n    return sql;\n  },\n\n  upsertQuery(tableName, insertValues, updateValues, where, model) {\n    const targetTableAlias = this.quoteTable(`${tableName}_target`);\n    const sourceTableAlias = this.quoteTable(`${tableName}_source`);\n    const primaryKeysAttrs = [];\n    const identityAttrs = [];\n    const uniqueAttrs = [];\n    const tableNameQuoted = this.quoteTable(tableName);\n    let needIdentityInsertWrapper = false;\n\n\n    //Obtain primaryKeys, uniquekeys and identity attrs from rawAttributes as model is not passed\n    for (const key in model.rawAttributes) {\n      if (model.rawAttributes[key].primaryKey) {\n        primaryKeysAttrs.push(model.rawAttributes[key].field || key);\n      }\n      if (model.rawAttributes[key].unique) {\n        uniqueAttrs.push(model.rawAttributes[key].field || key);\n      }\n      if (model.rawAttributes[key].autoIncrement) {\n        identityAttrs.push(model.rawAttributes[key].field || key);\n      }\n    }\n\n    //Add unique indexes defined by indexes option to uniqueAttrs\n    for (const index of model.options.indexes) {\n      if (index.unique && index.fields) {\n        for (const field of index.fields) {\n          const fieldName = typeof field === 'string' ? field : field.name || field.attribute;\n          if (uniqueAttrs.indexOf(fieldName) === -1 && model.rawAttributes[fieldName]) {\n            uniqueAttrs.push(fieldName);\n          }\n        }\n      }\n    }\n\n    const updateKeys = Object.keys(updateValues);\n    const insertKeys = Object.keys(insertValues);\n    const insertKeysQuoted = insertKeys.map(key => this.quoteIdentifier(key)).join(', ');\n    const insertValuesEscaped = insertKeys.map(key => this.escape(insertValues[key])).join(', ');\n    const sourceTableQuery = `VALUES(${insertValuesEscaped})`; //Virtual Table\n    let joinCondition;\n\n    //IDENTITY_INSERT Condition\n    identityAttrs.forEach(key => {\n      if (updateValues[key] && updateValues[key] !== null) {\n        needIdentityInsertWrapper = true;\n        /*\n         * IDENTITY_INSERT Column Cannot be updated, only inserted\n         * http://stackoverflow.com/a/30176254/2254360\n         */\n      }\n    });\n\n    //Filter NULL Clauses\n    const clauses = where[Op.or].filter(clause => {\n      let valid = true;\n      /*\n       * Exclude NULL Composite PK/UK. Partial Composite clauses should also be excluded as it doesn't guarantee a single row\n       */\n      for (const key in clause) {\n        if (!clause[key]) {\n          valid = false;\n          break;\n        }\n      }\n      return valid;\n    });\n\n    /*\n     * Generate ON condition using PK(s).\n     * If not, generate using UK(s). Else throw error\n     */\n    const getJoinSnippet = array => {\n      return array.map(key => {\n        key = this.quoteIdentifier(key);\n        return `${targetTableAlias}.${key} = ${sourceTableAlias}.${key}`;\n      });\n    };\n\n    if (clauses.length === 0) {\n      throw new Error('Primary Key or Unique key should be passed to upsert query');\n    } else {\n      // Search for primary key attribute in clauses -- Model can have two separate unique keys\n      for (const key in clauses) {\n        const keys = Object.keys(clauses[key]);\n        if (primaryKeysAttrs.indexOf(keys[0]) !== -1) {\n          joinCondition = getJoinSnippet(primaryKeysAttrs).join(' AND ');\n          break;\n        }\n      }\n      if (!joinCondition) {\n        joinCondition = getJoinSnippet(uniqueAttrs).join(' AND ');\n      }\n    }\n\n    // Remove the IDENTITY_INSERT Column from update\n    const updateSnippet = updateKeys.filter(key => {\n      if (identityAttrs.indexOf(key) === -1) {\n        return true;\n      } else {\n        return false;\n      }\n    })\n      .map(key => {\n        const value = this.escape(updateValues[key]);\n        key = this.quoteIdentifier(key);\n        return `${targetTableAlias}.${key} = ${value}`;\n      }).join(', ');\n\n    const insertSnippet = `(${insertKeysQuoted}) VALUES(${insertValuesEscaped})`;\n    let query = `MERGE INTO ${tableNameQuoted} WITH(HOLDLOCK) AS ${targetTableAlias} USING (${sourceTableQuery}) AS ${sourceTableAlias}(${insertKeysQuoted}) ON ${joinCondition}`;\n    query += ` WHEN MATCHED THEN UPDATE SET ${updateSnippet} WHEN NOT MATCHED THEN INSERT ${insertSnippet} OUTPUT $action, INSERTED.*;`;\n    if (needIdentityInsertWrapper) {\n      query = `SET IDENTITY_INSERT ${tableNameQuoted} ON; ${query} SET IDENTITY_INSERT ${tableNameQuoted} OFF;`;\n    }\n    return query;\n  },\n\n  deleteQuery(tableName, where, options) {\n    options = options || {};\n\n    const table = this.quoteTable(tableName);\n    if (options.truncate === true) {\n      // Truncate does not allow LIMIT and WHERE\n      return 'TRUNCATE TABLE ' + table;\n    }\n\n    where = this.getWhereConditions(where);\n    let limit = '';\n    const query = 'DELETE<%= limit %> FROM <%= table %><%= where %>; ' +\n                'SELECT @@ROWCOUNT AS AFFECTEDROWS;';\n\n    if (_.isUndefined(options.limit)) {\n      options.limit = 1;\n    }\n\n    if (options.limit) {\n      limit = ' TOP(' + this.escape(options.limit) + ')';\n    }\n\n    const replacements = {\n      limit,\n      table,\n      where\n    };\n\n    if (replacements.where) {\n      replacements.where = ' WHERE ' + replacements.where;\n    }\n\n    return _.template(query, this._templateSettings)(replacements);\n  },\n\n  showIndexesQuery(tableName) {\n    const sql = \"EXEC sys.sp_helpindex @objname = N'<%= tableName %>';\";\n    return _.template(sql, this._templateSettings)({\n      tableName: this.quoteTable(tableName)\n    });\n  },\n\n  showConstraintsQuery(tableName) {\n    return `EXEC sp_helpconstraint @objname = ${this.escape(this.quoteTable(tableName))};`;\n  },\n\n  removeIndexQuery(tableName, indexNameOrAttributes) {\n    const sql = 'DROP INDEX <%= indexName %> ON <%= tableName %>';\n    let indexName = indexNameOrAttributes;\n\n    if (typeof indexName !== 'string') {\n      indexName = Utils.underscore(tableName + '_' + indexNameOrAttributes.join('_'));\n    }\n\n    const values = {\n      tableName: this.quoteIdentifiers(tableName),\n      indexName: this.quoteIdentifiers(indexName)\n    };\n\n    return _.template(sql, this._templateSettings)(values);\n  },\n\n  attributeToSQL(attribute) {\n    if (!_.isPlainObject(attribute)) {\n      attribute = {\n        type: attribute\n      };\n    }\n\n    // handle self referential constraints\n    if (attribute.references) {\n\n      if (attribute.Model && attribute.Model.tableName === attribute.references.model) {\n        this.sequelize.log('MSSQL does not support self referencial constraints, '\n          + 'we will remove it but we recommend restructuring your query');\n        attribute.onDelete = '';\n        attribute.onUpdate = '';\n      }\n    }\n\n    let template;\n\n    if (attribute.type instanceof DataTypes.ENUM) {\n      if (attribute.type.values && !attribute.values) attribute.values = attribute.type.values;\n\n      // enums are a special case\n      template = attribute.type.toSql();\n      template += ' CHECK (' + this.quoteIdentifier(attribute.field) + ' IN(' + _.map(attribute.values, value => {\n        return this.escape(value);\n      }).join(', ') + '))';\n      return template;\n    } else {\n      template = attribute.type.toString();\n    }\n\n    if (attribute.allowNull === false) {\n      template += ' NOT NULL';\n    } else if (!attribute.primaryKey && !Utils.defaultValueSchemable(attribute.defaultValue)) {\n      template += ' NULL';\n    }\n\n    if (attribute.autoIncrement) {\n      template += ' IDENTITY(1,1)';\n    }\n\n    // Blobs/texts cannot have a defaultValue\n    if (attribute.type !== 'TEXT' && attribute.type._binary !== true &&\n        Utils.defaultValueSchemable(attribute.defaultValue)) {\n      template += ' DEFAULT ' + this.escape(attribute.defaultValue);\n    }\n\n    if (attribute.unique === true) {\n      template += ' UNIQUE';\n    }\n\n    if (attribute.primaryKey) {\n      template += ' PRIMARY KEY';\n    }\n\n    if (attribute.references) {\n      template += ' REFERENCES ' + this.quoteTable(attribute.references.model);\n\n      if (attribute.references.key) {\n        template += ' (' + this.quoteIdentifier(attribute.references.key) + ')';\n      } else {\n        template += ' (' + this.quoteIdentifier('id') + ')';\n      }\n\n      if (attribute.onDelete) {\n        template += ' ON DELETE ' + attribute.onDelete.toUpperCase();\n      }\n\n      if (attribute.onUpdate) {\n        template += ' ON UPDATE ' + attribute.onUpdate.toUpperCase();\n      }\n    }\n\n    return template;\n  },\n\n  attributesToSQL(attributes, options) {\n    const result = {},\n      existingConstraints = [];\n    let key,\n      attribute;\n\n    for (key in attributes) {\n      attribute = attributes[key];\n\n      if (attribute.references) {\n\n        if (existingConstraints.indexOf(attribute.references.model.toString()) !== -1) {\n          // no cascading constraints to a table more than once\n          attribute.onDelete = '';\n          attribute.onUpdate = '';\n        } else {\n          existingConstraints.push(attribute.references.model.toString());\n\n          // NOTE: this really just disables cascading updates for all\n          //       definitions. Can be made more robust to support the\n          //       few cases where MSSQL actually supports them\n          attribute.onUpdate = '';\n        }\n\n      }\n\n      if (key && !attribute.field) attribute.field = key;\n      result[attribute.field || key] = this.attributeToSQL(attribute, options);\n    }\n\n    return result;\n  },\n\n  createTrigger() {\n    throwMethodUndefined('createTrigger');\n  },\n\n  dropTrigger() {\n    throwMethodUndefined('dropTrigger');\n  },\n\n  renameTrigger() {\n    throwMethodUndefined('renameTrigger');\n  },\n\n  createFunction() {\n    throwMethodUndefined('createFunction');\n  },\n\n  dropFunction() {\n    throwMethodUndefined('dropFunction');\n  },\n\n  renameFunction() {\n    throwMethodUndefined('renameFunction');\n  },\n\n  quoteIdentifier(identifier) {\n    if (identifier === '*') return identifier;\n    return '[' + identifier.replace(/[\\[\\]']+/g, '') + ']';\n  },\n\n  getForeignKeysQuery(table) {\n    const tableName = table.tableName || table;\n    let sql = [\n      'SELECT',\n      'constraint_name = C.CONSTRAINT_NAME',\n      'FROM',\n      'INFORMATION_SCHEMA.TABLE_CONSTRAINTS C',\n      \"WHERE C.CONSTRAINT_TYPE = 'FOREIGN KEY'\",\n      'AND C.TABLE_NAME =', wrapSingleQuote(tableName)\n    ].join(' ');\n\n    if (table.schema) {\n      sql += ' AND C.TABLE_SCHEMA =' + wrapSingleQuote(table.schema);\n    }\n\n    return sql;\n  },\n\n  getForeignKeyQuery(table, attributeName) {\n    const tableName = table.tableName || table;\n    let sql = [\n      'SELECT',\n      'constraint_name = TC.CONSTRAINT_NAME',\n      'FROM',\n      'INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC',\n      'JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CCU',\n      'ON TC.CONSTRAINT_NAME = CCU.CONSTRAINT_NAME',\n      \"WHERE TC.CONSTRAINT_TYPE = 'FOREIGN KEY'\",\n      'AND TC.TABLE_NAME =', wrapSingleQuote(tableName),\n      'AND CCU.COLUMN_NAME =', wrapSingleQuote(attributeName)\n    ].join(' ');\n\n    if (table.schema) {\n      sql += ' AND TC.TABLE_SCHEMA =' + wrapSingleQuote(table.schema);\n    }\n\n    return sql;\n  },\n\n  getPrimaryKeyConstraintQuery(table, attributeName) {\n    const tableName = wrapSingleQuote(table.tableName || table);\n    return [\n      'SELECT K.TABLE_NAME AS tableName,',\n      'K.COLUMN_NAME AS columnName,',\n      'K.CONSTRAINT_NAME AS constraintName',\n      'FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS C',\n      'JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS K',\n      'ON C.TABLE_NAME = K.TABLE_NAME',\n      'AND C.CONSTRAINT_CATALOG = K.CONSTRAINT_CATALOG',\n      'AND C.CONSTRAINT_SCHEMA = K.CONSTRAINT_SCHEMA',\n      'AND C.CONSTRAINT_NAME = K.CONSTRAINT_NAME',\n      'WHERE C.CONSTRAINT_TYPE = \\'PRIMARY KEY\\'',\n      `AND K.COLUMN_NAME = ${wrapSingleQuote(attributeName)}`,\n      `AND K.TABLE_NAME = ${tableName};`\n    ].join(' ');\n  },\n\n  dropForeignKeyQuery(tableName, foreignKey) {\n    return _.template('ALTER TABLE <%= table %> DROP <%= key %>', this._templateSettings)({\n      table: this.quoteTable(tableName),\n      key: this.quoteIdentifier(foreignKey)\n    });\n  },\n\n  getDefaultConstraintQuery(tableName, attributeName) {\n    const sql = 'SELECT name FROM SYS.DEFAULT_CONSTRAINTS ' +\n      \"WHERE PARENT_OBJECT_ID = OBJECT_ID('<%= table %>', 'U') \" +\n      \"AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns WHERE NAME = ('<%= column %>') \" +\n      \"AND object_id = OBJECT_ID('<%= table %>', 'U'));\";\n    return _.template(sql, this._templateSettings)({\n      table: this.quoteTable(tableName),\n      column: attributeName\n    });\n  },\n\n  dropConstraintQuery(tableName, constraintName) {\n    const sql = 'ALTER TABLE <%= table %> DROP CONSTRAINT <%= constraint %>;';\n    return _.template(sql, this._templateSettings)({\n      table: this.quoteTable(tableName),\n      constraint: this.quoteIdentifier(constraintName)\n    });\n  },\n\n  setAutocommitQuery() {\n    return '';\n  },\n\n  setIsolationLevelQuery() {\n\n  },\n\n  generateTransactionId() {\n    return randomBytes(10).toString('hex');\n  },\n\n  startTransactionQuery(transaction) {\n    if (transaction.parent) {\n      return 'SAVE TRANSACTION ' + this.quoteIdentifier(transaction.name) + ';';\n    }\n\n    return 'BEGIN TRANSACTION;';\n  },\n\n  commitTransactionQuery(transaction) {\n    if (transaction.parent) {\n      return;\n    }\n\n    return 'COMMIT TRANSACTION;';\n  },\n\n  rollbackTransactionQuery(transaction) {\n    if (transaction.parent) {\n      return 'ROLLBACK TRANSACTION ' + this.quoteIdentifier(transaction.name) + ';';\n    }\n\n    return 'ROLLBACK TRANSACTION;';\n  },\n\n  selectFromTableFragment(options, model, attributes, tables, mainTableAs, where) {\n    let topFragment = '';\n    let mainFragment = 'SELECT ' + attributes.join(', ') + ' FROM ' + tables;\n\n    // Handle SQL Server 2008 with TOP instead of LIMIT\n    if (semver.valid(this.sequelize.options.databaseVersion) && semver.lt(this.sequelize.options.databaseVersion, '11.0.0')) {\n      if (options.limit) {\n        topFragment = 'TOP ' + options.limit + ' ';\n      }\n      if (options.offset) {\n        const offset = options.offset || 0,\n          isSubQuery = options.hasIncludeWhere || options.hasIncludeRequired || options.hasMultiAssociation;\n        let orders = { mainQueryOrder: [] };\n        if (options.order) {\n          orders = this.getQueryOrders(options, model, isSubQuery);\n        }\n\n        if (!orders.mainQueryOrder.length) {\n          orders.mainQueryOrder.push(this.quoteIdentifier(model.primaryKeyField));\n        }\n\n        const tmpTable = mainTableAs ? mainTableAs : 'OffsetTable';\n        const whereFragment = where ? ' WHERE ' + where : '';\n\n        /*\n         * For earlier versions of SQL server, we need to nest several queries\n         * in order to emulate the OFFSET behavior.\n         *\n         * 1. The outermost query selects all items from the inner query block.\n         *    This is due to a limitation in SQL server with the use of computed\n         *    columns (e.g. SELECT ROW_NUMBER()...AS x) in WHERE clauses.\n         * 2. The next query handles the LIMIT and OFFSET behavior by getting\n         *    the TOP N rows of the query where the row number is > OFFSET\n         * 3. The innermost query is the actual set we want information from\n         */\n        const fragment = 'SELECT TOP 100 PERCENT ' + attributes.join(', ') + ' FROM ' +\n                        '(SELECT ' + topFragment + '*' +\n                          ' FROM (SELECT ROW_NUMBER() OVER (ORDER BY ' + orders.mainQueryOrder.join(', ') + ') as row_num, * ' +\n                            ' FROM ' + tables + ' AS ' + tmpTable + whereFragment + ')' +\n                          ' AS ' + tmpTable + ' WHERE row_num > ' + offset + ')' +\n                        ' AS ' + tmpTable;\n        return fragment;\n      } else {\n        mainFragment = 'SELECT ' + topFragment + attributes.join(', ') + ' FROM ' + tables;\n      }\n    }\n\n    if (mainTableAs) {\n      mainFragment += ' AS ' + mainTableAs;\n    }\n\n    return mainFragment;\n  },\n\n  addLimitAndOffset(options, model) {\n    // Skip handling of limit and offset as postfixes for older SQL Server versions\n    if (semver.valid(this.sequelize.options.databaseVersion) && semver.lt(this.sequelize.options.databaseVersion, '11.0.0')) {\n      return '';\n    }\n\n    let fragment = '';\n    const offset = options.offset || 0,\n      isSubQuery = options.hasIncludeWhere || options.hasIncludeRequired || options.hasMultiAssociation;\n\n    let orders = {};\n    if (options.order) {\n      orders = this.getQueryOrders(options, model, isSubQuery);\n    }\n\n    if (options.limit || options.offset) {\n      if (!options.order || options.include && !orders.subQueryOrder.length) {\n        fragment += options.order && !isSubQuery ? ', ' : ' ORDER BY ';\n        fragment += this.quoteTable(options.tableAs || model.name) + '.' + this.quoteIdentifier(model.primaryKeyField);\n      }\n\n      if (options.offset || options.limit) {\n        fragment += ' OFFSET ' + this.escape(offset) + ' ROWS';\n      }\n\n      if (options.limit) {\n        fragment += ' FETCH NEXT ' + this.escape(options.limit) + ' ROWS ONLY';\n      }\n    }\n\n    return fragment;\n  },\n\n  booleanValue(value) {\n    return value ? 1 : 0;\n  }\n};\n\n// private methods\nfunction wrapSingleQuote(identifier) {\n  return Utils.addTicks(Utils.removeTicks(identifier, \"'\"), \"'\");\n}\n\nmodule.exports = QueryGenerator;\n","map":{"mappings":[{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mssql/query-generator.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}}],"sources":{"../node_modules/sequelize/lib/dialects/mssql/query-generator.js":"'use strict';\n\nconst _ = require('lodash');\nconst Utils = require('../../utils');\nconst DataTypes = require('../../data-types');\nconst AbstractQueryGenerator = require('../abstract/query-generator');\nconst randomBytes = require('crypto').randomBytes;\nconst semver = require('semver');\n\nconst Op = require('../../operators');\n\n/* istanbul ignore next */\nconst throwMethodUndefined = function(methodName) {\n  throw new Error('The method \"' + methodName + '\" is not defined! Please add it to your sql dialect.');\n};\n\nconst QueryGenerator = {\n  __proto__: AbstractQueryGenerator,\n  options: {},\n  dialect: 'mssql',\n\n  createSchema(schema) {\n    return [\n      'IF NOT EXISTS (SELECT schema_name',\n      'FROM information_schema.schemata',\n      'WHERE schema_name =', wrapSingleQuote(schema), ')',\n      'BEGIN',\n      \"EXEC sp_executesql N'CREATE SCHEMA\",\n      this.quoteIdentifier(schema),\n      \";'\",\n      'END;'\n    ].join(' ');\n  },\n\n  showSchemasQuery() {\n    return [\n      'SELECT \"name\" as \"schema_name\" FROM sys.schemas as s',\n      'WHERE \"s\".\"name\" NOT IN (',\n      \"'INFORMATION_SCHEMA', 'dbo', 'guest', 'sys', 'archive'\",\n      ')', 'AND', '\"s\".\"name\" NOT LIKE', \"'db_%'\"\n    ].join(' ');\n  },\n\n  versionQuery() {\n    // Uses string manipulation to convert the MS Maj.Min.Patch.Build to semver Maj.Min.Patch\n    return [\n      'DECLARE @ms_ver NVARCHAR(20);',\n      \"SET @ms_ver = REVERSE(CONVERT(NVARCHAR(20), SERVERPROPERTY('ProductVersion')));\",\n      \"SELECT REVERSE(SUBSTRING(@ms_ver, CHARINDEX('.', @ms_ver)+1, 20)) AS 'version'\"\n    ].join(' ');\n  },\n\n  createTableQuery(tableName, attributes, options) {\n    const query = \"IF OBJECT_ID('<%= table %>', 'U') IS NULL CREATE TABLE <%= table %> (<%= attributes %>)\",\n      primaryKeys = [],\n      foreignKeys = {},\n      attrStr = [],\n      self = this;\n\n    for (const attr in attributes) {\n      if (attributes.hasOwnProperty(attr)) {\n        const dataType = attributes[attr];\n        let match;\n\n        if (_.includes(dataType, 'PRIMARY KEY')) {\n          primaryKeys.push(attr);\n\n          if (_.includes(dataType, 'REFERENCES')) {\n            // MSSQL doesn't support inline REFERENCES declarations: move to the end\n            match = dataType.match(/^(.+) (REFERENCES.*)$/);\n            attrStr.push(this.quoteIdentifier(attr) + ' ' + match[1].replace(/PRIMARY KEY/, ''));\n            foreignKeys[attr] = match[2];\n          } else {\n            attrStr.push(this.quoteIdentifier(attr) + ' ' + dataType.replace(/PRIMARY KEY/, ''));\n          }\n        } else if (_.includes(dataType, 'REFERENCES')) {\n          // MSSQL doesn't support inline REFERENCES declarations: move to the end\n          match = dataType.match(/^(.+) (REFERENCES.*)$/);\n          attrStr.push(this.quoteIdentifier(attr) + ' ' + match[1]);\n          foreignKeys[attr] = match[2];\n        } else {\n          attrStr.push(this.quoteIdentifier(attr) + ' ' + dataType);\n        }\n      }\n    }\n\n    const values = {\n        table: this.quoteTable(tableName),\n        attributes: attrStr.join(', ')\n      },\n      pkString = primaryKeys.map(pk => { return this.quoteIdentifier(pk); }).join(', ');\n\n    if (options.uniqueKeys) {\n      _.each(options.uniqueKeys, (columns, indexName) => {\n        if (!_.isString(indexName)) {\n          indexName = 'uniq_' + tableName + '_' + columns.fields.join('_');\n        }\n        values.attributes += ', CONSTRAINT ' + self.quoteIdentifier(indexName) + ' UNIQUE (' + _.map(columns.fields, self.quoteIdentifier).join(', ') + ')';\n      });\n    }\n\n    if (pkString.length > 0) {\n      values.attributes += ', PRIMARY KEY (' + pkString + ')';\n    }\n\n    for (const fkey in foreignKeys) {\n      if (foreignKeys.hasOwnProperty(fkey)) {\n        values.attributes += ', FOREIGN KEY (' + this.quoteIdentifier(fkey) + ') ' + foreignKeys[fkey];\n      }\n    }\n\n    return _.template(query, this._templateSettings)(values).trim() + ';';\n  },\n\n  describeTableQuery(tableName, schema) {\n    let sql = [\n      'SELECT',\n      \"c.COLUMN_NAME AS 'Name',\",\n      \"c.DATA_TYPE AS 'Type',\",\n      \"c.CHARACTER_MAXIMUM_LENGTH AS 'Length',\",\n      \"c.IS_NULLABLE as 'IsNull',\",\n      \"COLUMN_DEFAULT AS 'Default',\",\n      \"pk.CONSTRAINT_TYPE AS 'Constraint'\",\n      'FROM',\n      'INFORMATION_SCHEMA.TABLES t',\n      'INNER JOIN',\n      'INFORMATION_SCHEMA.COLUMNS c ON t.TABLE_NAME = c.TABLE_NAME AND t.TABLE_SCHEMA = c.TABLE_SCHEMA',\n      'LEFT JOIN (SELECT tc.table_schema, tc.table_name, ',\n      'cu.column_name, tc.constraint_type ',\n      'FROM information_schema.TABLE_CONSTRAINTS tc ',\n      'JOIN information_schema.KEY_COLUMN_USAGE  cu ',\n      'ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name ',\n      'and tc.constraint_name=cu.constraint_name ',\n      'and tc.constraint_type=\\'PRIMARY KEY\\') pk ',\n      'ON pk.table_schema=c.table_schema ',\n      'AND pk.table_name=c.table_name ',\n      'AND pk.column_name=c.column_name ',\n      'WHERE t.TABLE_NAME =', wrapSingleQuote(tableName)\n    ].join(' ');\n\n    if (schema) {\n      sql += 'AND t.TABLE_SCHEMA =' + wrapSingleQuote(schema);\n    }\n\n    return sql;\n  },\n\n  renameTableQuery(before, after) {\n    const query = 'EXEC sp_rename <%= before %>, <%= after %>;';\n    return _.template(query, this._templateSettings)({\n      before: this.quoteTable(before),\n      after: this.quoteTable(after)\n    });\n  },\n\n  showTablesQuery() {\n    return 'SELECT TABLE_NAME, TABLE_SCHEMA FROM INFORMATION_SCHEMA.TABLES;';\n  },\n\n  dropTableQuery(tableName) {\n    const query = \"IF OBJECT_ID('<%= table %>', 'U') IS NOT NULL DROP TABLE <%= table %>\";\n    const values = {\n      table: this.quoteTable(tableName)\n    };\n\n    return _.template(query, this._templateSettings)(values).trim() + ';';\n  },\n\n  addColumnQuery(table, key, dataType) {\n    // FIXME: attributeToSQL SHOULD be using attributes in addColumnQuery\n    //        but instead we need to pass the key along as the field here\n    dataType.field = key;\n\n    const query = 'ALTER TABLE <%= table %> ADD <%= attribute %>;',\n      attribute = _.template('<%= key %> <%= definition %>', this._templateSettings)({\n        key: this.quoteIdentifier(key),\n        definition: this.attributeToSQL(dataType, {\n          context: 'addColumn'\n        })\n      });\n\n    return _.template(query, this._templateSettings)({\n      table: this.quoteTable(table),\n      attribute\n    });\n  },\n\n  removeColumnQuery(tableName, attributeName) {\n    const query = 'ALTER TABLE <%= tableName %> DROP COLUMN <%= attributeName %>;';\n    return _.template(query, this._templateSettings)({\n      tableName: this.quoteTable(tableName),\n      attributeName: this.quoteIdentifier(attributeName)\n    });\n  },\n\n  changeColumnQuery(tableName, attributes) {\n    const query = 'ALTER TABLE <%= tableName %> <%= query %>;';\n    const attrString = [],\n      constraintString = [];\n\n    for (const attributeName in attributes) {\n      const definition = attributes[attributeName];\n      if (definition.match(/REFERENCES/)) {\n        constraintString.push(_.template('<%= fkName %> FOREIGN KEY (<%= attrName %>) <%= definition %>', this._templateSettings)({\n          fkName: this.quoteIdentifier(attributeName + '_foreign_idx'),\n          attrName: this.quoteIdentifier(attributeName),\n          definition: definition.replace(/.+?(?=REFERENCES)/, '')\n        }));\n      } else {\n        attrString.push(_.template('<%= attrName %> <%= definition %>', this._templateSettings)({\n          attrName: this.quoteIdentifier(attributeName),\n          definition\n        }));\n      }\n    }\n\n    let finalQuery = '';\n    if (attrString.length) {\n      finalQuery += 'ALTER COLUMN ' + attrString.join(', ');\n      finalQuery += constraintString.length ? ' ' : '';\n    }\n    if (constraintString.length) {\n      finalQuery += 'ADD CONSTRAINT ' + constraintString.join(', ');\n    }\n\n    return _.template(query, this._templateSettings)({\n      tableName: this.quoteTable(tableName),\n      query: finalQuery\n    });\n  },\n\n  renameColumnQuery(tableName, attrBefore, attributes) {\n    const query = \"EXEC sp_rename '<%= tableName %>.<%= before %>', '<%= after %>', 'COLUMN';\",\n      newName = Object.keys(attributes)[0];\n\n    return _.template(query, this._templateSettings)({\n      tableName: this.quoteTable(tableName),\n      before: attrBefore,\n      after: newName\n    });\n  },\n\n  bulkInsertQuery(tableName, attrValueHashes, options, attributes) {\n    options = options || {};\n    attributes = attributes || {};\n    const query = 'INSERT INTO <%= table %> (<%= attributes %>)<%= output %> VALUES <%= tuples %>;',\n      emptyQuery = 'INSERT INTO <%= table %><%= output %> DEFAULT VALUES',\n      tuples = [],\n      allAttributes = [],\n      allQueries = [];\n\n    let needIdentityInsertWrapper = false,\n      outputFragment;\n\n    if (options.returning) {\n      outputFragment = ' OUTPUT INSERTED.*';\n    }\n\n    _.forEach(attrValueHashes, attrValueHash => {\n      // special case for empty objects with primary keys\n      const fields = Object.keys(attrValueHash);\n      const firstAttr = attributes[fields[0]];\n      if (fields.length === 1 && firstAttr && firstAttr.autoIncrement && attrValueHash[fields[0]] === null) {\n        allQueries.push(emptyQuery);\n        return;\n      }\n\n      // normal case\n      _.forOwn(attrValueHash, (value, key) => {\n        if (value !== null && attributes[key] && attributes[key].autoIncrement) {\n          needIdentityInsertWrapper = true;\n        }\n\n        if (allAttributes.indexOf(key) === -1) {\n          if (value === null && attributes[key] && attributes[key].autoIncrement)\n            return;\n\n          allAttributes.push(key);\n        }\n      });\n    });\n\n    if (allAttributes.length > 0) {\n      _.forEach(attrValueHashes, attrValueHash => {\n        tuples.push('(' +\n          allAttributes.map(key =>\n            this.escape(attrValueHash[key])).join(',') +\n        ')');\n      });\n\n      allQueries.push(query);\n    }\n    const commands = [];\n    let offset = 0;\n    const batch = Math.floor(250 / (allAttributes.length + 1)) + 1;\n    while (offset < Math.max(tuples.length, 1)) {\n      const replacements = {\n        table: this.quoteTable(tableName),\n        attributes: allAttributes.map(attr =>\n          this.quoteIdentifier(attr)).join(','),\n        tuples: tuples.slice(offset, Math.min(tuples.length, offset + batch)),\n        output: outputFragment\n      };\n\n      let generatedQuery = _.template(allQueries.join(';'), this._templateSettings)(replacements);\n      if (needIdentityInsertWrapper) {\n        generatedQuery = [\n          'SET IDENTITY_INSERT', this.quoteTable(tableName), 'ON;',\n          generatedQuery,\n          'SET IDENTITY_INSERT', this.quoteTable(tableName), 'OFF;'\n        ].join(' ');\n      }\n      commands.push(generatedQuery);\n      offset += batch;\n    }\n    return commands.join(';');\n  },\n\n  updateQuery(tableName, attrValueHash, where, options, attributes) {\n    let sql = super.updateQuery(tableName, attrValueHash, where, options, attributes);\n    if (options.limit) {\n      const updateArgs = `UPDATE TOP(${this.escape(options.limit)})`;\n      sql = sql.replace('UPDATE', updateArgs);\n    }\n    return sql;\n  },\n\n  upsertQuery(tableName, insertValues, updateValues, where, model) {\n    const targetTableAlias = this.quoteTable(`${tableName}_target`);\n    const sourceTableAlias = this.quoteTable(`${tableName}_source`);\n    const primaryKeysAttrs = [];\n    const identityAttrs = [];\n    const uniqueAttrs = [];\n    const tableNameQuoted = this.quoteTable(tableName);\n    let needIdentityInsertWrapper = false;\n\n\n    //Obtain primaryKeys, uniquekeys and identity attrs from rawAttributes as model is not passed\n    for (const key in model.rawAttributes) {\n      if (model.rawAttributes[key].primaryKey) {\n        primaryKeysAttrs.push(model.rawAttributes[key].field || key);\n      }\n      if (model.rawAttributes[key].unique) {\n        uniqueAttrs.push(model.rawAttributes[key].field || key);\n      }\n      if (model.rawAttributes[key].autoIncrement) {\n        identityAttrs.push(model.rawAttributes[key].field || key);\n      }\n    }\n\n    //Add unique indexes defined by indexes option to uniqueAttrs\n    for (const index of model.options.indexes) {\n      if (index.unique && index.fields) {\n        for (const field of index.fields) {\n          const fieldName = typeof field === 'string' ? field : field.name || field.attribute;\n          if (uniqueAttrs.indexOf(fieldName) === -1 && model.rawAttributes[fieldName]) {\n            uniqueAttrs.push(fieldName);\n          }\n        }\n      }\n    }\n\n    const updateKeys = Object.keys(updateValues);\n    const insertKeys = Object.keys(insertValues);\n    const insertKeysQuoted = insertKeys.map(key => this.quoteIdentifier(key)).join(', ');\n    const insertValuesEscaped = insertKeys.map(key => this.escape(insertValues[key])).join(', ');\n    const sourceTableQuery = `VALUES(${insertValuesEscaped})`; //Virtual Table\n    let joinCondition;\n\n    //IDENTITY_INSERT Condition\n    identityAttrs.forEach(key => {\n      if (updateValues[key] && updateValues[key] !== null) {\n        needIdentityInsertWrapper = true;\n        /*\n         * IDENTITY_INSERT Column Cannot be updated, only inserted\n         * http://stackoverflow.com/a/30176254/2254360\n         */\n      }\n    });\n\n    //Filter NULL Clauses\n    const clauses = where[Op.or].filter(clause => {\n      let valid = true;\n      /*\n       * Exclude NULL Composite PK/UK. Partial Composite clauses should also be excluded as it doesn't guarantee a single row\n       */\n      for (const key in clause) {\n        if (!clause[key]) {\n          valid = false;\n          break;\n        }\n      }\n      return valid;\n    });\n\n    /*\n     * Generate ON condition using PK(s).\n     * If not, generate using UK(s). Else throw error\n     */\n    const getJoinSnippet = array => {\n      return array.map(key => {\n        key = this.quoteIdentifier(key);\n        return `${targetTableAlias}.${key} = ${sourceTableAlias}.${key}`;\n      });\n    };\n\n    if (clauses.length === 0) {\n      throw new Error('Primary Key or Unique key should be passed to upsert query');\n    } else {\n      // Search for primary key attribute in clauses -- Model can have two separate unique keys\n      for (const key in clauses) {\n        const keys = Object.keys(clauses[key]);\n        if (primaryKeysAttrs.indexOf(keys[0]) !== -1) {\n          joinCondition = getJoinSnippet(primaryKeysAttrs).join(' AND ');\n          break;\n        }\n      }\n      if (!joinCondition) {\n        joinCondition = getJoinSnippet(uniqueAttrs).join(' AND ');\n      }\n    }\n\n    // Remove the IDENTITY_INSERT Column from update\n    const updateSnippet = updateKeys.filter(key => {\n      if (identityAttrs.indexOf(key) === -1) {\n        return true;\n      } else {\n        return false;\n      }\n    })\n      .map(key => {\n        const value = this.escape(updateValues[key]);\n        key = this.quoteIdentifier(key);\n        return `${targetTableAlias}.${key} = ${value}`;\n      }).join(', ');\n\n    const insertSnippet = `(${insertKeysQuoted}) VALUES(${insertValuesEscaped})`;\n    let query = `MERGE INTO ${tableNameQuoted} WITH(HOLDLOCK) AS ${targetTableAlias} USING (${sourceTableQuery}) AS ${sourceTableAlias}(${insertKeysQuoted}) ON ${joinCondition}`;\n    query += ` WHEN MATCHED THEN UPDATE SET ${updateSnippet} WHEN NOT MATCHED THEN INSERT ${insertSnippet} OUTPUT $action, INSERTED.*;`;\n    if (needIdentityInsertWrapper) {\n      query = `SET IDENTITY_INSERT ${tableNameQuoted} ON; ${query} SET IDENTITY_INSERT ${tableNameQuoted} OFF;`;\n    }\n    return query;\n  },\n\n  deleteQuery(tableName, where, options) {\n    options = options || {};\n\n    const table = this.quoteTable(tableName);\n    if (options.truncate === true) {\n      // Truncate does not allow LIMIT and WHERE\n      return 'TRUNCATE TABLE ' + table;\n    }\n\n    where = this.getWhereConditions(where);\n    let limit = '';\n    const query = 'DELETE<%= limit %> FROM <%= table %><%= where %>; ' +\n                'SELECT @@ROWCOUNT AS AFFECTEDROWS;';\n\n    if (_.isUndefined(options.limit)) {\n      options.limit = 1;\n    }\n\n    if (options.limit) {\n      limit = ' TOP(' + this.escape(options.limit) + ')';\n    }\n\n    const replacements = {\n      limit,\n      table,\n      where\n    };\n\n    if (replacements.where) {\n      replacements.where = ' WHERE ' + replacements.where;\n    }\n\n    return _.template(query, this._templateSettings)(replacements);\n  },\n\n  showIndexesQuery(tableName) {\n    const sql = \"EXEC sys.sp_helpindex @objname = N'<%= tableName %>';\";\n    return _.template(sql, this._templateSettings)({\n      tableName: this.quoteTable(tableName)\n    });\n  },\n\n  showConstraintsQuery(tableName) {\n    return `EXEC sp_helpconstraint @objname = ${this.escape(this.quoteTable(tableName))};`;\n  },\n\n  removeIndexQuery(tableName, indexNameOrAttributes) {\n    const sql = 'DROP INDEX <%= indexName %> ON <%= tableName %>';\n    let indexName = indexNameOrAttributes;\n\n    if (typeof indexName !== 'string') {\n      indexName = Utils.underscore(tableName + '_' + indexNameOrAttributes.join('_'));\n    }\n\n    const values = {\n      tableName: this.quoteIdentifiers(tableName),\n      indexName: this.quoteIdentifiers(indexName)\n    };\n\n    return _.template(sql, this._templateSettings)(values);\n  },\n\n  attributeToSQL(attribute) {\n    if (!_.isPlainObject(attribute)) {\n      attribute = {\n        type: attribute\n      };\n    }\n\n    // handle self referential constraints\n    if (attribute.references) {\n\n      if (attribute.Model && attribute.Model.tableName === attribute.references.model) {\n        this.sequelize.log('MSSQL does not support self referencial constraints, '\n          + 'we will remove it but we recommend restructuring your query');\n        attribute.onDelete = '';\n        attribute.onUpdate = '';\n      }\n    }\n\n    let template;\n\n    if (attribute.type instanceof DataTypes.ENUM) {\n      if (attribute.type.values && !attribute.values) attribute.values = attribute.type.values;\n\n      // enums are a special case\n      template = attribute.type.toSql();\n      template += ' CHECK (' + this.quoteIdentifier(attribute.field) + ' IN(' + _.map(attribute.values, value => {\n        return this.escape(value);\n      }).join(', ') + '))';\n      return template;\n    } else {\n      template = attribute.type.toString();\n    }\n\n    if (attribute.allowNull === false) {\n      template += ' NOT NULL';\n    } else if (!attribute.primaryKey && !Utils.defaultValueSchemable(attribute.defaultValue)) {\n      template += ' NULL';\n    }\n\n    if (attribute.autoIncrement) {\n      template += ' IDENTITY(1,1)';\n    }\n\n    // Blobs/texts cannot have a defaultValue\n    if (attribute.type !== 'TEXT' && attribute.type._binary !== true &&\n        Utils.defaultValueSchemable(attribute.defaultValue)) {\n      template += ' DEFAULT ' + this.escape(attribute.defaultValue);\n    }\n\n    if (attribute.unique === true) {\n      template += ' UNIQUE';\n    }\n\n    if (attribute.primaryKey) {\n      template += ' PRIMARY KEY';\n    }\n\n    if (attribute.references) {\n      template += ' REFERENCES ' + this.quoteTable(attribute.references.model);\n\n      if (attribute.references.key) {\n        template += ' (' + this.quoteIdentifier(attribute.references.key) + ')';\n      } else {\n        template += ' (' + this.quoteIdentifier('id') + ')';\n      }\n\n      if (attribute.onDelete) {\n        template += ' ON DELETE ' + attribute.onDelete.toUpperCase();\n      }\n\n      if (attribute.onUpdate) {\n        template += ' ON UPDATE ' + attribute.onUpdate.toUpperCase();\n      }\n    }\n\n    return template;\n  },\n\n  attributesToSQL(attributes, options) {\n    const result = {},\n      existingConstraints = [];\n    let key,\n      attribute;\n\n    for (key in attributes) {\n      attribute = attributes[key];\n\n      if (attribute.references) {\n\n        if (existingConstraints.indexOf(attribute.references.model.toString()) !== -1) {\n          // no cascading constraints to a table more than once\n          attribute.onDelete = '';\n          attribute.onUpdate = '';\n        } else {\n          existingConstraints.push(attribute.references.model.toString());\n\n          // NOTE: this really just disables cascading updates for all\n          //       definitions. Can be made more robust to support the\n          //       few cases where MSSQL actually supports them\n          attribute.onUpdate = '';\n        }\n\n      }\n\n      if (key && !attribute.field) attribute.field = key;\n      result[attribute.field || key] = this.attributeToSQL(attribute, options);\n    }\n\n    return result;\n  },\n\n  createTrigger() {\n    throwMethodUndefined('createTrigger');\n  },\n\n  dropTrigger() {\n    throwMethodUndefined('dropTrigger');\n  },\n\n  renameTrigger() {\n    throwMethodUndefined('renameTrigger');\n  },\n\n  createFunction() {\n    throwMethodUndefined('createFunction');\n  },\n\n  dropFunction() {\n    throwMethodUndefined('dropFunction');\n  },\n\n  renameFunction() {\n    throwMethodUndefined('renameFunction');\n  },\n\n  quoteIdentifier(identifier) {\n    if (identifier === '*') return identifier;\n    return '[' + identifier.replace(/[\\[\\]']+/g, '') + ']';\n  },\n\n  getForeignKeysQuery(table) {\n    const tableName = table.tableName || table;\n    let sql = [\n      'SELECT',\n      'constraint_name = C.CONSTRAINT_NAME',\n      'FROM',\n      'INFORMATION_SCHEMA.TABLE_CONSTRAINTS C',\n      \"WHERE C.CONSTRAINT_TYPE = 'FOREIGN KEY'\",\n      'AND C.TABLE_NAME =', wrapSingleQuote(tableName)\n    ].join(' ');\n\n    if (table.schema) {\n      sql += ' AND C.TABLE_SCHEMA =' + wrapSingleQuote(table.schema);\n    }\n\n    return sql;\n  },\n\n  getForeignKeyQuery(table, attributeName) {\n    const tableName = table.tableName || table;\n    let sql = [\n      'SELECT',\n      'constraint_name = TC.CONSTRAINT_NAME',\n      'FROM',\n      'INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC',\n      'JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CCU',\n      'ON TC.CONSTRAINT_NAME = CCU.CONSTRAINT_NAME',\n      \"WHERE TC.CONSTRAINT_TYPE = 'FOREIGN KEY'\",\n      'AND TC.TABLE_NAME =', wrapSingleQuote(tableName),\n      'AND CCU.COLUMN_NAME =', wrapSingleQuote(attributeName)\n    ].join(' ');\n\n    if (table.schema) {\n      sql += ' AND TC.TABLE_SCHEMA =' + wrapSingleQuote(table.schema);\n    }\n\n    return sql;\n  },\n\n  getPrimaryKeyConstraintQuery(table, attributeName) {\n    const tableName = wrapSingleQuote(table.tableName || table);\n    return [\n      'SELECT K.TABLE_NAME AS tableName,',\n      'K.COLUMN_NAME AS columnName,',\n      'K.CONSTRAINT_NAME AS constraintName',\n      'FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS C',\n      'JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS K',\n      'ON C.TABLE_NAME = K.TABLE_NAME',\n      'AND C.CONSTRAINT_CATALOG = K.CONSTRAINT_CATALOG',\n      'AND C.CONSTRAINT_SCHEMA = K.CONSTRAINT_SCHEMA',\n      'AND C.CONSTRAINT_NAME = K.CONSTRAINT_NAME',\n      'WHERE C.CONSTRAINT_TYPE = \\'PRIMARY KEY\\'',\n      `AND K.COLUMN_NAME = ${wrapSingleQuote(attributeName)}`,\n      `AND K.TABLE_NAME = ${tableName};`\n    ].join(' ');\n  },\n\n  dropForeignKeyQuery(tableName, foreignKey) {\n    return _.template('ALTER TABLE <%= table %> DROP <%= key %>', this._templateSettings)({\n      table: this.quoteTable(tableName),\n      key: this.quoteIdentifier(foreignKey)\n    });\n  },\n\n  getDefaultConstraintQuery(tableName, attributeName) {\n    const sql = 'SELECT name FROM SYS.DEFAULT_CONSTRAINTS ' +\n      \"WHERE PARENT_OBJECT_ID = OBJECT_ID('<%= table %>', 'U') \" +\n      \"AND PARENT_COLUMN_ID = (SELECT column_id FROM sys.columns WHERE NAME = ('<%= column %>') \" +\n      \"AND object_id = OBJECT_ID('<%= table %>', 'U'));\";\n    return _.template(sql, this._templateSettings)({\n      table: this.quoteTable(tableName),\n      column: attributeName\n    });\n  },\n\n  dropConstraintQuery(tableName, constraintName) {\n    const sql = 'ALTER TABLE <%= table %> DROP CONSTRAINT <%= constraint %>;';\n    return _.template(sql, this._templateSettings)({\n      table: this.quoteTable(tableName),\n      constraint: this.quoteIdentifier(constraintName)\n    });\n  },\n\n  setAutocommitQuery() {\n    return '';\n  },\n\n  setIsolationLevelQuery() {\n\n  },\n\n  generateTransactionId() {\n    return randomBytes(10).toString('hex');\n  },\n\n  startTransactionQuery(transaction) {\n    if (transaction.parent) {\n      return 'SAVE TRANSACTION ' + this.quoteIdentifier(transaction.name) + ';';\n    }\n\n    return 'BEGIN TRANSACTION;';\n  },\n\n  commitTransactionQuery(transaction) {\n    if (transaction.parent) {\n      return;\n    }\n\n    return 'COMMIT TRANSACTION;';\n  },\n\n  rollbackTransactionQuery(transaction) {\n    if (transaction.parent) {\n      return 'ROLLBACK TRANSACTION ' + this.quoteIdentifier(transaction.name) + ';';\n    }\n\n    return 'ROLLBACK TRANSACTION;';\n  },\n\n  selectFromTableFragment(options, model, attributes, tables, mainTableAs, where) {\n    let topFragment = '';\n    let mainFragment = 'SELECT ' + attributes.join(', ') + ' FROM ' + tables;\n\n    // Handle SQL Server 2008 with TOP instead of LIMIT\n    if (semver.valid(this.sequelize.options.databaseVersion) && semver.lt(this.sequelize.options.databaseVersion, '11.0.0')) {\n      if (options.limit) {\n        topFragment = 'TOP ' + options.limit + ' ';\n      }\n      if (options.offset) {\n        const offset = options.offset || 0,\n          isSubQuery = options.hasIncludeWhere || options.hasIncludeRequired || options.hasMultiAssociation;\n        let orders = { mainQueryOrder: [] };\n        if (options.order) {\n          orders = this.getQueryOrders(options, model, isSubQuery);\n        }\n\n        if (!orders.mainQueryOrder.length) {\n          orders.mainQueryOrder.push(this.quoteIdentifier(model.primaryKeyField));\n        }\n\n        const tmpTable = mainTableAs ? mainTableAs : 'OffsetTable';\n        const whereFragment = where ? ' WHERE ' + where : '';\n\n        /*\n         * For earlier versions of SQL server, we need to nest several queries\n         * in order to emulate the OFFSET behavior.\n         *\n         * 1. The outermost query selects all items from the inner query block.\n         *    This is due to a limitation in SQL server with the use of computed\n         *    columns (e.g. SELECT ROW_NUMBER()...AS x) in WHERE clauses.\n         * 2. The next query handles the LIMIT and OFFSET behavior by getting\n         *    the TOP N rows of the query where the row number is > OFFSET\n         * 3. The innermost query is the actual set we want information from\n         */\n        const fragment = 'SELECT TOP 100 PERCENT ' + attributes.join(', ') + ' FROM ' +\n                        '(SELECT ' + topFragment + '*' +\n                          ' FROM (SELECT ROW_NUMBER() OVER (ORDER BY ' + orders.mainQueryOrder.join(', ') + ') as row_num, * ' +\n                            ' FROM ' + tables + ' AS ' + tmpTable + whereFragment + ')' +\n                          ' AS ' + tmpTable + ' WHERE row_num > ' + offset + ')' +\n                        ' AS ' + tmpTable;\n        return fragment;\n      } else {\n        mainFragment = 'SELECT ' + topFragment + attributes.join(', ') + ' FROM ' + tables;\n      }\n    }\n\n    if (mainTableAs) {\n      mainFragment += ' AS ' + mainTableAs;\n    }\n\n    return mainFragment;\n  },\n\n  addLimitAndOffset(options, model) {\n    // Skip handling of limit and offset as postfixes for older SQL Server versions\n    if (semver.valid(this.sequelize.options.databaseVersion) && semver.lt(this.sequelize.options.databaseVersion, '11.0.0')) {\n      return '';\n    }\n\n    let fragment = '';\n    const offset = options.offset || 0,\n      isSubQuery = options.hasIncludeWhere || options.hasIncludeRequired || options.hasMultiAssociation;\n\n    let orders = {};\n    if (options.order) {\n      orders = this.getQueryOrders(options, model, isSubQuery);\n    }\n\n    if (options.limit || options.offset) {\n      if (!options.order || options.include && !orders.subQueryOrder.length) {\n        fragment += options.order && !isSubQuery ? ', ' : ' ORDER BY ';\n        fragment += this.quoteTable(options.tableAs || model.name) + '.' + this.quoteIdentifier(model.primaryKeyField);\n      }\n\n      if (options.offset || options.limit) {\n        fragment += ' OFFSET ' + this.escape(offset) + ' ROWS';\n      }\n\n      if (options.limit) {\n        fragment += ' FETCH NEXT ' + this.escape(options.limit) + ' ROWS ONLY';\n      }\n    }\n\n    return fragment;\n  },\n\n  booleanValue(value) {\n    return value ? 1 : 0;\n  }\n};\n\n// private methods\nfunction wrapSingleQuote(identifier) {\n  return Utils.addTicks(Utils.removeTicks(identifier, \"'\"), \"'\");\n}\n\nmodule.exports = QueryGenerator;\n"},"lineCount":865}},"hash":"87d41ed27ad0f5cfb5e0bff18c8a229d","cacheData":{"env":{}}}