{"dependencies":[{"name":"./../utils","loc":{"line":3,"column":22}},{"name":"./helpers","loc":{"line":4,"column":24}},{"name":"lodash","loc":{"line":5,"column":18}},{"name":"./base","loc":{"line":6,"column":28}},{"name":"./belongs-to","loc":{"line":7,"column":26}},{"name":"./has-many","loc":{"line":8,"column":24}},{"name":"./has-one","loc":{"line":9,"column":23}},{"name":"../errors","loc":{"line":10,"column":33}},{"name":"../operators","loc":{"line":11,"column":19}}],"generated":{"js":"'use strict';\n\nconst Utils = require('./../utils');\nconst Helpers = require('./helpers');\nconst _ = require('lodash');\nconst Association = require('./base');\nconst BelongsTo = require('./belongs-to');\nconst HasMany = require('./has-many');\nconst HasOne = require('./has-one');\nconst AssociationError = require('../errors').AssociationError;\nconst Op = require('../operators');\n\n/**\n * Many-to-many association with a join table.\n *\n * When the join table has additional attributes, these can be passed in the options object:\n *\n * ```js\n * UserProject = sequelize.define('user_project', {\n *   role: Sequelize.STRING\n * });\n * User.belongsToMany(Project, { through: UserProject });\n * Project.belongsToMany(User, { through: UserProject });\n * // through is required!\n *\n * user.addProject(project, { through: { role: 'manager' }});\n * ```\n *\n * All methods allow you to pass either a persisted instance, its primary key, or a mixture:\n *\n * ```js\n * Project.create({ id: 11 }).then(function (project) {\n *   user.addProjects([project, 12]);\n * });\n * ```\n *\n * If you want to set several target instances, but with different attributes you have to set the attributes on the instance, using a property with the name of the through model:\n *\n * ```js\n * p1.UserProjects = {\n *   started: true\n * }\n * user.setProjects([p1, p2], { through: { started: false }}) // The default value is false, but p1 overrides that.\n * ```\n *\n * Similarly, when fetching through a join table with custom attributes, these attributes will be available as an object with the name of the through model.\n * ```js\n * user.getProjects().then(function (projects) {\n   *   let p1 = projects[0]\n   *   p1.UserProjects.started // Is this project started yet?\n   * })\n * ```\n *\n * In the API reference below, add the name of the association to the method, e.g. for `User.belongsToMany(Project)` the getter will be `user.getProjects()`.\n *\n * @see {@link Model.belongsToMany}\n */\nclass BelongsToMany extends Association {\n  constructor(source, target, options) {\n    super(source, target, options);\n\n    if (this.options.through === undefined || this.options.through === true || this.options.through === null) {\n      throw new AssociationError('belongsToMany must be given a through option, either a string or a model');\n    }\n\n    if (!this.options.through.model) {\n      this.options.through = {\n        model: options.through\n      };\n    }\n\n    this.associationType = 'BelongsToMany';\n    this.targetAssociation = null;\n    this.sequelize = source.sequelize;\n    this.through = _.assign({}, this.options.through);\n    this.isMultiAssociation = true;\n    this.doubleLinked = false;\n\n    if (!this.as && this.isSelfAssociation) {\n      throw new AssociationError('\\'as\\' must be defined for many-to-many self-associations');\n    }\n\n    if (this.as) {\n      this.isAliased = true;\n\n      if (_.isPlainObject(this.as)) {\n        this.options.name = this.as;\n        this.as = this.as.plural;\n      } else {\n        this.options.name = {\n          plural: this.as,\n          singular: Utils.singularize(this.as)\n        };\n      }\n    } else {\n      this.as = this.target.options.name.plural;\n      this.options.name = this.target.options.name;\n    }\n\n    this.combinedTableName = Utils.combineTableNames(\n      this.source.tableName,\n      this.isSelfAssociation ? this.as || this.target.tableName : this.target.tableName\n    );\n\n    /*\n    * If self association, this is the target association - Unless we find a pairing association\n    */\n    if (this.isSelfAssociation) {\n      this.targetAssociation = this;\n    }\n\n    /*\n    * Default/generated foreign/other keys\n    */\n    if (_.isObject(this.options.foreignKey)) {\n      this.foreignKeyAttribute = this.options.foreignKey;\n      this.foreignKey = this.foreignKeyAttribute.name || this.foreignKeyAttribute.fieldName;\n    } else {\n      if (!this.options.foreignKey) {\n        this.foreignKeyDefault = true;\n      }\n\n      this.foreignKeyAttribute = {};\n      this.foreignKey = this.options.foreignKey || Utils.camelizeIf(\n        [\n          Utils.underscoredIf(this.source.options.name.singular, this.source.options.underscored),\n          this.source.primaryKeyAttribute\n        ].join('_'),\n        !this.source.options.underscored\n      );\n    }\n\n    if (_.isObject(this.options.otherKey)) {\n      this.otherKeyAttribute = this.options.otherKey;\n      this.otherKey = this.otherKeyAttribute.name || this.otherKeyAttribute.fieldName;\n    } else {\n      if (!this.options.otherKey) {\n        this.otherKeyDefault = true;\n      }\n\n      this.otherKeyAttribute = {};\n      this.otherKey = this.options.otherKey || Utils.camelizeIf(\n        [\n          Utils.underscoredIf(\n            this.isSelfAssociation ?\n              Utils.singularize(this.as) :\n              this.target.options.name.singular,\n            this.target.options.underscored\n          ),\n          this.target.primaryKeyAttribute\n        ].join('_'),\n        !this.target.options.underscored\n      );\n    }\n\n    /*\n    * Find paired association (if exists)\n    */\n    _.each(this.target.associations, association => {\n      if (association.associationType !== 'BelongsToMany') return;\n      if (association.target !== this.source) return;\n\n      if (this.options.through.model === association.options.through.model) {\n        this.paired = association;\n        association.paired = this;\n      }\n    });\n\n    if (typeof this.through.model === 'string') {\n      if (!this.sequelize.isDefined(this.through.model)) {\n        this.through.model = this.sequelize.define(this.through.model, {}, _.extend(this.options, {\n          tableName: this.through.model,\n          indexes: [], //we don't want indexes here (as referenced in #2416)\n          paranoid: false,  // A paranoid join table does not make sense\n          validate: {} // Don't propagate model-level validations\n        }));\n      } else {\n        this.through.model = this.sequelize.model(this.through.model);\n      }\n    }\n\n    this.options = Object.assign(this.options, _.pick(this.through.model.options, [\n      'timestamps', 'createdAt', 'updatedAt', 'deletedAt', 'paranoid'\n    ]));\n\n    if (this.paired) {\n      if (this.otherKeyDefault) {\n        this.otherKey = this.paired.foreignKey;\n      }\n      if (this.paired.otherKeyDefault) {\n        // If paired otherKey was inferred we should make sure to clean it up before adding a new one that matches the foreignKey\n        if (this.paired.otherKey !== this.foreignKey) {\n          delete this.through.model.rawAttributes[this.paired.otherKey];\n        }\n        this.paired.otherKey = this.foreignKey;\n        this.paired.foreignIdentifier = this.foreignKey;\n        delete this.paired.foreignIdentifierField;\n      }\n    }\n\n    if (this.through) {\n      this.throughModel = this.through.model;\n    }\n\n    this.options.tableName = this.combinedName = this.through.model === Object(this.through.model) ? this.through.model.tableName : this.through.model;\n\n    this.associationAccessor = this.as;\n\n    // Get singular and plural names, trying to uppercase the first letter, unless the model forbids it\n    const plural = Utils.uppercaseFirst(this.options.name.plural);\n    const singular = Utils.uppercaseFirst(this.options.name.singular);\n\n    this.accessors = {\n      get: 'get' + plural,\n      set: 'set' + plural,\n      addMultiple: 'add' + plural,\n      add: 'add' + singular,\n      create: 'create' + singular,\n      remove: 'remove' + singular,\n      removeMultiple: 'remove' + plural,\n      hasSingle: 'has' + singular,\n      hasAll: 'has' + plural,\n      count: 'count' + plural\n    };\n  }\n\n  // the id is in the target table\n  // or in an extra table which connects two tables\n  injectAttributes() {\n\n    this.identifier = this.foreignKey;\n    this.foreignIdentifier = this.otherKey;\n\n    // remove any PKs previously defined by sequelize\n    // but ignore any keys that are part of this association (#5865)\n    _.each(this.through.model.rawAttributes, (attribute, attributeName) => {\n      if (attribute.primaryKey === true && attribute._autoGenerated === true) {\n        if (attributeName === this.foreignKey || attributeName === this.otherKey) {\n          // this key is still needed as it's part of the association\n          // so just set primaryKey to false\n          attribute.primaryKey = false;\n        }\n        else {\n          delete this.through.model.rawAttributes[attributeName];\n        }\n        this.primaryKeyDeleted = true;\n      }\n    });\n\n    const sourceKey = this.source.rawAttributes[this.source.primaryKeyAttribute];\n    const sourceKeyType = sourceKey.type;\n    const sourceKeyField = sourceKey.field || this.source.primaryKeyAttribute;\n    const targetKey = this.target.rawAttributes[this.target.primaryKeyAttribute];\n    const targetKeyType = targetKey.type;\n    const targetKeyField = targetKey.field || this.target.primaryKeyAttribute;\n    const sourceAttribute = _.defaults({}, this.foreignKeyAttribute, { type: sourceKeyType });\n    const targetAttribute = _.defaults({}, this.otherKeyAttribute, { type: targetKeyType });\n\n    if (this.primaryKeyDeleted === true) {\n      targetAttribute.primaryKey = sourceAttribute.primaryKey = true;\n    } else if (this.through.unique !== false) {\n      const uniqueKey = [this.through.model.tableName, this.foreignKey, this.otherKey, 'unique'].join('_');\n      targetAttribute.unique = sourceAttribute.unique = uniqueKey;\n    }\n\n    if (!this.through.model.rawAttributes[this.foreignKey]) {\n      this.through.model.rawAttributes[this.foreignKey] = {\n        _autoGenerated: true\n      };\n    }\n\n    if (!this.through.model.rawAttributes[this.otherKey]) {\n      this.through.model.rawAttributes[this.otherKey] = {\n        _autoGenerated: true\n      };\n    }\n\n    if (this.options.constraints !== false) {\n      sourceAttribute.references = {\n        model: this.source.getTableName(),\n        key: sourceKeyField\n      };\n      // For the source attribute the passed option is the priority\n      sourceAttribute.onDelete = this.options.onDelete || this.through.model.rawAttributes[this.foreignKey].onDelete;\n      sourceAttribute.onUpdate = this.options.onUpdate || this.through.model.rawAttributes[this.foreignKey].onUpdate;\n\n      if (!sourceAttribute.onDelete) sourceAttribute.onDelete = 'CASCADE';\n      if (!sourceAttribute.onUpdate) sourceAttribute.onUpdate = 'CASCADE';\n\n      targetAttribute.references = {\n        model: this.target.getTableName(),\n        key: targetKeyField\n      };\n      // But the for target attribute the previously defined option is the priority (since it could've been set by another belongsToMany call)\n      targetAttribute.onDelete = this.through.model.rawAttributes[this.otherKey].onDelete || this.options.onDelete;\n      targetAttribute.onUpdate = this.through.model.rawAttributes[this.otherKey].onUpdate || this.options.onUpdate;\n\n      if (!targetAttribute.onDelete) targetAttribute.onDelete = 'CASCADE';\n      if (!targetAttribute.onUpdate) targetAttribute.onUpdate = 'CASCADE';\n    }\n\n    this.through.model.rawAttributes[this.foreignKey] = _.extend(this.through.model.rawAttributes[this.foreignKey], sourceAttribute);\n    this.through.model.rawAttributes[this.otherKey] = _.extend(this.through.model.rawAttributes[this.otherKey], targetAttribute);\n\n    this.identifierField = this.through.model.rawAttributes[this.foreignKey].field || this.foreignKey;\n    this.foreignIdentifierField = this.through.model.rawAttributes[this.otherKey].field || this.otherKey;\n\n    if (this.paired && !this.paired.foreignIdentifierField) {\n      this.paired.foreignIdentifierField = this.through.model.rawAttributes[this.paired.otherKey].field || this.paired.otherKey;\n    }\n\n    this.through.model.refreshAttributes();\n\n    this.toSource = new BelongsTo(this.through.model, this.source, {\n      foreignKey: this.foreignKey\n    });\n    this.manyFromSource = new HasMany(this.source, this.through.model, {\n      foreignKey: this.foreignKey\n    });\n    this.oneFromSource = new HasOne(this.source, this.through.model, {\n      foreignKey: this.foreignKey,\n      as: this.through.model.name\n    });\n\n    this.toTarget = new BelongsTo(this.through.model, this.target, {\n      foreignKey: this.otherKey\n    });\n    this.manyFromTarget = new HasMany(this.target, this.through.model, {\n      foreignKey: this.otherKey\n    });\n    this.oneFromTarget = new HasOne(this.target, this.through.model, {\n      foreignKey: this.otherKey,\n      as: this.through.model.name\n    });\n\n    if (this.paired && this.paired.otherKeyDefault) {\n      this.paired.toTarget = new BelongsTo(this.paired.through.model, this.paired.target, {\n        foreignKey: this.paired.otherKey\n      });\n\n      this.paired.oneFromTarget = new HasOne(this.paired.target, this.paired.through.model, {\n        foreignKey: this.paired.otherKey,\n        as: this.paired.through.model.name\n      });\n    }\n\n    Helpers.checkNamingCollision(this);\n\n    return this;\n  }\n\n  mixin(obj) {\n    const methods = ['get', 'count', 'hasSingle', 'hasAll', 'set', 'add', 'addMultiple', 'remove', 'removeMultiple', 'create'];\n    const aliases = {\n      hasSingle: 'has',\n      hasAll: 'has',\n      addMultiple: 'add',\n      removeMultiple: 'remove'\n    };\n\n    Helpers.mixinMethods(this, obj, methods, aliases);\n  }\n\n  /**\n   * Get everything currently associated with this, using an optional where clause.\n   *\n   * @param {Object} [options]\n   * @param {Object} [options.where] An optional where clause to limit the associated models\n   * @param {String|Boolean} [options.scope] Apply a scope on the related model, or remove its default scope by passing false\n   * @param {String} [options.schema] Apply a schema on the related model\n   * @see {@link Model.findAll}  for a full explanation of options\n   * @return {Promise<Array<Model>>}\n   */\n  get(instance, options) {\n    options = Utils.cloneDeep(options) || {};\n\n    const association = this;\n    const through = association.through;\n    let scopeWhere;\n    let throughWhere;\n\n    if (association.scope) {\n      scopeWhere = _.clone(association.scope);\n    }\n\n    options.where = {\n      [Op.and]: [\n        scopeWhere,\n        options.where\n      ]\n    };\n\n    if (Object(through.model) === through.model) {\n      throughWhere = {};\n      throughWhere[association.foreignKey] = instance.get(association.source.primaryKeyAttribute);\n\n      if (through.scope) {\n        _.assign(throughWhere, through.scope);\n      }\n\n      //If a user pass a where on the options through options, make an \"and\" with the current throughWhere\n      if (options.through && options.through.where) {\n        throughWhere = {\n          [Op.and]: [throughWhere, options.through.where]\n        };\n      }\n\n      options.include = options.include || [];\n      options.include.push({\n        association: association.oneFromTarget,\n        attributes: options.joinTableAttributes,\n        required: true,\n        where: throughWhere\n      });\n    }\n\n    let model = association.target;\n    if (options.hasOwnProperty('scope')) {\n      if (!options.scope) {\n        model = model.unscoped();\n      } else {\n        model = model.scope(options.scope);\n      }\n    }\n\n    if (options.hasOwnProperty('schema')) {\n      model = model.schema(options.schema, options.schemaDelimiter);\n    }\n\n    return model.findAll(options);\n  }\n\n  /**\n   * Count everything currently associated with this, using an optional where clause.\n   *\n   * @param {Object} [options]\n   * @param {Object} [options.where] An optional where clause to limit the associated models\n   * @param {String|Boolean} [options.scope] Apply a scope on the related model, or remove its default scope by passing false\n   * @return {Promise<Integer>}\n   */\n  count(instance, options) {\n    const association = this;\n    const model = association.target;\n    const sequelize = model.sequelize;\n\n    options = Utils.cloneDeep(options);\n    options.attributes = [\n      [sequelize.fn('COUNT', sequelize.col([association.target.name, model.primaryKeyField].join('.'))), 'count']\n    ];\n    options.joinTableAttributes = [];\n    options.raw = true;\n    options.plain = true;\n\n    return association.get(instance, options).then(result => parseInt(result.count, 10));\n  }\n\n  /**\n   * Check if one or more instance(s) are associated with this. If a list of instances is passed, the function returns true if _all_ instances are associated\n   *\n   * @param {Model[]|Model|string[]|String|number[]|Number} [instance(s)] Can be an array of instances or their primary keys\n   * @param {Object} [options] Options passed to getAssociations\n   * @return {Promise<boolean>}\n   */\n  has(sourceInstance, instances, options) {\n    const association = this;\n    const where = {};\n\n    if (!Array.isArray(instances)) {\n      instances = [instances];\n    }\n\n    options = _.assign({\n      raw: true\n    }, options, {\n      scope: false\n    });\n\n    where[Op.or] = instances.map(instance => {\n      if (instance instanceof association.target) {\n        return instance.where();\n      } else {\n        const where = {};\n        where[association.target.primaryKeyAttribute] = instance;\n        return where;\n      }\n    });\n\n    options.where = {\n      [Op.and]: [\n        where,\n        options.where\n      ]\n    };\n\n    return association.get(sourceInstance, options).then(associatedObjects => associatedObjects.length === instances.length);\n  }\n\n  /**\n   * Set the associated models by passing an array of instances or their primary keys. Everything that it not in the passed array will be un-associated.\n   *\n   * @param {Array<Model|String|Number>} [newAssociations] An array of persisted instances or primary key of instances to associate with this. Pass `null` or `undefined` to remove all associations.\n   * @param {Object} [options] Options passed to `through.findAll`, `bulkCreate`, `update` and `destroy`\n   * @param {Object} [options.validate] Run validation for the join model\n   * @param {Object} [options.through] Additional attributes for the join table.\n   * @return {Promise}\n   */\n  set(sourceInstance, newAssociatedObjects, options) {\n    options = options || {};\n\n    const association = this;\n    const sourceKey = association.source.primaryKeyAttribute;\n    const targetKey = association.target.primaryKeyAttribute;\n    const identifier = association.identifier;\n    const foreignIdentifier = association.foreignIdentifier;\n    let where = {};\n\n    if (newAssociatedObjects === null) {\n      newAssociatedObjects = [];\n    } else {\n      newAssociatedObjects = association.toInstanceArray(newAssociatedObjects);\n    }\n\n    where[identifier] = sourceInstance.get(sourceKey);\n    where = Object.assign(where, association.through.scope);\n\n    return association.through.model.findAll(_.defaults({where, raw: true}, options)).then(currentRows => {\n      const obsoleteAssociations = [];\n      const promises = [];\n      let defaultAttributes = options.through || {};\n\n      // Don't try to insert the transaction as an attribute in the through table\n      defaultAttributes = _.omit(defaultAttributes, ['transaction', 'hooks', 'individualHooks', 'ignoreDuplicates', 'validate', 'fields', 'logging']);\n\n      const unassociatedObjects = newAssociatedObjects.filter(obj =>\n        !_.find(currentRows, currentRow => currentRow[foreignIdentifier] === obj.get(targetKey))\n      );\n\n      for (const currentRow of currentRows) {\n        const newObj = _.find(newAssociatedObjects, obj => currentRow[foreignIdentifier] === obj.get(targetKey));\n\n        if (!newObj) {\n          obsoleteAssociations.push(currentRow);\n        } else {\n          let throughAttributes = newObj[association.through.model.name];\n          // Quick-fix for subtle bug when using existing objects that might have the through model attached (not as an attribute object)\n          if (throughAttributes instanceof association.through.model) {\n            throughAttributes = {};\n          }\n\n          const where = {};\n          const attributes = _.defaults({}, throughAttributes, defaultAttributes);\n\n          where[identifier] = sourceInstance.get(sourceKey);\n          where[foreignIdentifier] = newObj.get(targetKey);\n\n          if (Object.keys(attributes).length) {\n            promises.push(association.through.model.update(attributes, _.extend(options, {where})));\n          }\n        }\n      }\n\n      if (obsoleteAssociations.length > 0) {\n        let where = {};\n        where[identifier] = sourceInstance.get(sourceKey);\n        where[foreignIdentifier] = obsoleteAssociations.map(obsoleteAssociation => obsoleteAssociation[foreignIdentifier]);\n        where = Object.assign(where, association.through.scope);\n        promises.push(association.through.model.destroy(_.defaults({where}, options)));\n      }\n\n      if (unassociatedObjects.length > 0) {\n        const bulk = unassociatedObjects.map(unassociatedObject => {\n          let attributes = {};\n\n          attributes[identifier] = sourceInstance.get(sourceKey);\n          attributes[foreignIdentifier] = unassociatedObject.get(targetKey);\n\n          attributes = _.defaults(attributes, unassociatedObject[association.through.model.name], defaultAttributes);\n\n          _.assign(attributes, association.through.scope);\n          attributes = Object.assign(attributes, association.through.scope);\n\n          return attributes;\n        });\n\n        promises.push(association.through.model.bulkCreate(bulk, _.assign({ validate: true }, options)));\n      }\n\n      return Utils.Promise.all(promises);\n    });\n  }\n\n  /**\n   * Associate one ore several rows with `this`.\n   *\n   * @param {Model[]|Model|string[]|string|number[]|Number} [newAssociation(s)] A single instance or primary key, or a mixed array of persisted instances or primary keys\n   * @param {Object} [options] Options passed to `through.findAll`, `bulkCreate` and `update`\n   * @param {Object} [options.validate] Run validation for the join model.\n   * @param {Object} [options.through] Additional attributes for the join table.\n   * @return {Promise}\n   */\n  add(sourceInstance, newInstances, options) {\n    // If newInstances is null or undefined, no-op\n    if (!newInstances) return Utils.Promise.resolve();\n\n    options = _.clone(options) || {};\n\n    const association = this;\n    const sourceKey = association.source.primaryKeyAttribute;\n    const targetKey = association.target.primaryKeyAttribute;\n    const identifier = association.identifier;\n    const foreignIdentifier = association.foreignIdentifier;\n    const defaultAttributes = _.omit(options.through || {}, ['transaction', 'hooks', 'individualHooks', 'ignoreDuplicates', 'validate', 'fields', 'logging']);\n\n    newInstances = association.toInstanceArray(newInstances);\n\n    const where = {};\n    where[identifier] = sourceInstance.get(sourceKey);\n    where[foreignIdentifier] = newInstances.map(newInstance => newInstance.get(targetKey));\n\n    _.assign(where, association.through.scope);\n\n    return association.through.model.findAll(_.defaults({where, raw: true}, options)).then(currentRows => {\n      const promises = [];\n      const unassociatedObjects = [];\n      const changedAssociations = [];\n      for (const obj of newInstances) {\n        const existingAssociation = _.find(currentRows, current => current[foreignIdentifier] === obj.get(targetKey));\n\n        if (!existingAssociation) {\n          unassociatedObjects.push(obj);\n        } else {\n          const throughAttributes = obj[association.through.model.name];\n          const attributes = _.defaults({}, throughAttributes, defaultAttributes);\n\n          if (_.some(Object.keys(attributes), attribute => attributes[attribute] !== existingAssociation[attribute])) {\n            changedAssociations.push(obj);\n          }\n        }\n      }\n\n      if (unassociatedObjects.length > 0) {\n        const bulk = unassociatedObjects.map(unassociatedObject => {\n          const throughAttributes = unassociatedObject[association.through.model.name];\n          const attributes = _.defaults({}, throughAttributes, defaultAttributes);\n\n          attributes[identifier] = sourceInstance.get(sourceKey);\n          attributes[foreignIdentifier] = unassociatedObject.get(targetKey);\n\n          _.assign(attributes, association.through.scope);\n\n          return attributes;\n        });\n\n        promises.push(association.through.model.bulkCreate(bulk, _.assign({ validate: true }, options)));\n      }\n\n      for (const assoc of changedAssociations) {\n        let throughAttributes = assoc[association.through.model.name];\n        const attributes = _.defaults({}, throughAttributes, defaultAttributes);\n        const where = {};\n        // Quick-fix for subtle bug when using existing objects that might have the through model attached (not as an attribute object)\n        if (throughAttributes instanceof association.through.model) {\n          throughAttributes = {};\n        }\n\n        where[identifier] = sourceInstance.get(sourceKey);\n        where[foreignIdentifier] = assoc.get(targetKey);\n\n        promises.push(association.through.model.update(attributes, _.extend(options, {where})));\n      }\n\n      return Utils.Promise.all(promises);\n    });\n  }\n\n  /**\n   * Un-associate one or more instance(s).\n   *\n   * @param {Model|String|Number} [oldAssociated] Can be an Instance or its primary key, or a mixed array of instances and primary keys\n   * @param {Object} [options] Options passed to `through.destroy`\n   * @return {Promise}\n   */\n  remove(sourceInstance, oldAssociatedObjects, options) {\n    const association = this;\n\n    options = options || {};\n\n    oldAssociatedObjects = association.toInstanceArray(oldAssociatedObjects);\n\n    const where = {};\n    where[association.identifier] = sourceInstance.get(association.source.primaryKeyAttribute);\n    where[association.foreignIdentifier] = oldAssociatedObjects.map(newInstance => newInstance.get(association.target.primaryKeyAttribute));\n\n    return association.through.model.destroy(_.defaults({where}, options));\n  }\n\n  /**\n   * Create a new instance of the associated model and associate it with this.\n   *\n   * @param {Object} [values]\n   * @param {Object} [options] Options passed to create and add\n   * @param {Object} [options.through] Additional attributes for the join table\n   * @return {Promise}\n   */\n  create(sourceInstance, values, options) {\n    const association = this;\n\n    options = options || {};\n    values = values || {};\n\n    if (Array.isArray(options)) {\n      options = {\n        fields: options\n      };\n    }\n\n    if (association.scope) {\n      _.assign(values, association.scope);\n      if (options.fields) {\n        options.fields = options.fields.concat(Object.keys(association.scope));\n      }\n    }\n\n    // Create the related model instance\n    return association.target.create(values, options).then(newAssociatedObject =>\n      sourceInstance[association.accessors.add](newAssociatedObject, _.omit(options, ['fields'])).return(newAssociatedObject)\n    );\n  }\n}\n\nmodule.exports = BelongsToMany;\nmodule.exports.BelongsToMany = BelongsToMany;\nmodule.exports.default = BelongsToMany;\n","map":{"mappings":[{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"../node_modules/sequelize/lib/associations/belongs-to-many.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}}],"sources":{"../node_modules/sequelize/lib/associations/belongs-to-many.js":"'use strict';\n\nconst Utils = require('./../utils');\nconst Helpers = require('./helpers');\nconst _ = require('lodash');\nconst Association = require('./base');\nconst BelongsTo = require('./belongs-to');\nconst HasMany = require('./has-many');\nconst HasOne = require('./has-one');\nconst AssociationError = require('../errors').AssociationError;\nconst Op = require('../operators');\n\n/**\n * Many-to-many association with a join table.\n *\n * When the join table has additional attributes, these can be passed in the options object:\n *\n * ```js\n * UserProject = sequelize.define('user_project', {\n *   role: Sequelize.STRING\n * });\n * User.belongsToMany(Project, { through: UserProject });\n * Project.belongsToMany(User, { through: UserProject });\n * // through is required!\n *\n * user.addProject(project, { through: { role: 'manager' }});\n * ```\n *\n * All methods allow you to pass either a persisted instance, its primary key, or a mixture:\n *\n * ```js\n * Project.create({ id: 11 }).then(function (project) {\n *   user.addProjects([project, 12]);\n * });\n * ```\n *\n * If you want to set several target instances, but with different attributes you have to set the attributes on the instance, using a property with the name of the through model:\n *\n * ```js\n * p1.UserProjects = {\n *   started: true\n * }\n * user.setProjects([p1, p2], { through: { started: false }}) // The default value is false, but p1 overrides that.\n * ```\n *\n * Similarly, when fetching through a join table with custom attributes, these attributes will be available as an object with the name of the through model.\n * ```js\n * user.getProjects().then(function (projects) {\n   *   let p1 = projects[0]\n   *   p1.UserProjects.started // Is this project started yet?\n   * })\n * ```\n *\n * In the API reference below, add the name of the association to the method, e.g. for `User.belongsToMany(Project)` the getter will be `user.getProjects()`.\n *\n * @see {@link Model.belongsToMany}\n */\nclass BelongsToMany extends Association {\n  constructor(source, target, options) {\n    super(source, target, options);\n\n    if (this.options.through === undefined || this.options.through === true || this.options.through === null) {\n      throw new AssociationError('belongsToMany must be given a through option, either a string or a model');\n    }\n\n    if (!this.options.through.model) {\n      this.options.through = {\n        model: options.through\n      };\n    }\n\n    this.associationType = 'BelongsToMany';\n    this.targetAssociation = null;\n    this.sequelize = source.sequelize;\n    this.through = _.assign({}, this.options.through);\n    this.isMultiAssociation = true;\n    this.doubleLinked = false;\n\n    if (!this.as && this.isSelfAssociation) {\n      throw new AssociationError('\\'as\\' must be defined for many-to-many self-associations');\n    }\n\n    if (this.as) {\n      this.isAliased = true;\n\n      if (_.isPlainObject(this.as)) {\n        this.options.name = this.as;\n        this.as = this.as.plural;\n      } else {\n        this.options.name = {\n          plural: this.as,\n          singular: Utils.singularize(this.as)\n        };\n      }\n    } else {\n      this.as = this.target.options.name.plural;\n      this.options.name = this.target.options.name;\n    }\n\n    this.combinedTableName = Utils.combineTableNames(\n      this.source.tableName,\n      this.isSelfAssociation ? this.as || this.target.tableName : this.target.tableName\n    );\n\n    /*\n    * If self association, this is the target association - Unless we find a pairing association\n    */\n    if (this.isSelfAssociation) {\n      this.targetAssociation = this;\n    }\n\n    /*\n    * Default/generated foreign/other keys\n    */\n    if (_.isObject(this.options.foreignKey)) {\n      this.foreignKeyAttribute = this.options.foreignKey;\n      this.foreignKey = this.foreignKeyAttribute.name || this.foreignKeyAttribute.fieldName;\n    } else {\n      if (!this.options.foreignKey) {\n        this.foreignKeyDefault = true;\n      }\n\n      this.foreignKeyAttribute = {};\n      this.foreignKey = this.options.foreignKey || Utils.camelizeIf(\n        [\n          Utils.underscoredIf(this.source.options.name.singular, this.source.options.underscored),\n          this.source.primaryKeyAttribute\n        ].join('_'),\n        !this.source.options.underscored\n      );\n    }\n\n    if (_.isObject(this.options.otherKey)) {\n      this.otherKeyAttribute = this.options.otherKey;\n      this.otherKey = this.otherKeyAttribute.name || this.otherKeyAttribute.fieldName;\n    } else {\n      if (!this.options.otherKey) {\n        this.otherKeyDefault = true;\n      }\n\n      this.otherKeyAttribute = {};\n      this.otherKey = this.options.otherKey || Utils.camelizeIf(\n        [\n          Utils.underscoredIf(\n            this.isSelfAssociation ?\n              Utils.singularize(this.as) :\n              this.target.options.name.singular,\n            this.target.options.underscored\n          ),\n          this.target.primaryKeyAttribute\n        ].join('_'),\n        !this.target.options.underscored\n      );\n    }\n\n    /*\n    * Find paired association (if exists)\n    */\n    _.each(this.target.associations, association => {\n      if (association.associationType !== 'BelongsToMany') return;\n      if (association.target !== this.source) return;\n\n      if (this.options.through.model === association.options.through.model) {\n        this.paired = association;\n        association.paired = this;\n      }\n    });\n\n    if (typeof this.through.model === 'string') {\n      if (!this.sequelize.isDefined(this.through.model)) {\n        this.through.model = this.sequelize.define(this.through.model, {}, _.extend(this.options, {\n          tableName: this.through.model,\n          indexes: [], //we don't want indexes here (as referenced in #2416)\n          paranoid: false,  // A paranoid join table does not make sense\n          validate: {} // Don't propagate model-level validations\n        }));\n      } else {\n        this.through.model = this.sequelize.model(this.through.model);\n      }\n    }\n\n    this.options = Object.assign(this.options, _.pick(this.through.model.options, [\n      'timestamps', 'createdAt', 'updatedAt', 'deletedAt', 'paranoid'\n    ]));\n\n    if (this.paired) {\n      if (this.otherKeyDefault) {\n        this.otherKey = this.paired.foreignKey;\n      }\n      if (this.paired.otherKeyDefault) {\n        // If paired otherKey was inferred we should make sure to clean it up before adding a new one that matches the foreignKey\n        if (this.paired.otherKey !== this.foreignKey) {\n          delete this.through.model.rawAttributes[this.paired.otherKey];\n        }\n        this.paired.otherKey = this.foreignKey;\n        this.paired.foreignIdentifier = this.foreignKey;\n        delete this.paired.foreignIdentifierField;\n      }\n    }\n\n    if (this.through) {\n      this.throughModel = this.through.model;\n    }\n\n    this.options.tableName = this.combinedName = this.through.model === Object(this.through.model) ? this.through.model.tableName : this.through.model;\n\n    this.associationAccessor = this.as;\n\n    // Get singular and plural names, trying to uppercase the first letter, unless the model forbids it\n    const plural = Utils.uppercaseFirst(this.options.name.plural);\n    const singular = Utils.uppercaseFirst(this.options.name.singular);\n\n    this.accessors = {\n      get: 'get' + plural,\n      set: 'set' + plural,\n      addMultiple: 'add' + plural,\n      add: 'add' + singular,\n      create: 'create' + singular,\n      remove: 'remove' + singular,\n      removeMultiple: 'remove' + plural,\n      hasSingle: 'has' + singular,\n      hasAll: 'has' + plural,\n      count: 'count' + plural\n    };\n  }\n\n  // the id is in the target table\n  // or in an extra table which connects two tables\n  injectAttributes() {\n\n    this.identifier = this.foreignKey;\n    this.foreignIdentifier = this.otherKey;\n\n    // remove any PKs previously defined by sequelize\n    // but ignore any keys that are part of this association (#5865)\n    _.each(this.through.model.rawAttributes, (attribute, attributeName) => {\n      if (attribute.primaryKey === true && attribute._autoGenerated === true) {\n        if (attributeName === this.foreignKey || attributeName === this.otherKey) {\n          // this key is still needed as it's part of the association\n          // so just set primaryKey to false\n          attribute.primaryKey = false;\n        }\n        else {\n          delete this.through.model.rawAttributes[attributeName];\n        }\n        this.primaryKeyDeleted = true;\n      }\n    });\n\n    const sourceKey = this.source.rawAttributes[this.source.primaryKeyAttribute];\n    const sourceKeyType = sourceKey.type;\n    const sourceKeyField = sourceKey.field || this.source.primaryKeyAttribute;\n    const targetKey = this.target.rawAttributes[this.target.primaryKeyAttribute];\n    const targetKeyType = targetKey.type;\n    const targetKeyField = targetKey.field || this.target.primaryKeyAttribute;\n    const sourceAttribute = _.defaults({}, this.foreignKeyAttribute, { type: sourceKeyType });\n    const targetAttribute = _.defaults({}, this.otherKeyAttribute, { type: targetKeyType });\n\n    if (this.primaryKeyDeleted === true) {\n      targetAttribute.primaryKey = sourceAttribute.primaryKey = true;\n    } else if (this.through.unique !== false) {\n      const uniqueKey = [this.through.model.tableName, this.foreignKey, this.otherKey, 'unique'].join('_');\n      targetAttribute.unique = sourceAttribute.unique = uniqueKey;\n    }\n\n    if (!this.through.model.rawAttributes[this.foreignKey]) {\n      this.through.model.rawAttributes[this.foreignKey] = {\n        _autoGenerated: true\n      };\n    }\n\n    if (!this.through.model.rawAttributes[this.otherKey]) {\n      this.through.model.rawAttributes[this.otherKey] = {\n        _autoGenerated: true\n      };\n    }\n\n    if (this.options.constraints !== false) {\n      sourceAttribute.references = {\n        model: this.source.getTableName(),\n        key: sourceKeyField\n      };\n      // For the source attribute the passed option is the priority\n      sourceAttribute.onDelete = this.options.onDelete || this.through.model.rawAttributes[this.foreignKey].onDelete;\n      sourceAttribute.onUpdate = this.options.onUpdate || this.through.model.rawAttributes[this.foreignKey].onUpdate;\n\n      if (!sourceAttribute.onDelete) sourceAttribute.onDelete = 'CASCADE';\n      if (!sourceAttribute.onUpdate) sourceAttribute.onUpdate = 'CASCADE';\n\n      targetAttribute.references = {\n        model: this.target.getTableName(),\n        key: targetKeyField\n      };\n      // But the for target attribute the previously defined option is the priority (since it could've been set by another belongsToMany call)\n      targetAttribute.onDelete = this.through.model.rawAttributes[this.otherKey].onDelete || this.options.onDelete;\n      targetAttribute.onUpdate = this.through.model.rawAttributes[this.otherKey].onUpdate || this.options.onUpdate;\n\n      if (!targetAttribute.onDelete) targetAttribute.onDelete = 'CASCADE';\n      if (!targetAttribute.onUpdate) targetAttribute.onUpdate = 'CASCADE';\n    }\n\n    this.through.model.rawAttributes[this.foreignKey] = _.extend(this.through.model.rawAttributes[this.foreignKey], sourceAttribute);\n    this.through.model.rawAttributes[this.otherKey] = _.extend(this.through.model.rawAttributes[this.otherKey], targetAttribute);\n\n    this.identifierField = this.through.model.rawAttributes[this.foreignKey].field || this.foreignKey;\n    this.foreignIdentifierField = this.through.model.rawAttributes[this.otherKey].field || this.otherKey;\n\n    if (this.paired && !this.paired.foreignIdentifierField) {\n      this.paired.foreignIdentifierField = this.through.model.rawAttributes[this.paired.otherKey].field || this.paired.otherKey;\n    }\n\n    this.through.model.refreshAttributes();\n\n    this.toSource = new BelongsTo(this.through.model, this.source, {\n      foreignKey: this.foreignKey\n    });\n    this.manyFromSource = new HasMany(this.source, this.through.model, {\n      foreignKey: this.foreignKey\n    });\n    this.oneFromSource = new HasOne(this.source, this.through.model, {\n      foreignKey: this.foreignKey,\n      as: this.through.model.name\n    });\n\n    this.toTarget = new BelongsTo(this.through.model, this.target, {\n      foreignKey: this.otherKey\n    });\n    this.manyFromTarget = new HasMany(this.target, this.through.model, {\n      foreignKey: this.otherKey\n    });\n    this.oneFromTarget = new HasOne(this.target, this.through.model, {\n      foreignKey: this.otherKey,\n      as: this.through.model.name\n    });\n\n    if (this.paired && this.paired.otherKeyDefault) {\n      this.paired.toTarget = new BelongsTo(this.paired.through.model, this.paired.target, {\n        foreignKey: this.paired.otherKey\n      });\n\n      this.paired.oneFromTarget = new HasOne(this.paired.target, this.paired.through.model, {\n        foreignKey: this.paired.otherKey,\n        as: this.paired.through.model.name\n      });\n    }\n\n    Helpers.checkNamingCollision(this);\n\n    return this;\n  }\n\n  mixin(obj) {\n    const methods = ['get', 'count', 'hasSingle', 'hasAll', 'set', 'add', 'addMultiple', 'remove', 'removeMultiple', 'create'];\n    const aliases = {\n      hasSingle: 'has',\n      hasAll: 'has',\n      addMultiple: 'add',\n      removeMultiple: 'remove'\n    };\n\n    Helpers.mixinMethods(this, obj, methods, aliases);\n  }\n\n  /**\n   * Get everything currently associated with this, using an optional where clause.\n   *\n   * @param {Object} [options]\n   * @param {Object} [options.where] An optional where clause to limit the associated models\n   * @param {String|Boolean} [options.scope] Apply a scope on the related model, or remove its default scope by passing false\n   * @param {String} [options.schema] Apply a schema on the related model\n   * @see {@link Model.findAll}  for a full explanation of options\n   * @return {Promise<Array<Model>>}\n   */\n  get(instance, options) {\n    options = Utils.cloneDeep(options) || {};\n\n    const association = this;\n    const through = association.through;\n    let scopeWhere;\n    let throughWhere;\n\n    if (association.scope) {\n      scopeWhere = _.clone(association.scope);\n    }\n\n    options.where = {\n      [Op.and]: [\n        scopeWhere,\n        options.where\n      ]\n    };\n\n    if (Object(through.model) === through.model) {\n      throughWhere = {};\n      throughWhere[association.foreignKey] = instance.get(association.source.primaryKeyAttribute);\n\n      if (through.scope) {\n        _.assign(throughWhere, through.scope);\n      }\n\n      //If a user pass a where on the options through options, make an \"and\" with the current throughWhere\n      if (options.through && options.through.where) {\n        throughWhere = {\n          [Op.and]: [throughWhere, options.through.where]\n        };\n      }\n\n      options.include = options.include || [];\n      options.include.push({\n        association: association.oneFromTarget,\n        attributes: options.joinTableAttributes,\n        required: true,\n        where: throughWhere\n      });\n    }\n\n    let model = association.target;\n    if (options.hasOwnProperty('scope')) {\n      if (!options.scope) {\n        model = model.unscoped();\n      } else {\n        model = model.scope(options.scope);\n      }\n    }\n\n    if (options.hasOwnProperty('schema')) {\n      model = model.schema(options.schema, options.schemaDelimiter);\n    }\n\n    return model.findAll(options);\n  }\n\n  /**\n   * Count everything currently associated with this, using an optional where clause.\n   *\n   * @param {Object} [options]\n   * @param {Object} [options.where] An optional where clause to limit the associated models\n   * @param {String|Boolean} [options.scope] Apply a scope on the related model, or remove its default scope by passing false\n   * @return {Promise<Integer>}\n   */\n  count(instance, options) {\n    const association = this;\n    const model = association.target;\n    const sequelize = model.sequelize;\n\n    options = Utils.cloneDeep(options);\n    options.attributes = [\n      [sequelize.fn('COUNT', sequelize.col([association.target.name, model.primaryKeyField].join('.'))), 'count']\n    ];\n    options.joinTableAttributes = [];\n    options.raw = true;\n    options.plain = true;\n\n    return association.get(instance, options).then(result => parseInt(result.count, 10));\n  }\n\n  /**\n   * Check if one or more instance(s) are associated with this. If a list of instances is passed, the function returns true if _all_ instances are associated\n   *\n   * @param {Model[]|Model|string[]|String|number[]|Number} [instance(s)] Can be an array of instances or their primary keys\n   * @param {Object} [options] Options passed to getAssociations\n   * @return {Promise<boolean>}\n   */\n  has(sourceInstance, instances, options) {\n    const association = this;\n    const where = {};\n\n    if (!Array.isArray(instances)) {\n      instances = [instances];\n    }\n\n    options = _.assign({\n      raw: true\n    }, options, {\n      scope: false\n    });\n\n    where[Op.or] = instances.map(instance => {\n      if (instance instanceof association.target) {\n        return instance.where();\n      } else {\n        const where = {};\n        where[association.target.primaryKeyAttribute] = instance;\n        return where;\n      }\n    });\n\n    options.where = {\n      [Op.and]: [\n        where,\n        options.where\n      ]\n    };\n\n    return association.get(sourceInstance, options).then(associatedObjects => associatedObjects.length === instances.length);\n  }\n\n  /**\n   * Set the associated models by passing an array of instances or their primary keys. Everything that it not in the passed array will be un-associated.\n   *\n   * @param {Array<Model|String|Number>} [newAssociations] An array of persisted instances or primary key of instances to associate with this. Pass `null` or `undefined` to remove all associations.\n   * @param {Object} [options] Options passed to `through.findAll`, `bulkCreate`, `update` and `destroy`\n   * @param {Object} [options.validate] Run validation for the join model\n   * @param {Object} [options.through] Additional attributes for the join table.\n   * @return {Promise}\n   */\n  set(sourceInstance, newAssociatedObjects, options) {\n    options = options || {};\n\n    const association = this;\n    const sourceKey = association.source.primaryKeyAttribute;\n    const targetKey = association.target.primaryKeyAttribute;\n    const identifier = association.identifier;\n    const foreignIdentifier = association.foreignIdentifier;\n    let where = {};\n\n    if (newAssociatedObjects === null) {\n      newAssociatedObjects = [];\n    } else {\n      newAssociatedObjects = association.toInstanceArray(newAssociatedObjects);\n    }\n\n    where[identifier] = sourceInstance.get(sourceKey);\n    where = Object.assign(where, association.through.scope);\n\n    return association.through.model.findAll(_.defaults({where, raw: true}, options)).then(currentRows => {\n      const obsoleteAssociations = [];\n      const promises = [];\n      let defaultAttributes = options.through || {};\n\n      // Don't try to insert the transaction as an attribute in the through table\n      defaultAttributes = _.omit(defaultAttributes, ['transaction', 'hooks', 'individualHooks', 'ignoreDuplicates', 'validate', 'fields', 'logging']);\n\n      const unassociatedObjects = newAssociatedObjects.filter(obj =>\n        !_.find(currentRows, currentRow => currentRow[foreignIdentifier] === obj.get(targetKey))\n      );\n\n      for (const currentRow of currentRows) {\n        const newObj = _.find(newAssociatedObjects, obj => currentRow[foreignIdentifier] === obj.get(targetKey));\n\n        if (!newObj) {\n          obsoleteAssociations.push(currentRow);\n        } else {\n          let throughAttributes = newObj[association.through.model.name];\n          // Quick-fix for subtle bug when using existing objects that might have the through model attached (not as an attribute object)\n          if (throughAttributes instanceof association.through.model) {\n            throughAttributes = {};\n          }\n\n          const where = {};\n          const attributes = _.defaults({}, throughAttributes, defaultAttributes);\n\n          where[identifier] = sourceInstance.get(sourceKey);\n          where[foreignIdentifier] = newObj.get(targetKey);\n\n          if (Object.keys(attributes).length) {\n            promises.push(association.through.model.update(attributes, _.extend(options, {where})));\n          }\n        }\n      }\n\n      if (obsoleteAssociations.length > 0) {\n        let where = {};\n        where[identifier] = sourceInstance.get(sourceKey);\n        where[foreignIdentifier] = obsoleteAssociations.map(obsoleteAssociation => obsoleteAssociation[foreignIdentifier]);\n        where = Object.assign(where, association.through.scope);\n        promises.push(association.through.model.destroy(_.defaults({where}, options)));\n      }\n\n      if (unassociatedObjects.length > 0) {\n        const bulk = unassociatedObjects.map(unassociatedObject => {\n          let attributes = {};\n\n          attributes[identifier] = sourceInstance.get(sourceKey);\n          attributes[foreignIdentifier] = unassociatedObject.get(targetKey);\n\n          attributes = _.defaults(attributes, unassociatedObject[association.through.model.name], defaultAttributes);\n\n          _.assign(attributes, association.through.scope);\n          attributes = Object.assign(attributes, association.through.scope);\n\n          return attributes;\n        });\n\n        promises.push(association.through.model.bulkCreate(bulk, _.assign({ validate: true }, options)));\n      }\n\n      return Utils.Promise.all(promises);\n    });\n  }\n\n  /**\n   * Associate one ore several rows with `this`.\n   *\n   * @param {Model[]|Model|string[]|string|number[]|Number} [newAssociation(s)] A single instance or primary key, or a mixed array of persisted instances or primary keys\n   * @param {Object} [options] Options passed to `through.findAll`, `bulkCreate` and `update`\n   * @param {Object} [options.validate] Run validation for the join model.\n   * @param {Object} [options.through] Additional attributes for the join table.\n   * @return {Promise}\n   */\n  add(sourceInstance, newInstances, options) {\n    // If newInstances is null or undefined, no-op\n    if (!newInstances) return Utils.Promise.resolve();\n\n    options = _.clone(options) || {};\n\n    const association = this;\n    const sourceKey = association.source.primaryKeyAttribute;\n    const targetKey = association.target.primaryKeyAttribute;\n    const identifier = association.identifier;\n    const foreignIdentifier = association.foreignIdentifier;\n    const defaultAttributes = _.omit(options.through || {}, ['transaction', 'hooks', 'individualHooks', 'ignoreDuplicates', 'validate', 'fields', 'logging']);\n\n    newInstances = association.toInstanceArray(newInstances);\n\n    const where = {};\n    where[identifier] = sourceInstance.get(sourceKey);\n    where[foreignIdentifier] = newInstances.map(newInstance => newInstance.get(targetKey));\n\n    _.assign(where, association.through.scope);\n\n    return association.through.model.findAll(_.defaults({where, raw: true}, options)).then(currentRows => {\n      const promises = [];\n      const unassociatedObjects = [];\n      const changedAssociations = [];\n      for (const obj of newInstances) {\n        const existingAssociation = _.find(currentRows, current => current[foreignIdentifier] === obj.get(targetKey));\n\n        if (!existingAssociation) {\n          unassociatedObjects.push(obj);\n        } else {\n          const throughAttributes = obj[association.through.model.name];\n          const attributes = _.defaults({}, throughAttributes, defaultAttributes);\n\n          if (_.some(Object.keys(attributes), attribute => attributes[attribute] !== existingAssociation[attribute])) {\n            changedAssociations.push(obj);\n          }\n        }\n      }\n\n      if (unassociatedObjects.length > 0) {\n        const bulk = unassociatedObjects.map(unassociatedObject => {\n          const throughAttributes = unassociatedObject[association.through.model.name];\n          const attributes = _.defaults({}, throughAttributes, defaultAttributes);\n\n          attributes[identifier] = sourceInstance.get(sourceKey);\n          attributes[foreignIdentifier] = unassociatedObject.get(targetKey);\n\n          _.assign(attributes, association.through.scope);\n\n          return attributes;\n        });\n\n        promises.push(association.through.model.bulkCreate(bulk, _.assign({ validate: true }, options)));\n      }\n\n      for (const assoc of changedAssociations) {\n        let throughAttributes = assoc[association.through.model.name];\n        const attributes = _.defaults({}, throughAttributes, defaultAttributes);\n        const where = {};\n        // Quick-fix for subtle bug when using existing objects that might have the through model attached (not as an attribute object)\n        if (throughAttributes instanceof association.through.model) {\n          throughAttributes = {};\n        }\n\n        where[identifier] = sourceInstance.get(sourceKey);\n        where[foreignIdentifier] = assoc.get(targetKey);\n\n        promises.push(association.through.model.update(attributes, _.extend(options, {where})));\n      }\n\n      return Utils.Promise.all(promises);\n    });\n  }\n\n  /**\n   * Un-associate one or more instance(s).\n   *\n   * @param {Model|String|Number} [oldAssociated] Can be an Instance or its primary key, or a mixed array of instances and primary keys\n   * @param {Object} [options] Options passed to `through.destroy`\n   * @return {Promise}\n   */\n  remove(sourceInstance, oldAssociatedObjects, options) {\n    const association = this;\n\n    options = options || {};\n\n    oldAssociatedObjects = association.toInstanceArray(oldAssociatedObjects);\n\n    const where = {};\n    where[association.identifier] = sourceInstance.get(association.source.primaryKeyAttribute);\n    where[association.foreignIdentifier] = oldAssociatedObjects.map(newInstance => newInstance.get(association.target.primaryKeyAttribute));\n\n    return association.through.model.destroy(_.defaults({where}, options));\n  }\n\n  /**\n   * Create a new instance of the associated model and associate it with this.\n   *\n   * @param {Object} [values]\n   * @param {Object} [options] Options passed to create and add\n   * @param {Object} [options.through] Additional attributes for the join table\n   * @return {Promise}\n   */\n  create(sourceInstance, values, options) {\n    const association = this;\n\n    options = options || {};\n    values = values || {};\n\n    if (Array.isArray(options)) {\n      options = {\n        fields: options\n      };\n    }\n\n    if (association.scope) {\n      _.assign(values, association.scope);\n      if (options.fields) {\n        options.fields = options.fields.concat(Object.keys(association.scope));\n      }\n    }\n\n    // Create the related model instance\n    return association.target.create(values, options).then(newAssociatedObject =>\n      sourceInstance[association.accessors.add](newAssociatedObject, _.omit(options, ['fields'])).return(newAssociatedObject)\n    );\n  }\n}\n\nmodule.exports = BelongsToMany;\nmodule.exports.BelongsToMany = BelongsToMany;\nmodule.exports.default = BelongsToMany;\n"},"lineCount":734}},"hash":"06c0e4f2ac195fb0c9f83f3b1320ccee","cacheData":{"env":{}}}