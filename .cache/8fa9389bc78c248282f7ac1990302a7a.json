{"dependencies":[{"name":"dns","loc":{"line":6,"column":18}},{"name":"netmask","loc":{"line":7,"column":22}}],"generated":{"js":"\n/**\n * Module dependencies.\n */\n\nvar dns = require('dns');\nvar Netmask = require('netmask').Netmask;\n\n/**\n * Module exports.\n */\n\nmodule.exports = isInNet;\n\nisInNet.async = true;\n\n/**\n * True iff the IP address of the host matches the specified IP address pattern.\n *\n * Pattern and mask specification is done the same way as for SOCKS configuration.\n *\n * Examples:\n *\n * ``` js\n * isInNet(host, \"198.95.249.79\", \"255.255.255.255\")\n *   // is true iff the IP address of host matches exactly 198.95.249.79.\n *\n * isInNet(host, \"198.95.0.0\", \"255.255.0.0\")\n *   // is true iff the IP address of the host matches 198.95.*.*.\n * ```\n *\n * @param {String} host a DNS hostname, or IP address. If a hostname is passed,\n *   it will be resoved into an IP address by this function.\n * @param {String} pattern an IP address pattern in the dot-separated format mask.\n * @param {String} mask for the IP address pattern informing which parts of the\n *   IP address should be matched against. 0 means ignore, 255 means match.\n * @return {Boolean}\n */\n\nfunction isInNet (host, pattern, mask, fn) {\n  var family = 4;\n  dns.lookup(host, family, function (err, ip) {\n    if (err) return fn(err);\n    if (!ip) ip = '127.0.0.1';\n    var netmask = new Netmask(pattern, mask);\n    fn(null, netmask.contains(ip));\n  });\n}\n","map":{"mappings":[{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/pac-resolver/isInNet.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}}],"sources":{"../node_modules/pac-resolver/isInNet.js":"\n/**\n * Module dependencies.\n */\n\nvar dns = require('dns');\nvar Netmask = require('netmask').Netmask;\n\n/**\n * Module exports.\n */\n\nmodule.exports = isInNet;\n\nisInNet.async = true;\n\n/**\n * True iff the IP address of the host matches the specified IP address pattern.\n *\n * Pattern and mask specification is done the same way as for SOCKS configuration.\n *\n * Examples:\n *\n * ``` js\n * isInNet(host, \"198.95.249.79\", \"255.255.255.255\")\n *   // is true iff the IP address of host matches exactly 198.95.249.79.\n *\n * isInNet(host, \"198.95.0.0\", \"255.255.0.0\")\n *   // is true iff the IP address of the host matches 198.95.*.*.\n * ```\n *\n * @param {String} host a DNS hostname, or IP address. If a hostname is passed,\n *   it will be resoved into an IP address by this function.\n * @param {String} pattern an IP address pattern in the dot-separated format mask.\n * @param {String} mask for the IP address pattern informing which parts of the\n *   IP address should be matched against. 0 means ignore, 255 means match.\n * @return {Boolean}\n */\n\nfunction isInNet (host, pattern, mask, fn) {\n  var family = 4;\n  dns.lookup(host, family, function (err, ip) {\n    if (err) return fn(err);\n    if (!ip) ip = '127.0.0.1';\n    var netmask = new Netmask(pattern, mask);\n    fn(null, netmask.contains(ip));\n  });\n}\n"},"lineCount":49}},"hash":"9a109f27769cfd7a973d8b5973501e6a","cacheData":{"env":{}}}