{"dependencies":[{"name":"./util/assertString","loc":{"line":8,"column":28}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISIN;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;\n\nfunction isISIN(str) {\n  (0, _assertString2.default)(str);\n  if (!isin.test(str)) {\n    return false;\n  }\n\n  var checksumStr = str.replace(/[A-Z]/g, function (character) {\n    return parseInt(character, 36);\n  });\n\n  var sum = 0;\n  var digit = void 0;\n  var tmpNum = void 0;\n  var shouldDouble = true;\n  for (var i = checksumStr.length - 2; i >= 0; i--) {\n    digit = checksumStr.substring(i, i + 1);\n    tmpNum = parseInt(digit, 10);\n    if (shouldDouble) {\n      tmpNum *= 2;\n      if (tmpNum >= 10) {\n        sum += tmpNum + 1;\n      } else {\n        sum += tmpNum;\n      }\n    } else {\n      sum += tmpNum;\n    }\n    shouldDouble = !shouldDouble;\n  }\n\n  return parseInt(str.substr(str.length - 1), 10) === (10000 - sum) % 10;\n}\nmodule.exports = exports['default'];","map":{"mappings":[{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/validator/lib/isISIN.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}}],"sources":{"../node_modules/validator/lib/isISIN.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISIN;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;\n\nfunction isISIN(str) {\n  (0, _assertString2.default)(str);\n  if (!isin.test(str)) {\n    return false;\n  }\n\n  var checksumStr = str.replace(/[A-Z]/g, function (character) {\n    return parseInt(character, 36);\n  });\n\n  var sum = 0;\n  var digit = void 0;\n  var tmpNum = void 0;\n  var shouldDouble = true;\n  for (var i = checksumStr.length - 2; i >= 0; i--) {\n    digit = checksumStr.substring(i, i + 1);\n    tmpNum = parseInt(digit, 10);\n    if (shouldDouble) {\n      tmpNum *= 2;\n      if (tmpNum >= 10) {\n        sum += tmpNum + 1;\n      } else {\n        sum += tmpNum;\n      }\n    } else {\n      sum += tmpNum;\n    }\n    shouldDouble = !shouldDouble;\n  }\n\n  return parseInt(str.substr(str.length - 1), 10) === (10000 - sum) % 10;\n}\nmodule.exports = exports['default'];"},"lineCount":48}},"hash":"f956973e7f303358f96cc2b3824e3728","cacheData":{"env":{}}}