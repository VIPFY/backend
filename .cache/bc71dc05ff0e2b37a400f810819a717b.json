{"dependencies":[{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar SmartBuffer = (function () {\n\n    /**\n     * Constructor for SmartBuffer.\n     * @param arg1 {Buffer || Number || String} Buffer to read from, or expected size to write to, or encoding to use.\n     * @param arg2 {String} Encoding to use for writing and reading strings. Defaults to utf8. If encoding is given in arg1, this is ignored.\n     * @constructor\n     *\n     * There are a few ways to construct a SmartBuffer:\n     *\n     * SmartBuffer() - Defaults to utf8, 4096 pre-set internal Buffer length.\n     * SmartBuffer(size) - Defaults to utf8, sets internal Buffer length to the size given.\n     * SmartBuffer(encoding) - Sets the given encoding, defaults to 4096 pre-set internal Buffer length.\n     * SmartBuffer(Buffer) - Defaults to utf8, sets the internal Buffer to the given buffer (same memory).\n     * SmartBuffer(Buffer, encoding) - Sets the given encoding, sets the internal Buffer to the given buffer (same memory).\n     *\n     */\n    function SmartBuffer(arg1, arg2) {\n        var type;\n        switch (type = typeof arg1) {\n            case 'number':\n                if (isFinite(arg1) && arg1 > 0) {\n                    this.buff = new Buffer(Math.ceil(arg1));\n                    this.length = 0;\n                } else {\n                    throw new Error('When specifying a size, it must be a valid number above zero.');\n                }\n                break;\n\n            case 'string':\n                if (Buffer.isEncoding(arg1)) {\n                    this.buff = new Buffer(4096);\n                    this.length = 0;\n                    this.encoding = arg1;\n                } else {\n                    throw new Error('Invalid Encoding');\n                }\n                break;\n\n            case 'object':\n                if (Buffer.isBuffer(arg1)) {\n                    this.buff = arg1;\n                    this.length = arg1.length;\n                } else {\n                    throw new TypeError('First argument must be a Buffer, Number representing the size, or a String representing the encoding.');\n                }\n                break;\n\n            default:\n                this.buff = new Buffer(4096);\n                this.length = 0;\n                break;\n        }\n\n        if (typeof this.encoding === 'undefined') {\n            if (typeof arg2 === 'string') {\n                if (Buffer.isEncoding(arg2)) {\n                    this.encoding = arg2;\n                } else {\n                    throw new Error('Invalid Encoding');\n                }\n            }\n        }\n\n        this._readOffset = 0;\n        this._writeOffset = 0;\n    }\n\n\n    SmartBuffer.prototype._ensureWritable = function (len, offset) {\n        this._ensureCapacity(this.length + len + (typeof offset === 'number' ? offset : 0));\n\n        if (typeof offset === 'number') {\n            this.buff.copy(this.buff, offset + len, offset, this.buff.length);\n        }\n        this.length = Math.max(this.length + len, (typeof offset === 'number' ?  offset : 0) + len);\n    };\n\n    SmartBuffer.prototype._ensureCapacity = function (minlen) {\n        var oldlen = this.buff.length;\n\n        if (minlen > oldlen) {\n            var data = this.buff;\n            var newlen = (oldlen * 3) / 2 + 1;\n            if (newlen < minlen)\n                newlen = minlen;\n            this.buff = new Buffer(newlen);\n            data.copy(this.buff, 0, 0, oldlen);\n        }\n    };\n\n\n    var makeReader = function (func, size) {\n        return function () {\n            var ret = func.call(this.buff, this._readOffset);\n            this._readOffset += size;\n            return ret;\n        }\n    };\n\n    var makeWriter = function (func, size) {\n        return function (value, offset) {\n            this._ensureWritable(size, offset);\n            func.call(this.buff, value, typeof offset === 'number' ? offset : this._writeOffset);\n            this._writeOffset += size;\n            return this;\n        }\n    };\n\n\n    /*\n     Read Operations\n     */\n\n    SmartBuffer.prototype.readInt8 = makeReader(Buffer.prototype.readInt8, 1);\n    SmartBuffer.prototype.readInt16BE = makeReader(Buffer.prototype.readInt16BE, 2);\n    SmartBuffer.prototype.readInt16LE = makeReader(Buffer.prototype.readInt16LE, 2);\n    SmartBuffer.prototype.readInt32BE = makeReader(Buffer.prototype.readInt32BE, 4);\n    SmartBuffer.prototype.readInt32LE = makeReader(Buffer.prototype.readInt32LE, 4);\n\n    SmartBuffer.prototype.readUInt8 = makeReader(Buffer.prototype.readUInt8, 1);\n    SmartBuffer.prototype.readUInt16BE = makeReader(Buffer.prototype.readUInt16BE, 2);\n    SmartBuffer.prototype.readUInt16LE = makeReader(Buffer.prototype.readUInt16LE, 2);\n    SmartBuffer.prototype.readUInt32BE = makeReader(Buffer.prototype.readUInt32BE, 4);\n    SmartBuffer.prototype.readUInt32LE = makeReader(Buffer.prototype.readUInt32LE, 4);\n\n    SmartBuffer.prototype.readFloatBE = makeReader(Buffer.prototype.readFloatBE, 4);\n    SmartBuffer.prototype.readFloatLE = makeReader(Buffer.prototype.readFloatLE, 4);\n\n    SmartBuffer.prototype.readDoubleBE = makeReader(Buffer.prototype.readDoubleBE, 8);\n    SmartBuffer.prototype.readDoubleLE = makeReader(Buffer.prototype.readDoubleLE, 8);\n\n\n    /**\n     * Reads a string of the given length.\n     * @param length {Number} The length of the string to read. (Defaults to the length of the remaining data)\n     * @param encoding {String} The encoding to use. (Defaults to encoding set in constructor, or utf8)\n     * @returns {string} The string.\n     */\n    SmartBuffer.prototype.readString = function (length, encoding) {\n        var len = Math.min(length, this.length - this._readOffset) || (this.length - this._readOffset);\n        var ret = this.buff.slice(this._readOffset, this._readOffset + len).toString(encoding || this.encoding);\n        this._readOffset += len;\n        return ret;\n    };\n\n    /**\n     * Reads a null terminated string from the underlying buffer.\n     * @param encoding {String} Encoding to use. Defaults to encoding set in constructor, or utf8.\n     * @returns {string}\n     */\n    SmartBuffer.prototype.readStringNT = function (encoding) {\n        var nullpos = this.length;\n        for (var i = this._readOffset; i < this.length; i++) {\n            if (this.buff[i] == 0x00) {\n                nullpos = i;\n                break;\n            }\n        }\n\n        var result = this.buff.slice(this._readOffset, nullpos);\n        this._readOffset = nullpos + 1;\n\n        return result.toString(encoding || this.encoding);\n    };\n\n\n    /**\n     * Reads a specified number of bytes.\n     * @param len {Number} Numbers of bytes to read. (Defaults to the remaining data length)\n     * @returns {Buffer} Buffer containing the read bytes.\n     */\n    SmartBuffer.prototype.readBuffer = function (len) {\n        var endpoint = Math.min(this.length, this._readOffset + (typeof len === 'number' ? len : this.length));\n        var ret = this.buff.slice(this._readOffset, endpoint);\n        this._readOffset = endpoint;\n        return ret;\n    };\n\n    /**\n     * Reads a null terminated sequence of bytes from the underlying buffer.\n     * @returns {Buffer} Buffer containing the read bytes.\n     */\n    SmartBuffer.prototype.readBufferNT = function () {\n        var nullpos = this.length;\n        for (var i = this._readOffset; i < this.length; i++) {\n            if (this.buff[i] == 0x00) {\n                nullpos = i;\n                break;\n            }\n        }\n\n        var ret = this.buff.slice(this._readOffset, nullpos);\n        this._readOffset = nullpos + 1;\n\n        return ret;\n    };\n\n\n    /*\n     Write Operations\n     */\n\n\n    SmartBuffer.prototype.writeInt8 = makeWriter(Buffer.prototype.writeInt8, 1);\n    SmartBuffer.prototype.writeInt16BE = makeWriter(Buffer.prototype.writeInt16BE, 2);\n    SmartBuffer.prototype.writeInt16LE = makeWriter(Buffer.prototype.writeInt16LE, 2);\n    SmartBuffer.prototype.writeInt32BE = makeWriter(Buffer.prototype.writeInt32BE, 4);\n    SmartBuffer.prototype.writeInt32LE = makeWriter(Buffer.prototype.writeInt32LE, 4);\n\n    SmartBuffer.prototype.writeUInt8 = makeWriter(Buffer.prototype.writeUInt8, 1);\n    SmartBuffer.prototype.writeUInt16BE = makeWriter(Buffer.prototype.writeUInt16BE, 2);\n    SmartBuffer.prototype.writeUInt16LE = makeWriter(Buffer.prototype.writeUInt16LE, 2);\n    SmartBuffer.prototype.writeUInt32BE = makeWriter(Buffer.prototype.writeUInt32BE, 4);\n    SmartBuffer.prototype.writeUInt32LE = makeWriter(Buffer.prototype.writeUInt32LE, 4);\n\n    SmartBuffer.prototype.writeFloatBE = makeWriter(Buffer.prototype.writeFloatBE, 4);\n    SmartBuffer.prototype.writeFloatLE = makeWriter(Buffer.prototype.writeFloatLE, 4);\n\n    SmartBuffer.prototype.writeDoubleBE = makeWriter(Buffer.prototype.writeDoubleBE, 8);\n    SmartBuffer.prototype.writeDoubleLE = makeWriter(Buffer.prototype.writeDoubleLE, 8);\n\n\n    /**\n     * Writes a string to the underlying buffer.\n     * @param value {String} The string to write.\n     * @param offset {Number} The offset to write the string to. (Encoding can also be set here in place of offset)\n     * @param encoding {String} The encoding to use. (Defaults to encoding set in constructor, or to utf8)\n     * @returns {*}\n     */\n    SmartBuffer.prototype.writeString = function (value, offset, encoding) {\n        var len, _offset, type = typeof offset;\n\n        if (type === 'number') {\n            _offset = offset;\n        } else if (type === 'string') {\n            encoding = offset;\n            offset = this._writeOffset;\n        } else {\n            encoding = undefined;\n            offset = this._writeOffset;\n        }\n\n        len = Buffer.byteLength(value, encoding || this.encoding);\n        this._ensureWritable(len, _offset);\n\n        this.buff.write(value, offset, len, encoding || this.encoding);\n        this._writeOffset += len;\n        return this;\n    };\n\n    /**\n     * Writes a null terminated string to the underlying buffer.\n     * @param value {String} The string to write.\n     * @param offset {Number} The offset to write the string to. (Encoding can also be set here in place of offset)\n     * @param encoding {String} The encoding to use. (Defaults to encoding set in constructor, or to utf8)\n     * @returns {*}\n     */\n    SmartBuffer.prototype.writeStringNT = function (value, offset, encoding) {\n        this.writeString(value, offset, encoding);\n        this.writeUInt8(0x00, (typeof offset === 'number' ? offset + value.length : this._writeOffset));\n        return this;\n    };\n\n    /**\n     * Writes a Buffer to the underlying buffer.\n     * @param value {Buffer} The buffer to write.\n     * @param offset {Number} The offset to write the Buffer to.\n     * @returns {*}\n     */\n    SmartBuffer.prototype.writeBuffer = function (value, offset) {\n        var len = value.length;\n        this._ensureWritable(len, offset);\n        value.copy(this.buff, typeof offset === 'number' ? offset : this._writeOffset);\n        this._writeOffset += len;\n        return this;\n    };\n\n    /**\n     * Writes a null terminated Buffer to the underlying buffer.\n     * @param value {Buffer} The buffer to write.\n     * @param offset {Number} The offset to write the Buffer to.\n     * @returns {*}\n     */\n    SmartBuffer.prototype.writeBufferNT = function (value, offset) {\n        this.writeBuffer(value, offset);\n        this.writeUInt8(0x00, (typeof offset === 'number' ? offset + value.length : this._writeOffset));\n\n        return this;\n    };\n\n\n    /**\n     * Resets the Endless Buffer.\n     */\n    SmartBuffer.prototype.clear = function () {\n        this._writeOffset = 0;\n        this._readOffset = 0;\n        this.length = 0;\n    };\n\n    /**\n     * Gets the remaining number of bytes to be read from the existing Buffer.\n     * @returns {number} The number of bytes remaining.\n     */\n    SmartBuffer.prototype.remaining = function () {\n        return this.length - this._readOffset;\n    };\n\n    /**\n     * Skips the read position forward by the amount of given.\n     * @param amount {Number} The amount of bytes to skip forward.\n     */\n    SmartBuffer.prototype.skip = function (amount) {\n        if (this._readOffset + amount > this.length)\n            throw new Error('Target position is beyond the bounds of the data.');\n\n        this._readOffset += amount;\n    };\n\n    /**\n     * Rewinds the read position backward by the amount given.\n     * @param amount {Number} The amount of bytes to reverse backward.\n     */\n    SmartBuffer.prototype.rewind = function (amount) {\n        if (this._readOffset - amount < 0)\n            throw new Error('Target position is beyond the bounds of the data.');\n\n        this._readOffset -= amount;\n    };\n\n    /**\n     * Skips the read position to the given position.\n     * @param position {Number} The position to skip to.\n     */\n    SmartBuffer.prototype.skipTo = function (position) {\n        if (position < 0 || position > this.length)\n            throw new Error('Target position is beyond the bounds of the data.');\n\n        this._readOffset = position;\n    };\n\n    /**\n     * Gets the underlying Buffer.\n     * @returns {*}\n     */\n    SmartBuffer.prototype.toBuffer = function () {\n        return this.buff.slice(0, this.length);\n    };\n\n    /**\n     * Gets a string representation of the underlying Buffer.\n     * @param encoding {String} Encoding to use. (Defaults to encoding set in constructor, or utf8.)\n     * @returns {*}\n     */\n    SmartBuffer.prototype.toString = function (encoding) {\n        return this.buff.toString(encoding || this.encoding, 0, this.length);\n    };\n\n    /**\n     * Destroys the underlying Buffer, and resets the SmartBuffer.\n     */\n    SmartBuffer.prototype.destroy = function () {\n        delete this.buff;\n        this.clear();\n    };\n\n    return SmartBuffer;\n})();\n\nmodule.exports = SmartBuffer;","map":{"mappings":[{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/smart-buffer/lib/smart-buffer.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}}],"sources":{"../node_modules/smart-buffer/lib/smart-buffer.js":"var SmartBuffer = (function () {\n\n    /**\n     * Constructor for SmartBuffer.\n     * @param arg1 {Buffer || Number || String} Buffer to read from, or expected size to write to, or encoding to use.\n     * @param arg2 {String} Encoding to use for writing and reading strings. Defaults to utf8. If encoding is given in arg1, this is ignored.\n     * @constructor\n     *\n     * There are a few ways to construct a SmartBuffer:\n     *\n     * SmartBuffer() - Defaults to utf8, 4096 pre-set internal Buffer length.\n     * SmartBuffer(size) - Defaults to utf8, sets internal Buffer length to the size given.\n     * SmartBuffer(encoding) - Sets the given encoding, defaults to 4096 pre-set internal Buffer length.\n     * SmartBuffer(Buffer) - Defaults to utf8, sets the internal Buffer to the given buffer (same memory).\n     * SmartBuffer(Buffer, encoding) - Sets the given encoding, sets the internal Buffer to the given buffer (same memory).\n     *\n     */\n    function SmartBuffer(arg1, arg2) {\n        var type;\n        switch (type = typeof arg1) {\n            case 'number':\n                if (isFinite(arg1) && arg1 > 0) {\n                    this.buff = new Buffer(Math.ceil(arg1));\n                    this.length = 0;\n                } else {\n                    throw new Error('When specifying a size, it must be a valid number above zero.');\n                }\n                break;\n\n            case 'string':\n                if (Buffer.isEncoding(arg1)) {\n                    this.buff = new Buffer(4096);\n                    this.length = 0;\n                    this.encoding = arg1;\n                } else {\n                    throw new Error('Invalid Encoding');\n                }\n                break;\n\n            case 'object':\n                if (Buffer.isBuffer(arg1)) {\n                    this.buff = arg1;\n                    this.length = arg1.length;\n                } else {\n                    throw new TypeError('First argument must be a Buffer, Number representing the size, or a String representing the encoding.');\n                }\n                break;\n\n            default:\n                this.buff = new Buffer(4096);\n                this.length = 0;\n                break;\n        }\n\n        if (typeof this.encoding === 'undefined') {\n            if (typeof arg2 === 'string') {\n                if (Buffer.isEncoding(arg2)) {\n                    this.encoding = arg2;\n                } else {\n                    throw new Error('Invalid Encoding');\n                }\n            }\n        }\n\n        this._readOffset = 0;\n        this._writeOffset = 0;\n    }\n\n\n    SmartBuffer.prototype._ensureWritable = function (len, offset) {\n        this._ensureCapacity(this.length + len + (typeof offset === 'number' ? offset : 0));\n\n        if (typeof offset === 'number') {\n            this.buff.copy(this.buff, offset + len, offset, this.buff.length);\n        }\n        this.length = Math.max(this.length + len, (typeof offset === 'number' ?  offset : 0) + len);\n    };\n\n    SmartBuffer.prototype._ensureCapacity = function (minlen) {\n        var oldlen = this.buff.length;\n\n        if (minlen > oldlen) {\n            var data = this.buff;\n            var newlen = (oldlen * 3) / 2 + 1;\n            if (newlen < minlen)\n                newlen = minlen;\n            this.buff = new Buffer(newlen);\n            data.copy(this.buff, 0, 0, oldlen);\n        }\n    };\n\n\n    var makeReader = function (func, size) {\n        return function () {\n            var ret = func.call(this.buff, this._readOffset);\n            this._readOffset += size;\n            return ret;\n        }\n    };\n\n    var makeWriter = function (func, size) {\n        return function (value, offset) {\n            this._ensureWritable(size, offset);\n            func.call(this.buff, value, typeof offset === 'number' ? offset : this._writeOffset);\n            this._writeOffset += size;\n            return this;\n        }\n    };\n\n\n    /*\n     Read Operations\n     */\n\n    SmartBuffer.prototype.readInt8 = makeReader(Buffer.prototype.readInt8, 1);\n    SmartBuffer.prototype.readInt16BE = makeReader(Buffer.prototype.readInt16BE, 2);\n    SmartBuffer.prototype.readInt16LE = makeReader(Buffer.prototype.readInt16LE, 2);\n    SmartBuffer.prototype.readInt32BE = makeReader(Buffer.prototype.readInt32BE, 4);\n    SmartBuffer.prototype.readInt32LE = makeReader(Buffer.prototype.readInt32LE, 4);\n\n    SmartBuffer.prototype.readUInt8 = makeReader(Buffer.prototype.readUInt8, 1);\n    SmartBuffer.prototype.readUInt16BE = makeReader(Buffer.prototype.readUInt16BE, 2);\n    SmartBuffer.prototype.readUInt16LE = makeReader(Buffer.prototype.readUInt16LE, 2);\n    SmartBuffer.prototype.readUInt32BE = makeReader(Buffer.prototype.readUInt32BE, 4);\n    SmartBuffer.prototype.readUInt32LE = makeReader(Buffer.prototype.readUInt32LE, 4);\n\n    SmartBuffer.prototype.readFloatBE = makeReader(Buffer.prototype.readFloatBE, 4);\n    SmartBuffer.prototype.readFloatLE = makeReader(Buffer.prototype.readFloatLE, 4);\n\n    SmartBuffer.prototype.readDoubleBE = makeReader(Buffer.prototype.readDoubleBE, 8);\n    SmartBuffer.prototype.readDoubleLE = makeReader(Buffer.prototype.readDoubleLE, 8);\n\n\n    /**\n     * Reads a string of the given length.\n     * @param length {Number} The length of the string to read. (Defaults to the length of the remaining data)\n     * @param encoding {String} The encoding to use. (Defaults to encoding set in constructor, or utf8)\n     * @returns {string} The string.\n     */\n    SmartBuffer.prototype.readString = function (length, encoding) {\n        var len = Math.min(length, this.length - this._readOffset) || (this.length - this._readOffset);\n        var ret = this.buff.slice(this._readOffset, this._readOffset + len).toString(encoding || this.encoding);\n        this._readOffset += len;\n        return ret;\n    };\n\n    /**\n     * Reads a null terminated string from the underlying buffer.\n     * @param encoding {String} Encoding to use. Defaults to encoding set in constructor, or utf8.\n     * @returns {string}\n     */\n    SmartBuffer.prototype.readStringNT = function (encoding) {\n        var nullpos = this.length;\n        for (var i = this._readOffset; i < this.length; i++) {\n            if (this.buff[i] == 0x00) {\n                nullpos = i;\n                break;\n            }\n        }\n\n        var result = this.buff.slice(this._readOffset, nullpos);\n        this._readOffset = nullpos + 1;\n\n        return result.toString(encoding || this.encoding);\n    };\n\n\n    /**\n     * Reads a specified number of bytes.\n     * @param len {Number} Numbers of bytes to read. (Defaults to the remaining data length)\n     * @returns {Buffer} Buffer containing the read bytes.\n     */\n    SmartBuffer.prototype.readBuffer = function (len) {\n        var endpoint = Math.min(this.length, this._readOffset + (typeof len === 'number' ? len : this.length));\n        var ret = this.buff.slice(this._readOffset, endpoint);\n        this._readOffset = endpoint;\n        return ret;\n    };\n\n    /**\n     * Reads a null terminated sequence of bytes from the underlying buffer.\n     * @returns {Buffer} Buffer containing the read bytes.\n     */\n    SmartBuffer.prototype.readBufferNT = function () {\n        var nullpos = this.length;\n        for (var i = this._readOffset; i < this.length; i++) {\n            if (this.buff[i] == 0x00) {\n                nullpos = i;\n                break;\n            }\n        }\n\n        var ret = this.buff.slice(this._readOffset, nullpos);\n        this._readOffset = nullpos + 1;\n\n        return ret;\n    };\n\n\n    /*\n     Write Operations\n     */\n\n\n    SmartBuffer.prototype.writeInt8 = makeWriter(Buffer.prototype.writeInt8, 1);\n    SmartBuffer.prototype.writeInt16BE = makeWriter(Buffer.prototype.writeInt16BE, 2);\n    SmartBuffer.prototype.writeInt16LE = makeWriter(Buffer.prototype.writeInt16LE, 2);\n    SmartBuffer.prototype.writeInt32BE = makeWriter(Buffer.prototype.writeInt32BE, 4);\n    SmartBuffer.prototype.writeInt32LE = makeWriter(Buffer.prototype.writeInt32LE, 4);\n\n    SmartBuffer.prototype.writeUInt8 = makeWriter(Buffer.prototype.writeUInt8, 1);\n    SmartBuffer.prototype.writeUInt16BE = makeWriter(Buffer.prototype.writeUInt16BE, 2);\n    SmartBuffer.prototype.writeUInt16LE = makeWriter(Buffer.prototype.writeUInt16LE, 2);\n    SmartBuffer.prototype.writeUInt32BE = makeWriter(Buffer.prototype.writeUInt32BE, 4);\n    SmartBuffer.prototype.writeUInt32LE = makeWriter(Buffer.prototype.writeUInt32LE, 4);\n\n    SmartBuffer.prototype.writeFloatBE = makeWriter(Buffer.prototype.writeFloatBE, 4);\n    SmartBuffer.prototype.writeFloatLE = makeWriter(Buffer.prototype.writeFloatLE, 4);\n\n    SmartBuffer.prototype.writeDoubleBE = makeWriter(Buffer.prototype.writeDoubleBE, 8);\n    SmartBuffer.prototype.writeDoubleLE = makeWriter(Buffer.prototype.writeDoubleLE, 8);\n\n\n    /**\n     * Writes a string to the underlying buffer.\n     * @param value {String} The string to write.\n     * @param offset {Number} The offset to write the string to. (Encoding can also be set here in place of offset)\n     * @param encoding {String} The encoding to use. (Defaults to encoding set in constructor, or to utf8)\n     * @returns {*}\n     */\n    SmartBuffer.prototype.writeString = function (value, offset, encoding) {\n        var len, _offset, type = typeof offset;\n\n        if (type === 'number') {\n            _offset = offset;\n        } else if (type === 'string') {\n            encoding = offset;\n            offset = this._writeOffset;\n        } else {\n            encoding = undefined;\n            offset = this._writeOffset;\n        }\n\n        len = Buffer.byteLength(value, encoding || this.encoding);\n        this._ensureWritable(len, _offset);\n\n        this.buff.write(value, offset, len, encoding || this.encoding);\n        this._writeOffset += len;\n        return this;\n    };\n\n    /**\n     * Writes a null terminated string to the underlying buffer.\n     * @param value {String} The string to write.\n     * @param offset {Number} The offset to write the string to. (Encoding can also be set here in place of offset)\n     * @param encoding {String} The encoding to use. (Defaults to encoding set in constructor, or to utf8)\n     * @returns {*}\n     */\n    SmartBuffer.prototype.writeStringNT = function (value, offset, encoding) {\n        this.writeString(value, offset, encoding);\n        this.writeUInt8(0x00, (typeof offset === 'number' ? offset + value.length : this._writeOffset));\n        return this;\n    };\n\n    /**\n     * Writes a Buffer to the underlying buffer.\n     * @param value {Buffer} The buffer to write.\n     * @param offset {Number} The offset to write the Buffer to.\n     * @returns {*}\n     */\n    SmartBuffer.prototype.writeBuffer = function (value, offset) {\n        var len = value.length;\n        this._ensureWritable(len, offset);\n        value.copy(this.buff, typeof offset === 'number' ? offset : this._writeOffset);\n        this._writeOffset += len;\n        return this;\n    };\n\n    /**\n     * Writes a null terminated Buffer to the underlying buffer.\n     * @param value {Buffer} The buffer to write.\n     * @param offset {Number} The offset to write the Buffer to.\n     * @returns {*}\n     */\n    SmartBuffer.prototype.writeBufferNT = function (value, offset) {\n        this.writeBuffer(value, offset);\n        this.writeUInt8(0x00, (typeof offset === 'number' ? offset + value.length : this._writeOffset));\n\n        return this;\n    };\n\n\n    /**\n     * Resets the Endless Buffer.\n     */\n    SmartBuffer.prototype.clear = function () {\n        this._writeOffset = 0;\n        this._readOffset = 0;\n        this.length = 0;\n    };\n\n    /**\n     * Gets the remaining number of bytes to be read from the existing Buffer.\n     * @returns {number} The number of bytes remaining.\n     */\n    SmartBuffer.prototype.remaining = function () {\n        return this.length - this._readOffset;\n    };\n\n    /**\n     * Skips the read position forward by the amount of given.\n     * @param amount {Number} The amount of bytes to skip forward.\n     */\n    SmartBuffer.prototype.skip = function (amount) {\n        if (this._readOffset + amount > this.length)\n            throw new Error('Target position is beyond the bounds of the data.');\n\n        this._readOffset += amount;\n    };\n\n    /**\n     * Rewinds the read position backward by the amount given.\n     * @param amount {Number} The amount of bytes to reverse backward.\n     */\n    SmartBuffer.prototype.rewind = function (amount) {\n        if (this._readOffset - amount < 0)\n            throw new Error('Target position is beyond the bounds of the data.');\n\n        this._readOffset -= amount;\n    };\n\n    /**\n     * Skips the read position to the given position.\n     * @param position {Number} The position to skip to.\n     */\n    SmartBuffer.prototype.skipTo = function (position) {\n        if (position < 0 || position > this.length)\n            throw new Error('Target position is beyond the bounds of the data.');\n\n        this._readOffset = position;\n    };\n\n    /**\n     * Gets the underlying Buffer.\n     * @returns {*}\n     */\n    SmartBuffer.prototype.toBuffer = function () {\n        return this.buff.slice(0, this.length);\n    };\n\n    /**\n     * Gets a string representation of the underlying Buffer.\n     * @param encoding {String} Encoding to use. (Defaults to encoding set in constructor, or utf8.)\n     * @returns {*}\n     */\n    SmartBuffer.prototype.toString = function (encoding) {\n        return this.buff.toString(encoding || this.encoding, 0, this.length);\n    };\n\n    /**\n     * Destroys the underlying Buffer, and resets the SmartBuffer.\n     */\n    SmartBuffer.prototype.destroy = function () {\n        delete this.buff;\n        this.clear();\n    };\n\n    return SmartBuffer;\n})();\n\nmodule.exports = SmartBuffer;"},"lineCount":372}},"hash":"dd91749b66e2ac999d2cd7f3e2c8f6e6","cacheData":{"env":{}}}