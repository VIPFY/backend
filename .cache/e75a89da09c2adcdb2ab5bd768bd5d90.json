{"dependencies":[{"name":"net","loc":{"line":6,"column":18}},{"name":"tls","loc":{"line":7,"column":18}},{"name":"url","loc":{"line":8,"column":18}},{"name":"extend","loc":{"line":9,"column":21}},{"name":"agent-base","loc":{"line":10,"column":20}},{"name":"util","loc":{"line":11,"column":23}},{"name":"debug","loc":{"line":12,"column":20}},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n\n/**\n * Module dependencies.\n */\n\nvar net = require('net');\nvar tls = require('tls');\nvar url = require('url');\nvar extend = require('extend');\nvar Agent = require('agent-base');\nvar inherits = require('util').inherits;\nvar debug = require('debug')('http-proxy-agent');\n\n/**\n * Module exports.\n */\n\nmodule.exports = HttpProxyAgent;\n\n/**\n * The `HttpProxyAgent` implements an HTTP Agent subclass that connects to the\n * specified \"HTTP proxy server\" in order to proxy HTTP requests.\n *\n * @api public\n */\n\nfunction HttpProxyAgent (opts) {\n  if (!(this instanceof HttpProxyAgent)) return new HttpProxyAgent(opts);\n  if ('string' == typeof opts) opts = url.parse(opts);\n  if (!opts) throw new Error('an HTTP(S) proxy server `host` and `port` must be specified!');\n  debug('creating new HttpProxyAgent instance: %o', opts);\n  Agent.call(this, connect);\n\n  var proxy = extend({}, opts);\n\n  // if `true`, then connect to the proxy server over TLS. defaults to `false`.\n  this.secureProxy = proxy.protocol ? /^https:?$/i.test(proxy.protocol) : false;\n\n  // prefer `hostname` over `host`, and set the `port` if needed\n  proxy.host = proxy.hostname || proxy.host;\n  proxy.port = +proxy.port || (this.secureProxy ? 443 : 80);\n\n  if (proxy.host && proxy.path) {\n    // if both a `host` and `path` are specified then it's most likely the\n    // result of a `url.parse()` call... we need to remove the `path` portion so\n    // that `net.connect()` doesn't attempt to open that as a unix socket file.\n    delete proxy.path;\n    delete proxy.pathname;\n  }\n\n  this.proxy = proxy;\n}\ninherits(HttpProxyAgent, Agent);\n\n/**\n * Called when the node-core HTTP client library is creating a new HTTP request.\n *\n * @api public\n */\n\nfunction connect (req, opts, fn) {\n  var proxy = this.proxy;\n\n  // change the `http.ClientRequest` instance's \"path\" field\n  // to the absolute path of the URL that will be requested\n  var parsed = url.parse(req.path);\n  if (null == parsed.protocol) parsed.protocol = 'http:';\n  if (null == parsed.hostname) parsed.hostname = opts.hostname || opts.host;\n  if (null == parsed.port) parsed.port = opts.port;\n  if (parsed.port == 80) {\n    // if port is 80, then we can remove the port so that the\n    // \":80\" portion is not on the produced URL\n    delete parsed.port;\n  }\n  var absolute = url.format(parsed);\n  req.path = absolute;\n\n  // inject the `Proxy-Authorization` header if necessary\n  var auth = proxy.auth;\n  if (auth) {\n    req.setHeader('Proxy-Authorization', 'Basic ' + new Buffer(auth).toString('base64'));\n  }\n\n  // create a socket connection to the proxy server\n  var socket;\n  if (this.secureProxy) {\n    socket = tls.connect(proxy);\n  } else {\n    socket = net.connect(proxy);\n  }\n\n  // at this point, the http ClientRequest's internal `_header` field might have\n  // already been set. If this is the case then we'll need to re-generate the\n  // string since we just changed the `req.path`\n  if (req._header) {\n    debug('regenerating stored HTTP header string for request');\n    req._header = null;\n    req._implicitHeader();\n    if (req.output && req.output.length > 0) {\n      debug('patching connection write() output buffer with updated header');\n      // the _header has already been queued to be written to the socket\n      var first = req.output[0];\n      var endOfHeaders = first.indexOf('\\r\\n\\r\\n') + 4;\n      req.output[0] = req._header + first.substring(endOfHeaders);\n      debug('output buffer: %o', req.output);\n    }\n  }\n\n  fn(null, socket);\n};\n","map":{"mappings":[{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/http-proxy-agent/http-proxy-agent.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}}],"sources":{"../node_modules/http-proxy-agent/http-proxy-agent.js":"\n/**\n * Module dependencies.\n */\n\nvar net = require('net');\nvar tls = require('tls');\nvar url = require('url');\nvar extend = require('extend');\nvar Agent = require('agent-base');\nvar inherits = require('util').inherits;\nvar debug = require('debug')('http-proxy-agent');\n\n/**\n * Module exports.\n */\n\nmodule.exports = HttpProxyAgent;\n\n/**\n * The `HttpProxyAgent` implements an HTTP Agent subclass that connects to the\n * specified \"HTTP proxy server\" in order to proxy HTTP requests.\n *\n * @api public\n */\n\nfunction HttpProxyAgent (opts) {\n  if (!(this instanceof HttpProxyAgent)) return new HttpProxyAgent(opts);\n  if ('string' == typeof opts) opts = url.parse(opts);\n  if (!opts) throw new Error('an HTTP(S) proxy server `host` and `port` must be specified!');\n  debug('creating new HttpProxyAgent instance: %o', opts);\n  Agent.call(this, connect);\n\n  var proxy = extend({}, opts);\n\n  // if `true`, then connect to the proxy server over TLS. defaults to `false`.\n  this.secureProxy = proxy.protocol ? /^https:?$/i.test(proxy.protocol) : false;\n\n  // prefer `hostname` over `host`, and set the `port` if needed\n  proxy.host = proxy.hostname || proxy.host;\n  proxy.port = +proxy.port || (this.secureProxy ? 443 : 80);\n\n  if (proxy.host && proxy.path) {\n    // if both a `host` and `path` are specified then it's most likely the\n    // result of a `url.parse()` call... we need to remove the `path` portion so\n    // that `net.connect()` doesn't attempt to open that as a unix socket file.\n    delete proxy.path;\n    delete proxy.pathname;\n  }\n\n  this.proxy = proxy;\n}\ninherits(HttpProxyAgent, Agent);\n\n/**\n * Called when the node-core HTTP client library is creating a new HTTP request.\n *\n * @api public\n */\n\nfunction connect (req, opts, fn) {\n  var proxy = this.proxy;\n\n  // change the `http.ClientRequest` instance's \"path\" field\n  // to the absolute path of the URL that will be requested\n  var parsed = url.parse(req.path);\n  if (null == parsed.protocol) parsed.protocol = 'http:';\n  if (null == parsed.hostname) parsed.hostname = opts.hostname || opts.host;\n  if (null == parsed.port) parsed.port = opts.port;\n  if (parsed.port == 80) {\n    // if port is 80, then we can remove the port so that the\n    // \":80\" portion is not on the produced URL\n    delete parsed.port;\n  }\n  var absolute = url.format(parsed);\n  req.path = absolute;\n\n  // inject the `Proxy-Authorization` header if necessary\n  var auth = proxy.auth;\n  if (auth) {\n    req.setHeader('Proxy-Authorization', 'Basic ' + new Buffer(auth).toString('base64'));\n  }\n\n  // create a socket connection to the proxy server\n  var socket;\n  if (this.secureProxy) {\n    socket = tls.connect(proxy);\n  } else {\n    socket = net.connect(proxy);\n  }\n\n  // at this point, the http ClientRequest's internal `_header` field might have\n  // already been set. If this is the case then we'll need to re-generate the\n  // string since we just changed the `req.path`\n  if (req._header) {\n    debug('regenerating stored HTTP header string for request');\n    req._header = null;\n    req._implicitHeader();\n    if (req.output && req.output.length > 0) {\n      debug('patching connection write() output buffer with updated header');\n      // the _header has already been queued to be written to the socket\n      var first = req.output[0];\n      var endOfHeaders = first.indexOf('\\r\\n\\r\\n') + 4;\n      req.output[0] = req._header + first.substring(endOfHeaders);\n      debug('output buffer: %o', req.output);\n    }\n  }\n\n  fn(null, socket);\n};\n"},"lineCount":112}},"hash":"ce4a127f0a822d7ef439c7f4632a17a8","cacheData":{"env":{}}}