{"dependencies":[],"generated":{"js":"'use strict'\n\nexports.parse = function (source, transform) {\n  return new ArrayParser(source, transform).parse()\n}\n\nfunction ArrayParser (source, transform) {\n  this.source = source\n  this.transform = transform || identity\n  this.position = 0\n  this.entries = []\n  this.recorded = []\n  this.dimension = 0\n}\n\nArrayParser.prototype.isEof = function () {\n  return this.position >= this.source.length\n}\n\nArrayParser.prototype.nextCharacter = function () {\n  var character = this.source[this.position++]\n  if (character === '\\\\') {\n    return {\n      value: this.source[this.position++],\n      escaped: true\n    }\n  }\n  return {\n    value: character,\n    escaped: false\n  }\n}\n\nArrayParser.prototype.record = function (character) {\n  this.recorded.push(character)\n}\n\nArrayParser.prototype.newEntry = function (includeEmpty) {\n  var entry\n  if (this.recorded.length > 0 || includeEmpty) {\n    entry = this.recorded.join('')\n    if (entry === 'NULL' && !includeEmpty) {\n      entry = null\n    }\n    if (entry !== null) entry = this.transform(entry)\n    this.entries.push(entry)\n    this.recorded = []\n  }\n}\n\nArrayParser.prototype.parse = function (nested) {\n  var character, parser, quote\n  while (!this.isEof()) {\n    character = this.nextCharacter()\n    if (character.value === '{' && !quote) {\n      this.dimension++\n      if (this.dimension > 1) {\n        parser = new ArrayParser(this.source.substr(this.position - 1), this.transform)\n        this.entries.push(parser.parse(true))\n        this.position += parser.position - 2\n      }\n    } else if (character.value === '}' && !quote) {\n      this.dimension--\n      if (!this.dimension) {\n        this.newEntry()\n        if (nested) return this.entries\n      }\n    } else if (character.value === '\"' && !character.escaped) {\n      if (quote) this.newEntry(true)\n      quote = !quote\n    } else if (character.value === ',' && !quote) {\n      this.newEntry()\n    } else {\n      this.record(character.value)\n    }\n  }\n  if (this.dimension !== 0) {\n    throw new Error('array dimension not balanced')\n  }\n  return this.entries\n}\n\nfunction identity (value) {\n  return value\n}\n","map":{"mappings":[{"source":"../node_modules/postgres-array/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/postgres-array/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}}],"sources":{"../node_modules/postgres-array/index.js":"'use strict'\n\nexports.parse = function (source, transform) {\n  return new ArrayParser(source, transform).parse()\n}\n\nfunction ArrayParser (source, transform) {\n  this.source = source\n  this.transform = transform || identity\n  this.position = 0\n  this.entries = []\n  this.recorded = []\n  this.dimension = 0\n}\n\nArrayParser.prototype.isEof = function () {\n  return this.position >= this.source.length\n}\n\nArrayParser.prototype.nextCharacter = function () {\n  var character = this.source[this.position++]\n  if (character === '\\\\') {\n    return {\n      value: this.source[this.position++],\n      escaped: true\n    }\n  }\n  return {\n    value: character,\n    escaped: false\n  }\n}\n\nArrayParser.prototype.record = function (character) {\n  this.recorded.push(character)\n}\n\nArrayParser.prototype.newEntry = function (includeEmpty) {\n  var entry\n  if (this.recorded.length > 0 || includeEmpty) {\n    entry = this.recorded.join('')\n    if (entry === 'NULL' && !includeEmpty) {\n      entry = null\n    }\n    if (entry !== null) entry = this.transform(entry)\n    this.entries.push(entry)\n    this.recorded = []\n  }\n}\n\nArrayParser.prototype.parse = function (nested) {\n  var character, parser, quote\n  while (!this.isEof()) {\n    character = this.nextCharacter()\n    if (character.value === '{' && !quote) {\n      this.dimension++\n      if (this.dimension > 1) {\n        parser = new ArrayParser(this.source.substr(this.position - 1), this.transform)\n        this.entries.push(parser.parse(true))\n        this.position += parser.position - 2\n      }\n    } else if (character.value === '}' && !quote) {\n      this.dimension--\n      if (!this.dimension) {\n        this.newEntry()\n        if (nested) return this.entries\n      }\n    } else if (character.value === '\"' && !character.escaped) {\n      if (quote) this.newEntry(true)\n      quote = !quote\n    } else if (character.value === ',' && !quote) {\n      this.newEntry()\n    } else {\n      this.record(character.value)\n    }\n  }\n  if (this.dimension !== 0) {\n    throw new Error('array dimension not balanced')\n  }\n  return this.entries\n}\n\nfunction identity (value) {\n  return value\n}\n"},"lineCount":86}},"hash":"04be02da5e14e2b119f0b43e2681f010","cacheData":{"env":{}}}