{"dependencies":[{"name":"lodash","loc":{"line":3,"column":18}},{"name":"../../promise","loc":{"line":4,"column":24}},{"name":"../../errors","loc":{"line":5,"column":39}}],"generated":{"js":"'use strict';\n\nconst _ = require('lodash');\nconst Promise = require('../../promise');\nconst UnknownConstraintError = require('../../errors').UnknownConstraintError;\n\n/**\n Returns an object that treats SQLite's inabilities to do certain queries.\n\n @class QueryInterface\n @static\n @private\n */\n\n/**\n  A wrapper that fixes SQLite's inability to remove columns from existing tables.\n  It will create a backup of the table, drop the table afterwards and create a\n  new table with the same name but without the obsolete column.\n\n  @method removeColumn\n  @for    QueryInterface\n\n  @param  {String} tableName     The name of the table.\n  @param  {String} attributeName The name of the attribute that we want to remove.\n  @param  {Object} options\n  @param  {Boolean|Function} [options.logging] A function that logs the sql queries, or false for explicitly not logging these queries\n\n  @since 1.6.0\n  @private\n */\nfunction removeColumn(tableName, attributeName, options) {\n  options = options || {};\n\n  return this.describeTable(tableName, options).then(fields => {\n    delete fields[attributeName];\n\n    const sql = this.QueryGenerator.removeColumnQuery(tableName, fields);\n    const subQueries = sql.split(';').filter(q => q !== '');\n\n    return Promise.each(subQueries, subQuery => this.sequelize.query(subQuery + ';', _.assign({raw: true}, options)));\n  });\n}\nexports.removeColumn = removeColumn;\n\n/**\n  A wrapper that fixes SQLite's inability to change columns from existing tables.\n  It will create a backup of the table, drop the table afterwards and create a\n  new table with the same name but with a modified version of the respective column.\n\n  @method changeColumn\n  @for    QueryInterface\n\n  @param  {String} tableName The name of the table.\n  @param  {Object} attributes An object with the attribute's name as key and its options as value object.\n  @param  {Object} options\n  @param  {Boolean|Function} [options.logging] A function that logs the sql queries, or false for explicitly not logging these queries\n\n  @since 1.6.0\n  @private\n */\nfunction changeColumn(tableName, attributes, options) {\n  const attributeName = Object.keys(attributes)[0];\n  options = options || {};\n\n  return this.describeTable(tableName, options).then(fields => {\n    fields[attributeName] = attributes[attributeName];\n\n    const sql = this.QueryGenerator.removeColumnQuery(tableName, fields);\n    const subQueries = sql.split(';').filter(q => q !== '');\n\n    return Promise.each(subQueries, subQuery => this.sequelize.query(subQuery + ';', _.assign({raw: true}, options)));\n  });\n}\nexports.changeColumn = changeColumn;\n\n/**\n  A wrapper that fixes SQLite's inability to rename columns from existing tables.\n  It will create a backup of the table, drop the table afterwards and create a\n  new table with the same name but with a renamed version of the respective column.\n\n  @method renameColumn\n  @for    QueryInterface\n\n  @param  {String} tableName The name of the table.\n  @param  {String} attrNameBefore The name of the attribute before it was renamed.\n  @param  {String} attrNameAfter The name of the attribute after it was renamed.\n  @param  {Object} options\n  @param  {Boolean|Function} [options.logging] A function that logs the sql queries, or false for explicitly not logging these queries\n\n  @since 1.6.0\n  @private\n */\nfunction renameColumn(tableName, attrNameBefore, attrNameAfter, options) {\n  options = options || {};\n\n  return this.describeTable(tableName, options).then(fields => {\n    fields[attrNameAfter] = _.clone(fields[attrNameBefore]);\n    delete fields[attrNameBefore];\n\n    const sql = this.QueryGenerator.renameColumnQuery(tableName, attrNameBefore, attrNameAfter, fields);\n    const subQueries = sql.split(';').filter(q => q !== '');\n\n    return Promise.each(subQueries, subQuery => this.sequelize.query(subQuery + ';', _.assign({raw: true}, options)));\n  });\n}\nexports.renameColumn = renameColumn;\n\nfunction removeConstraint(tableName, constraintName, options) {\n  let createTableSql;\n\n  return this.showConstraint(tableName, constraintName)\n    .then(constraints => {\n      const constraint = constraints[0];\n\n      if (constraint) {\n        createTableSql = constraint.sql;\n        constraint.constraintName = this.QueryGenerator.quoteIdentifier(constraint.constraintName);\n        let constraintSnippet = `, CONSTRAINT ${constraint.constraintName} ${constraint.constraintType} ${constraint.constraintCondition}`;\n\n        if (constraint.constraintType === 'FOREIGN KEY') {\n          const referenceTableName = this.QueryGenerator.quoteTable(constraint.referenceTableName);\n          constraint.referenceTableKeys = constraint.referenceTableKeys.map(columnName => this.QueryGenerator.quoteIdentifier(columnName));\n          const referenceTableKeys = constraint.referenceTableKeys.join(', ');\n          constraintSnippet += ` REFERENCES ${referenceTableName} (${referenceTableKeys})`;\n          constraintSnippet += ` ON UPDATE ${constraint.updateAction}`;\n          constraintSnippet += ` ON DELETE ${constraint.deleteAction}`;\n        }\n\n        createTableSql = createTableSql.replace(constraintSnippet, '');\n        createTableSql += ';';\n\n        return this.describeTable(tableName, options);\n      } else {\n        throw new UnknownConstraintError(`Constraint ${constraintName} on table ${tableName} does not exist`);\n      }\n    })\n    .then(fields => {\n      const sql = this.QueryGenerator._alterConstraintQuery(tableName, fields, createTableSql);\n      const subQueries = sql.split(';').filter(q => q !== '');\n\n      return Promise.each(subQueries, subQuery => this.sequelize.query(subQuery + ';', _.assign({raw: true}, options)));\n    });\n}\nexports.removeConstraint = removeConstraint;\n\nfunction addConstraint(tableName, options) {\n  const constraintSnippet = this.QueryGenerator.getConstraintSnippet(tableName, options);\n  const describeCreateTableSql = this.QueryGenerator.describeCreateTableQuery(tableName);\n  let createTableSql;\n\n  return this.sequelize.query(describeCreateTableSql, options)\n    .then(constraints => {\n      const sql = constraints[0].sql;\n      const index = sql.length - 1;\n      //Replace ending ')' with constraint snippet - Simulates String.replaceAt\n      //http://stackoverflow.com/questions/1431094\n      createTableSql = sql.substr(0, index) +  `, ${constraintSnippet})` + sql.substr(index + 1) + ';';\n\n      return this.describeTable(tableName, options);\n    })\n    .then(fields => {\n      const sql = this.QueryGenerator._alterConstraintQuery(tableName, fields, createTableSql);\n      const subQueries = sql.split(';').filter(q => q !== '');\n\n      return Promise.each(subQueries, subQuery => this.sequelize.query(subQuery + ';', _.assign({raw: true}, options)));\n    });\n}\nexports.addConstraint = addConstraint;\n","map":{"mappings":[{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}}],"sources":{"../node_modules/sequelize/lib/dialects/sqlite/query-interface.js":"'use strict';\n\nconst _ = require('lodash');\nconst Promise = require('../../promise');\nconst UnknownConstraintError = require('../../errors').UnknownConstraintError;\n\n/**\n Returns an object that treats SQLite's inabilities to do certain queries.\n\n @class QueryInterface\n @static\n @private\n */\n\n/**\n  A wrapper that fixes SQLite's inability to remove columns from existing tables.\n  It will create a backup of the table, drop the table afterwards and create a\n  new table with the same name but without the obsolete column.\n\n  @method removeColumn\n  @for    QueryInterface\n\n  @param  {String} tableName     The name of the table.\n  @param  {String} attributeName The name of the attribute that we want to remove.\n  @param  {Object} options\n  @param  {Boolean|Function} [options.logging] A function that logs the sql queries, or false for explicitly not logging these queries\n\n  @since 1.6.0\n  @private\n */\nfunction removeColumn(tableName, attributeName, options) {\n  options = options || {};\n\n  return this.describeTable(tableName, options).then(fields => {\n    delete fields[attributeName];\n\n    const sql = this.QueryGenerator.removeColumnQuery(tableName, fields);\n    const subQueries = sql.split(';').filter(q => q !== '');\n\n    return Promise.each(subQueries, subQuery => this.sequelize.query(subQuery + ';', _.assign({raw: true}, options)));\n  });\n}\nexports.removeColumn = removeColumn;\n\n/**\n  A wrapper that fixes SQLite's inability to change columns from existing tables.\n  It will create a backup of the table, drop the table afterwards and create a\n  new table with the same name but with a modified version of the respective column.\n\n  @method changeColumn\n  @for    QueryInterface\n\n  @param  {String} tableName The name of the table.\n  @param  {Object} attributes An object with the attribute's name as key and its options as value object.\n  @param  {Object} options\n  @param  {Boolean|Function} [options.logging] A function that logs the sql queries, or false for explicitly not logging these queries\n\n  @since 1.6.0\n  @private\n */\nfunction changeColumn(tableName, attributes, options) {\n  const attributeName = Object.keys(attributes)[0];\n  options = options || {};\n\n  return this.describeTable(tableName, options).then(fields => {\n    fields[attributeName] = attributes[attributeName];\n\n    const sql = this.QueryGenerator.removeColumnQuery(tableName, fields);\n    const subQueries = sql.split(';').filter(q => q !== '');\n\n    return Promise.each(subQueries, subQuery => this.sequelize.query(subQuery + ';', _.assign({raw: true}, options)));\n  });\n}\nexports.changeColumn = changeColumn;\n\n/**\n  A wrapper that fixes SQLite's inability to rename columns from existing tables.\n  It will create a backup of the table, drop the table afterwards and create a\n  new table with the same name but with a renamed version of the respective column.\n\n  @method renameColumn\n  @for    QueryInterface\n\n  @param  {String} tableName The name of the table.\n  @param  {String} attrNameBefore The name of the attribute before it was renamed.\n  @param  {String} attrNameAfter The name of the attribute after it was renamed.\n  @param  {Object} options\n  @param  {Boolean|Function} [options.logging] A function that logs the sql queries, or false for explicitly not logging these queries\n\n  @since 1.6.0\n  @private\n */\nfunction renameColumn(tableName, attrNameBefore, attrNameAfter, options) {\n  options = options || {};\n\n  return this.describeTable(tableName, options).then(fields => {\n    fields[attrNameAfter] = _.clone(fields[attrNameBefore]);\n    delete fields[attrNameBefore];\n\n    const sql = this.QueryGenerator.renameColumnQuery(tableName, attrNameBefore, attrNameAfter, fields);\n    const subQueries = sql.split(';').filter(q => q !== '');\n\n    return Promise.each(subQueries, subQuery => this.sequelize.query(subQuery + ';', _.assign({raw: true}, options)));\n  });\n}\nexports.renameColumn = renameColumn;\n\nfunction removeConstraint(tableName, constraintName, options) {\n  let createTableSql;\n\n  return this.showConstraint(tableName, constraintName)\n    .then(constraints => {\n      const constraint = constraints[0];\n\n      if (constraint) {\n        createTableSql = constraint.sql;\n        constraint.constraintName = this.QueryGenerator.quoteIdentifier(constraint.constraintName);\n        let constraintSnippet = `, CONSTRAINT ${constraint.constraintName} ${constraint.constraintType} ${constraint.constraintCondition}`;\n\n        if (constraint.constraintType === 'FOREIGN KEY') {\n          const referenceTableName = this.QueryGenerator.quoteTable(constraint.referenceTableName);\n          constraint.referenceTableKeys = constraint.referenceTableKeys.map(columnName => this.QueryGenerator.quoteIdentifier(columnName));\n          const referenceTableKeys = constraint.referenceTableKeys.join(', ');\n          constraintSnippet += ` REFERENCES ${referenceTableName} (${referenceTableKeys})`;\n          constraintSnippet += ` ON UPDATE ${constraint.updateAction}`;\n          constraintSnippet += ` ON DELETE ${constraint.deleteAction}`;\n        }\n\n        createTableSql = createTableSql.replace(constraintSnippet, '');\n        createTableSql += ';';\n\n        return this.describeTable(tableName, options);\n      } else {\n        throw new UnknownConstraintError(`Constraint ${constraintName} on table ${tableName} does not exist`);\n      }\n    })\n    .then(fields => {\n      const sql = this.QueryGenerator._alterConstraintQuery(tableName, fields, createTableSql);\n      const subQueries = sql.split(';').filter(q => q !== '');\n\n      return Promise.each(subQueries, subQuery => this.sequelize.query(subQuery + ';', _.assign({raw: true}, options)));\n    });\n}\nexports.removeConstraint = removeConstraint;\n\nfunction addConstraint(tableName, options) {\n  const constraintSnippet = this.QueryGenerator.getConstraintSnippet(tableName, options);\n  const describeCreateTableSql = this.QueryGenerator.describeCreateTableQuery(tableName);\n  let createTableSql;\n\n  return this.sequelize.query(describeCreateTableSql, options)\n    .then(constraints => {\n      const sql = constraints[0].sql;\n      const index = sql.length - 1;\n      //Replace ending ')' with constraint snippet - Simulates String.replaceAt\n      //http://stackoverflow.com/questions/1431094\n      createTableSql = sql.substr(0, index) +  `, ${constraintSnippet})` + sql.substr(index + 1) + ';';\n\n      return this.describeTable(tableName, options);\n    })\n    .then(fields => {\n      const sql = this.QueryGenerator._alterConstraintQuery(tableName, fields, createTableSql);\n      const subQueries = sql.split(';').filter(q => q !== '');\n\n      return Promise.each(subQueries, subQuery => this.sequelize.query(subQuery + ';', _.assign({raw: true}, options)));\n    });\n}\nexports.addConstraint = addConstraint;\n"},"lineCount":169}},"hash":"252c734847fda2cd2928c8189aebeff5","cacheData":{"env":{}}}