{"dependencies":[{"name":"crypto","loc":{"line":3,"column":21}},{"name":"../utils","loc":{"line":4,"column":29}}],"generated":{"js":"\"use strict\";\n\nvar crypto = require('crypto');\nvar passwordDigest = require('../utils').passwordDigest;\nvar validPasswordTypes = ['PasswordDigest', 'PasswordText'];\n\nfunction WSSecurity(username, password, options) {\n  options = options || {};\n  this._username = username;\n  this._password = password;\n  //must account for backward compatibility for passwordType String param as well as object options defaults: passwordType = 'PasswordText', hasTimeStamp = true   \n  if (typeof options === 'string') {\n    this._passwordType = options ? options : 'PasswordText';\n    options = {};\n  } else {\n    this._passwordType = options.passwordType ? options.passwordType : 'PasswordText';\n  }\n\n  if (validPasswordTypes.indexOf(this._passwordType) === -1) {\n    this._passwordType = 'PasswordText';\n  }\n\n  this._hasTimeStamp = options.hasTimeStamp || typeof options.hasTimeStamp === 'boolean' ? !!options.hasTimeStamp : true;\n  /*jshint eqnull:true */\n  if (options.hasNonce != null) {\n    this._hasNonce = !!options.hasNonce;\n  }\n  this._hasTokenCreated = options.hasTokenCreated || typeof options.hasTokenCreated === 'boolean' ? !!options.hasTokenCreated : true;\n  if (options.actor != null) {\n    this._actor = options.actor;\n  }\n  if (options.mustUnderstand != null) {\n    this._mustUnderstand = !!options.mustUnderstand;\n  }\n}\n\nWSSecurity.prototype.toXML = function() {\n  // avoid dependency on date formatting libraries\n  function getDate(d) {\n    function pad(n) {\n      return n < 10 ? '0' + n : n;\n    }\n    return d.getUTCFullYear() + '-'\n      + pad(d.getUTCMonth() + 1) + '-'\n      + pad(d.getUTCDate()) + 'T'\n      + pad(d.getUTCHours()) + ':'\n      + pad(d.getUTCMinutes()) + ':'\n      + pad(d.getUTCSeconds()) + 'Z';\n  }\n  var now = new Date();\n  var created = getDate(now);\n  var timeStampXml = '';\n  if (this._hasTimeStamp) {\n    var expires = getDate( new Date(now.getTime() + (1000 * 600)) );\n    timeStampXml = \"<wsu:Timestamp wsu:Id=\\\"Timestamp-\"+created+\"\\\">\" +\n      \"<wsu:Created>\"+created+\"</wsu:Created>\" +\n      \"<wsu:Expires>\"+expires+\"</wsu:Expires>\" +\n      \"</wsu:Timestamp>\";\n  }\n\n  var password, nonce;\n  if (this._hasNonce || this._passwordType !== 'PasswordText') {\n    // nonce = base64 ( sha1 ( created + random ) )\n    var nHash = crypto.createHash('sha1');\n    nHash.update(created + Math.random());\n    nonce = nHash.digest('base64');\n  }\n  if (this._passwordType === 'PasswordText') {\n    password = \"<wsse:Password Type=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText\\\">\" + this._password + \"</wsse:Password>\";\n    if (nonce) {\n      password += \"<wsse:Nonce EncodingType=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary\\\">\" + nonce + \"</wsse:Nonce>\";\n    }\n  } else {\n    password = \"<wsse:Password Type=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordDigest\\\">\" + passwordDigest(nonce, created, this._password) + \"</wsse:Password>\" +\n      \"<wsse:Nonce EncodingType=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary\\\">\" + nonce + \"</wsse:Nonce>\";\n  }\n\n  return \"<wsse:Security \" + (this._actor ? \"soap:actor=\\\"\" + this._actor + \"\\\" \" : \"\") +\n    (this._mustUnderstand ? \"soap:mustUnderstand=\\\"1\\\" \" : \"\") +\n    \"xmlns:wsse=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\\\" xmlns:wsu=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\\\">\" +\n    timeStampXml +\n    \"<wsse:UsernameToken xmlns:wsu=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\\\" wsu:Id=\\\"SecurityToken-\" + created + \"\\\">\" +\n    \"<wsse:Username>\" + this._username + \"</wsse:Username>\" +\n    password +\n    (this._hasTokenCreated ? \"<wsu:Created>\" + created + \"</wsu:Created>\" : \"\") +\n    \"</wsse:UsernameToken>\" +\n    \"</wsse:Security>\";\n};\n\nmodule.exports = WSSecurity;\n","map":{"mappings":[{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/soap/lib/security/WSSecurity.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}}],"sources":{"../node_modules/soap/lib/security/WSSecurity.js":"\"use strict\";\n\nvar crypto = require('crypto');\nvar passwordDigest = require('../utils').passwordDigest;\nvar validPasswordTypes = ['PasswordDigest', 'PasswordText'];\n\nfunction WSSecurity(username, password, options) {\n  options = options || {};\n  this._username = username;\n  this._password = password;\n  //must account for backward compatibility for passwordType String param as well as object options defaults: passwordType = 'PasswordText', hasTimeStamp = true   \n  if (typeof options === 'string') {\n    this._passwordType = options ? options : 'PasswordText';\n    options = {};\n  } else {\n    this._passwordType = options.passwordType ? options.passwordType : 'PasswordText';\n  }\n\n  if (validPasswordTypes.indexOf(this._passwordType) === -1) {\n    this._passwordType = 'PasswordText';\n  }\n\n  this._hasTimeStamp = options.hasTimeStamp || typeof options.hasTimeStamp === 'boolean' ? !!options.hasTimeStamp : true;\n  /*jshint eqnull:true */\n  if (options.hasNonce != null) {\n    this._hasNonce = !!options.hasNonce;\n  }\n  this._hasTokenCreated = options.hasTokenCreated || typeof options.hasTokenCreated === 'boolean' ? !!options.hasTokenCreated : true;\n  if (options.actor != null) {\n    this._actor = options.actor;\n  }\n  if (options.mustUnderstand != null) {\n    this._mustUnderstand = !!options.mustUnderstand;\n  }\n}\n\nWSSecurity.prototype.toXML = function() {\n  // avoid dependency on date formatting libraries\n  function getDate(d) {\n    function pad(n) {\n      return n < 10 ? '0' + n : n;\n    }\n    return d.getUTCFullYear() + '-'\n      + pad(d.getUTCMonth() + 1) + '-'\n      + pad(d.getUTCDate()) + 'T'\n      + pad(d.getUTCHours()) + ':'\n      + pad(d.getUTCMinutes()) + ':'\n      + pad(d.getUTCSeconds()) + 'Z';\n  }\n  var now = new Date();\n  var created = getDate(now);\n  var timeStampXml = '';\n  if (this._hasTimeStamp) {\n    var expires = getDate( new Date(now.getTime() + (1000 * 600)) );\n    timeStampXml = \"<wsu:Timestamp wsu:Id=\\\"Timestamp-\"+created+\"\\\">\" +\n      \"<wsu:Created>\"+created+\"</wsu:Created>\" +\n      \"<wsu:Expires>\"+expires+\"</wsu:Expires>\" +\n      \"</wsu:Timestamp>\";\n  }\n\n  var password, nonce;\n  if (this._hasNonce || this._passwordType !== 'PasswordText') {\n    // nonce = base64 ( sha1 ( created + random ) )\n    var nHash = crypto.createHash('sha1');\n    nHash.update(created + Math.random());\n    nonce = nHash.digest('base64');\n  }\n  if (this._passwordType === 'PasswordText') {\n    password = \"<wsse:Password Type=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText\\\">\" + this._password + \"</wsse:Password>\";\n    if (nonce) {\n      password += \"<wsse:Nonce EncodingType=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary\\\">\" + nonce + \"</wsse:Nonce>\";\n    }\n  } else {\n    password = \"<wsse:Password Type=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordDigest\\\">\" + passwordDigest(nonce, created, this._password) + \"</wsse:Password>\" +\n      \"<wsse:Nonce EncodingType=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary\\\">\" + nonce + \"</wsse:Nonce>\";\n  }\n\n  return \"<wsse:Security \" + (this._actor ? \"soap:actor=\\\"\" + this._actor + \"\\\" \" : \"\") +\n    (this._mustUnderstand ? \"soap:mustUnderstand=\\\"1\\\" \" : \"\") +\n    \"xmlns:wsse=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\\\" xmlns:wsu=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\\\">\" +\n    timeStampXml +\n    \"<wsse:UsernameToken xmlns:wsu=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\\\" wsu:Id=\\\"SecurityToken-\" + created + \"\\\">\" +\n    \"<wsse:Username>\" + this._username + \"</wsse:Username>\" +\n    password +\n    (this._hasTokenCreated ? \"<wsu:Created>\" + created + \"</wsu:Created>\" : \"\") +\n    \"</wsse:UsernameToken>\" +\n    \"</wsse:Security>\";\n};\n\nmodule.exports = WSSecurity;\n"},"lineCount":91}},"hash":"b4af7c37d6b00e78aa8b1ff7f0291369","cacheData":{"env":{}}}