{"dependencies":[{"name":"./pad-string","loc":{"line":2,"column":27}},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n\"use strict\";\nvar pad_string_1 = require(\"./pad-string\");\nfunction encode(input, encoding) {\n    if (encoding === void 0) { encoding = \"utf8\"; }\n    if (Buffer.isBuffer(input)) {\n        return fromBase64(input.toString(\"base64\"));\n    }\n    return fromBase64(new Buffer(input, encoding).toString(\"base64\"));\n}\n;\nfunction decode(base64url, encoding) {\n    if (encoding === void 0) { encoding = \"utf8\"; }\n    return new Buffer(toBase64(base64url), \"base64\").toString(encoding);\n}\nfunction toBase64(base64url) {\n    base64url = base64url.toString();\n    return pad_string_1.default(base64url)\n        .replace(/\\-/g, \"+\")\n        .replace(/_/g, \"/\");\n}\nfunction fromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction toBuffer(base64url) {\n    return new Buffer(toBase64(base64url), \"base64\");\n}\nvar base64url = encode;\nbase64url.encode = encode;\nbase64url.decode = decode;\nbase64url.toBase64 = toBase64;\nbase64url.fromBase64 = fromBase64;\nbase64url.toBuffer = toBuffer;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = base64url;\n","map":{"mappings":[{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/base64url/dist/base64url.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}}],"sources":{"../node_modules/base64url/dist/base64url.js":"\"use strict\";\nvar pad_string_1 = require(\"./pad-string\");\nfunction encode(input, encoding) {\n    if (encoding === void 0) { encoding = \"utf8\"; }\n    if (Buffer.isBuffer(input)) {\n        return fromBase64(input.toString(\"base64\"));\n    }\n    return fromBase64(new Buffer(input, encoding).toString(\"base64\"));\n}\n;\nfunction decode(base64url, encoding) {\n    if (encoding === void 0) { encoding = \"utf8\"; }\n    return new Buffer(toBase64(base64url), \"base64\").toString(encoding);\n}\nfunction toBase64(base64url) {\n    base64url = base64url.toString();\n    return pad_string_1.default(base64url)\n        .replace(/\\-/g, \"+\")\n        .replace(/_/g, \"/\");\n}\nfunction fromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction toBuffer(base64url) {\n    return new Buffer(toBase64(base64url), \"base64\");\n}\nvar base64url = encode;\nbase64url.encode = encode;\nbase64url.decode = decode;\nbase64url.toBase64 = toBase64;\nbase64url.fromBase64 = fromBase64;\nbase64url.toBuffer = toBuffer;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = base64url;\n"},"lineCount":39}},"hash":"b72304cd63afb12bb9d8168f695180c0","cacheData":{"env":{}}}