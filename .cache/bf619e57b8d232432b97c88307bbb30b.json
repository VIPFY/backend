{"dependencies":[{"name":"../../utils","loc":{"line":3,"column":22}},{"name":"../abstract/query","loc":{"line":5,"column":30}},{"name":"uuid","loc":{"line":6,"column":21}},{"name":"../../errors.js","loc":{"line":7,"column":32}},{"name":"lodash","loc":{"line":8,"column":18}}],"generated":{"js":"'use strict';\n\nconst Utils = require('../../utils');\nconst debug = Utils.getLogger().debugContext('sql:mysql');\nconst AbstractQuery = require('../abstract/query');\nconst uuid = require('uuid');\nconst sequelizeErrors = require('../../errors.js');\nconst _ = require('lodash');\n\nclass Query extends AbstractQuery {\n  constructor(connection, sequelize, options) {\n    super();\n    this.connection = connection;\n    this.instance = options.instance;\n    this.model = options.model;\n    this.sequelize = sequelize;\n    this.uuid = uuid.v4();\n    this.options = _.extend({\n      logging: console.log,\n      plain: false,\n      raw: false,\n      showWarnings: false\n    }, options || {});\n\n    this.checkLoggingOption();\n  }\n\n  run(sql) {\n    this.sql = sql;\n\n    //do we need benchmark for this query execution\n    const benchmark = this.sequelize.options.benchmark || this.options.benchmark;\n    const showWarnings = this.sequelize.options.showWarnings || this.options.showWarnings;\n\n    let queryBegin;\n    if (benchmark) {\n      queryBegin = Date.now();\n    } else {\n      this.sequelize.log('Executing (' + (this.connection.uuid || 'default') + '): ' + this.sql, this.options);\n    }\n\n    debug(`executing(${this.connection.uuid || 'default'}) : ${this.sql}`);\n\n    return new Utils.Promise((resolve, reject) => {\n      this.connection.query({ sql: this.sql }, (err, results) => {\n        debug(`executed(${this.connection.uuid || 'default'}) : ${this.sql}`);\n\n        if (benchmark) {\n          this.sequelize.log('Executed (' + (this.connection.uuid || 'default') + '): ' + this.sql, Date.now() - queryBegin, this.options);\n        }\n\n        if (err) {\n          err.sql = sql;\n\n          reject(this.formatError(err));\n        } else {\n          resolve(results);\n        }\n      }).setMaxListeners(100);\n    })\n    // Log warnings if we've got them.\n      .then(results => {\n        if (showWarnings && results && results.warningStatus > 0) {\n          return this.logWarnings(results);\n        }\n        return results;\n      })\n    // Return formatted results...\n      .then(results => this.formatResults(results));\n  }\n\n  /**\n   * High level function that handles the results of a query execution.\n   *\n   *\n   * Example:\n   *  query.formatResults([\n   *    {\n   *      id: 1,              // this is from the main table\n   *      attr2: 'snafu',     // this is from the main table\n   *      Tasks.id: 1,        // this is from the associated table\n   *      Tasks.title: 'task' // this is from the associated table\n   *    }\n   *  ])\n   *\n   * @param {Array} data - The result of the query execution.\n   * @private\n   */\n  formatResults(data) {\n    let result = this.instance;\n\n    if (this.isInsertQuery(data)) {\n      this.handleInsertQuery(data);\n\n      if (!this.instance) {\n        // handle bulkCreate AI primiary key\n        if (\n          data.constructor.name === 'ResultSetHeader'\n          && this.model\n          && this.model.autoIncrementAttribute\n          && this.model.autoIncrementAttribute === this.model.primaryKeyAttribute\n          && this.model.rawAttributes[this.model.primaryKeyAttribute]\n        ) {\n          const startId = data[this.getInsertIdField()];\n          result = [];\n          for (let i = startId; i < startId + data.affectedRows; i++) {\n            result.push({ [this.model.rawAttributes[this.model.primaryKeyAttribute].field]: i });\n          }\n        } else {\n          result = data[this.getInsertIdField()];\n        }\n      }\n    }\n\n    if (this.isSelectQuery()) {\n      result = this.handleSelectQuery(data);\n    } else if (this.isShowTablesQuery()) {\n      result = this.handleShowTablesQuery(data);\n    } else if (this.isDescribeQuery()) {\n      result = {};\n\n      for (const _result of data) {\n        const enumRegex = /^enum/i;\n        result[_result.Field] = {\n          type: enumRegex.test(_result.Type) ? _result.Type.replace(enumRegex, 'ENUM') : _result.Type.toUpperCase(),\n          allowNull: _result.Null === 'YES',\n          defaultValue: _result.Default,\n          primaryKey: _result.Key === 'PRI'\n        };\n      }\n    } else if (this.isShowIndexesQuery()) {\n      result = this.handleShowIndexesQuery(data);\n\n    } else if (this.isCallQuery()) {\n      result = data[0];\n    } else if (this.isBulkUpdateQuery() || this.isBulkDeleteQuery() || this.isUpsertQuery()) {\n      result = data.affectedRows;\n    } else if (this.isVersionQuery()) {\n      result = data[0].version;\n    } else if (this.isForeignKeysQuery()) {\n      result = data;\n    } else if (this.isInsertQuery() || this.isUpdateQuery()) {\n      result = [result, data.affectedRows];\n    } else if (this.isShowConstraintsQuery()) {\n      result = data;\n    } else if (this.isRawQuery()) {\n      // MySQL returns row data and metadata (affected rows etc) in a single object - let's standarize it, sorta\n      result = [data, data];\n    }\n\n    return result;\n  }\n\n  logWarnings(results) {\n    return this.run('SHOW WARNINGS').then(warningResults => {\n      const warningMessage = 'MySQL Warnings (' + (this.connection.uuid||'default') + '): ';\n      const messages = [];\n      for (const _warningRow of warningResults) {\n        for (const _warningResult of _warningRow) {\n          if (_warningResult.hasOwnProperty('Message')) {\n            messages.push(_warningResult.Message);\n          } else {\n            for (const _objectKey of _warningResult.keys()) {\n              messages.push([_objectKey, _warningResult[_objectKey]].join(': '));\n            }\n          }\n        }\n      }\n\n      this.sequelize.log(warningMessage + messages.join('; '), this.options);\n\n      return results;\n    });\n  }\n\n  formatError(err) {\n    const errCode = err.errno || err.code;\n\n    switch (errCode) {\n      case 1062: {\n        const match = err.message.match(/Duplicate entry '(.*)' for key '?((.|\\s)*?)'?$/);\n\n        let fields = {};\n        let message = 'Validation error';\n        const values = match ? match[1].split('-') : undefined;\n        const uniqueKey = this.model && this.model.uniqueKeys[match[2]];\n\n        if (uniqueKey) {\n          if (uniqueKey.msg) message = uniqueKey.msg;\n          fields = _.zipObject(uniqueKey.fields, values);\n        } else {\n          fields[match[2]] = match[1];\n        }\n\n        const errors = [];\n        _.forOwn(fields, (value, field) => {\n          errors.push(new sequelizeErrors.ValidationErrorItem(\n            this.getUniqueConstraintErrorMessage(field),\n            'unique violation', // sequelizeErrors.ValidationErrorItem.Origins.DB,\n            field,\n            value,\n            this.instance,\n            'not_unique'\n          ));\n        });\n\n        return new sequelizeErrors.UniqueConstraintError({message, errors, parent: err, fields});\n      }\n\n      case 1451:\n      case 1452: {\n        // e.g. CONSTRAINT `example_constraint_name` FOREIGN KEY (`example_id`) REFERENCES `examples` (`id`)\n        const match  = err.message.match(/CONSTRAINT ([`\"])(.*)\\1 FOREIGN KEY \\(\\1(.*)\\1\\) REFERENCES \\1(.*)\\1 \\(\\1(.*)\\1\\)/);\n        const quoteChar = match ? match[1] : '`';\n        const fields = match ? match[3].split(new RegExp(`${quoteChar}, *${quoteChar}`)) : undefined;\n\n        return new sequelizeErrors.ForeignKeyConstraintError({\n          reltype: String(errCode) === '1451' ? 'parent' : 'child',\n          table: match ? match[4] : undefined,\n          fields,\n          value: fields && fields.length && this.instance && this.instance[fields[0]] || undefined,\n          index: match ? match[2] : undefined,\n          parent: err\n        });\n      }\n\n      default:\n        return new sequelizeErrors.DatabaseError(err);\n    }\n  }\n\n  handleShowIndexesQuery(data) {\n    // Group by index name, and collect all fields\n    data = _.reduce(data, (acc, item) => {\n      if (!(item.Key_name in acc)) {\n        acc[item.Key_name] = item;\n        item.fields = [];\n      }\n\n      acc[item.Key_name].fields[item.Seq_in_index - 1] = {\n        attribute: item.Column_name,\n        length: item.Sub_part || undefined,\n        order: item.Collation === 'A' ? 'ASC' : undefined\n      };\n      delete item.column_name;\n\n      return acc;\n    }, {});\n\n    return _.map(data, item => ({\n      primary: item.Key_name === 'PRIMARY',\n      fields: item.fields,\n      name: item.Key_name,\n      tableName: item.Table,\n      unique: item.Non_unique !== 1,\n      type: item.Index_type\n    }));\n  }\n}\n\nmodule.exports = Query;\nmodule.exports.Query = Query;\nmodule.exports.default = Query;\n","map":{"mappings":[{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/sequelize/lib/dialects/mysql/query.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}}],"sources":{"../node_modules/sequelize/lib/dialects/mysql/query.js":"'use strict';\n\nconst Utils = require('../../utils');\nconst debug = Utils.getLogger().debugContext('sql:mysql');\nconst AbstractQuery = require('../abstract/query');\nconst uuid = require('uuid');\nconst sequelizeErrors = require('../../errors.js');\nconst _ = require('lodash');\n\nclass Query extends AbstractQuery {\n  constructor(connection, sequelize, options) {\n    super();\n    this.connection = connection;\n    this.instance = options.instance;\n    this.model = options.model;\n    this.sequelize = sequelize;\n    this.uuid = uuid.v4();\n    this.options = _.extend({\n      logging: console.log,\n      plain: false,\n      raw: false,\n      showWarnings: false\n    }, options || {});\n\n    this.checkLoggingOption();\n  }\n\n  run(sql) {\n    this.sql = sql;\n\n    //do we need benchmark for this query execution\n    const benchmark = this.sequelize.options.benchmark || this.options.benchmark;\n    const showWarnings = this.sequelize.options.showWarnings || this.options.showWarnings;\n\n    let queryBegin;\n    if (benchmark) {\n      queryBegin = Date.now();\n    } else {\n      this.sequelize.log('Executing (' + (this.connection.uuid || 'default') + '): ' + this.sql, this.options);\n    }\n\n    debug(`executing(${this.connection.uuid || 'default'}) : ${this.sql}`);\n\n    return new Utils.Promise((resolve, reject) => {\n      this.connection.query({ sql: this.sql }, (err, results) => {\n        debug(`executed(${this.connection.uuid || 'default'}) : ${this.sql}`);\n\n        if (benchmark) {\n          this.sequelize.log('Executed (' + (this.connection.uuid || 'default') + '): ' + this.sql, Date.now() - queryBegin, this.options);\n        }\n\n        if (err) {\n          err.sql = sql;\n\n          reject(this.formatError(err));\n        } else {\n          resolve(results);\n        }\n      }).setMaxListeners(100);\n    })\n    // Log warnings if we've got them.\n      .then(results => {\n        if (showWarnings && results && results.warningStatus > 0) {\n          return this.logWarnings(results);\n        }\n        return results;\n      })\n    // Return formatted results...\n      .then(results => this.formatResults(results));\n  }\n\n  /**\n   * High level function that handles the results of a query execution.\n   *\n   *\n   * Example:\n   *  query.formatResults([\n   *    {\n   *      id: 1,              // this is from the main table\n   *      attr2: 'snafu',     // this is from the main table\n   *      Tasks.id: 1,        // this is from the associated table\n   *      Tasks.title: 'task' // this is from the associated table\n   *    }\n   *  ])\n   *\n   * @param {Array} data - The result of the query execution.\n   * @private\n   */\n  formatResults(data) {\n    let result = this.instance;\n\n    if (this.isInsertQuery(data)) {\n      this.handleInsertQuery(data);\n\n      if (!this.instance) {\n        // handle bulkCreate AI primiary key\n        if (\n          data.constructor.name === 'ResultSetHeader'\n          && this.model\n          && this.model.autoIncrementAttribute\n          && this.model.autoIncrementAttribute === this.model.primaryKeyAttribute\n          && this.model.rawAttributes[this.model.primaryKeyAttribute]\n        ) {\n          const startId = data[this.getInsertIdField()];\n          result = [];\n          for (let i = startId; i < startId + data.affectedRows; i++) {\n            result.push({ [this.model.rawAttributes[this.model.primaryKeyAttribute].field]: i });\n          }\n        } else {\n          result = data[this.getInsertIdField()];\n        }\n      }\n    }\n\n    if (this.isSelectQuery()) {\n      result = this.handleSelectQuery(data);\n    } else if (this.isShowTablesQuery()) {\n      result = this.handleShowTablesQuery(data);\n    } else if (this.isDescribeQuery()) {\n      result = {};\n\n      for (const _result of data) {\n        const enumRegex = /^enum/i;\n        result[_result.Field] = {\n          type: enumRegex.test(_result.Type) ? _result.Type.replace(enumRegex, 'ENUM') : _result.Type.toUpperCase(),\n          allowNull: _result.Null === 'YES',\n          defaultValue: _result.Default,\n          primaryKey: _result.Key === 'PRI'\n        };\n      }\n    } else if (this.isShowIndexesQuery()) {\n      result = this.handleShowIndexesQuery(data);\n\n    } else if (this.isCallQuery()) {\n      result = data[0];\n    } else if (this.isBulkUpdateQuery() || this.isBulkDeleteQuery() || this.isUpsertQuery()) {\n      result = data.affectedRows;\n    } else if (this.isVersionQuery()) {\n      result = data[0].version;\n    } else if (this.isForeignKeysQuery()) {\n      result = data;\n    } else if (this.isInsertQuery() || this.isUpdateQuery()) {\n      result = [result, data.affectedRows];\n    } else if (this.isShowConstraintsQuery()) {\n      result = data;\n    } else if (this.isRawQuery()) {\n      // MySQL returns row data and metadata (affected rows etc) in a single object - let's standarize it, sorta\n      result = [data, data];\n    }\n\n    return result;\n  }\n\n  logWarnings(results) {\n    return this.run('SHOW WARNINGS').then(warningResults => {\n      const warningMessage = 'MySQL Warnings (' + (this.connection.uuid||'default') + '): ';\n      const messages = [];\n      for (const _warningRow of warningResults) {\n        for (const _warningResult of _warningRow) {\n          if (_warningResult.hasOwnProperty('Message')) {\n            messages.push(_warningResult.Message);\n          } else {\n            for (const _objectKey of _warningResult.keys()) {\n              messages.push([_objectKey, _warningResult[_objectKey]].join(': '));\n            }\n          }\n        }\n      }\n\n      this.sequelize.log(warningMessage + messages.join('; '), this.options);\n\n      return results;\n    });\n  }\n\n  formatError(err) {\n    const errCode = err.errno || err.code;\n\n    switch (errCode) {\n      case 1062: {\n        const match = err.message.match(/Duplicate entry '(.*)' for key '?((.|\\s)*?)'?$/);\n\n        let fields = {};\n        let message = 'Validation error';\n        const values = match ? match[1].split('-') : undefined;\n        const uniqueKey = this.model && this.model.uniqueKeys[match[2]];\n\n        if (uniqueKey) {\n          if (uniqueKey.msg) message = uniqueKey.msg;\n          fields = _.zipObject(uniqueKey.fields, values);\n        } else {\n          fields[match[2]] = match[1];\n        }\n\n        const errors = [];\n        _.forOwn(fields, (value, field) => {\n          errors.push(new sequelizeErrors.ValidationErrorItem(\n            this.getUniqueConstraintErrorMessage(field),\n            'unique violation', // sequelizeErrors.ValidationErrorItem.Origins.DB,\n            field,\n            value,\n            this.instance,\n            'not_unique'\n          ));\n        });\n\n        return new sequelizeErrors.UniqueConstraintError({message, errors, parent: err, fields});\n      }\n\n      case 1451:\n      case 1452: {\n        // e.g. CONSTRAINT `example_constraint_name` FOREIGN KEY (`example_id`) REFERENCES `examples` (`id`)\n        const match  = err.message.match(/CONSTRAINT ([`\"])(.*)\\1 FOREIGN KEY \\(\\1(.*)\\1\\) REFERENCES \\1(.*)\\1 \\(\\1(.*)\\1\\)/);\n        const quoteChar = match ? match[1] : '`';\n        const fields = match ? match[3].split(new RegExp(`${quoteChar}, *${quoteChar}`)) : undefined;\n\n        return new sequelizeErrors.ForeignKeyConstraintError({\n          reltype: String(errCode) === '1451' ? 'parent' : 'child',\n          table: match ? match[4] : undefined,\n          fields,\n          value: fields && fields.length && this.instance && this.instance[fields[0]] || undefined,\n          index: match ? match[2] : undefined,\n          parent: err\n        });\n      }\n\n      default:\n        return new sequelizeErrors.DatabaseError(err);\n    }\n  }\n\n  handleShowIndexesQuery(data) {\n    // Group by index name, and collect all fields\n    data = _.reduce(data, (acc, item) => {\n      if (!(item.Key_name in acc)) {\n        acc[item.Key_name] = item;\n        item.fields = [];\n      }\n\n      acc[item.Key_name].fields[item.Seq_in_index - 1] = {\n        attribute: item.Column_name,\n        length: item.Sub_part || undefined,\n        order: item.Collation === 'A' ? 'ASC' : undefined\n      };\n      delete item.column_name;\n\n      return acc;\n    }, {});\n\n    return _.map(data, item => ({\n      primary: item.Key_name === 'PRIMARY',\n      fields: item.fields,\n      name: item.Key_name,\n      tableName: item.Table,\n      unique: item.Non_unique !== 1,\n      type: item.Index_type\n    }));\n  }\n}\n\nmodule.exports = Query;\nmodule.exports.Query = Query;\nmodule.exports.default = Query;\n"},"lineCount":264}},"hash":"8d184490f65c84f0a55780792076e7cd","cacheData":{"env":{}}}