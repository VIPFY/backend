{"dependencies":[{"name":"./util/merge","loc":{"line":8,"column":21}},{"name":"./util/assertString","loc":{"line":12,"column":28}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isCurrency;\n\nvar _merge = require('./util/merge');\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction currencyRegex(options) {\n  var decimal_digits = '\\\\d{' + options.digits_after_decimal[0] + '}';\n  options.digits_after_decimal.forEach(function (digit, index) {\n    if (index !== 0) decimal_digits = decimal_digits + '|\\\\d{' + digit + '}';\n  });\n  var symbol = '(\\\\' + options.symbol.replace(/\\./g, '\\\\.') + ')' + (options.require_symbol ? '' : '?'),\n      negative = '-?',\n      whole_dollar_amount_without_sep = '[1-9]\\\\d*',\n      whole_dollar_amount_with_sep = '[1-9]\\\\d{0,2}(\\\\' + options.thousands_separator + '\\\\d{3})*',\n      valid_whole_dollar_amounts = ['0', whole_dollar_amount_without_sep, whole_dollar_amount_with_sep],\n      whole_dollar_amount = '(' + valid_whole_dollar_amounts.join('|') + ')?',\n      decimal_amount = '(\\\\' + options.decimal_separator + '(' + decimal_digits + '))' + (options.require_decimal ? '' : '?');\n  var pattern = whole_dollar_amount + (options.allow_decimal || options.require_decimal ? decimal_amount : '');\n\n  // default is negative sign before symbol, but there are two other options (besides parens)\n  if (options.allow_negatives && !options.parens_for_negatives) {\n    if (options.negative_sign_after_digits) {\n      pattern += negative;\n    } else if (options.negative_sign_before_digits) {\n      pattern = negative + pattern;\n    }\n  }\n\n  // South African Rand, for example, uses R 123 (space) and R-123 (no space)\n  if (options.allow_negative_sign_placeholder) {\n    pattern = '( (?!\\\\-))?' + pattern;\n  } else if (options.allow_space_after_symbol) {\n    pattern = ' ?' + pattern;\n  } else if (options.allow_space_after_digits) {\n    pattern += '( (?!$))?';\n  }\n\n  if (options.symbol_after_digits) {\n    pattern += symbol;\n  } else {\n    pattern = symbol + pattern;\n  }\n\n  if (options.allow_negatives) {\n    if (options.parens_for_negatives) {\n      pattern = '(\\\\(' + pattern + '\\\\)|' + pattern + ')';\n    } else if (!(options.negative_sign_before_digits || options.negative_sign_after_digits)) {\n      pattern = negative + pattern;\n    }\n  }\n\n  // ensure there's a dollar and/or decimal amount, and that\n  // it doesn't start with a space or a negative sign followed by a space\n  return new RegExp('^(?!-? )(?=.*\\\\d)' + pattern + '$');\n}\n\nvar default_currency_options = {\n  symbol: '$',\n  require_symbol: false,\n  allow_space_after_symbol: false,\n  symbol_after_digits: false,\n  allow_negatives: true,\n  parens_for_negatives: false,\n  negative_sign_before_digits: false,\n  negative_sign_after_digits: false,\n  allow_negative_sign_placeholder: false,\n  thousands_separator: ',',\n  decimal_separator: '.',\n  allow_decimal: true,\n  require_decimal: false,\n  digits_after_decimal: [2],\n  allow_space_after_digits: false\n};\n\nfunction isCurrency(str, options) {\n  (0, _assertString2.default)(str);\n  options = (0, _merge2.default)(options, default_currency_options);\n  return currencyRegex(options).test(str);\n}\nmodule.exports = exports['default'];","map":{"mappings":[{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/validator/lib/isCurrency.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}}],"sources":{"../node_modules/validator/lib/isCurrency.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isCurrency;\n\nvar _merge = require('./util/merge');\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction currencyRegex(options) {\n  var decimal_digits = '\\\\d{' + options.digits_after_decimal[0] + '}';\n  options.digits_after_decimal.forEach(function (digit, index) {\n    if (index !== 0) decimal_digits = decimal_digits + '|\\\\d{' + digit + '}';\n  });\n  var symbol = '(\\\\' + options.symbol.replace(/\\./g, '\\\\.') + ')' + (options.require_symbol ? '' : '?'),\n      negative = '-?',\n      whole_dollar_amount_without_sep = '[1-9]\\\\d*',\n      whole_dollar_amount_with_sep = '[1-9]\\\\d{0,2}(\\\\' + options.thousands_separator + '\\\\d{3})*',\n      valid_whole_dollar_amounts = ['0', whole_dollar_amount_without_sep, whole_dollar_amount_with_sep],\n      whole_dollar_amount = '(' + valid_whole_dollar_amounts.join('|') + ')?',\n      decimal_amount = '(\\\\' + options.decimal_separator + '(' + decimal_digits + '))' + (options.require_decimal ? '' : '?');\n  var pattern = whole_dollar_amount + (options.allow_decimal || options.require_decimal ? decimal_amount : '');\n\n  // default is negative sign before symbol, but there are two other options (besides parens)\n  if (options.allow_negatives && !options.parens_for_negatives) {\n    if (options.negative_sign_after_digits) {\n      pattern += negative;\n    } else if (options.negative_sign_before_digits) {\n      pattern = negative + pattern;\n    }\n  }\n\n  // South African Rand, for example, uses R 123 (space) and R-123 (no space)\n  if (options.allow_negative_sign_placeholder) {\n    pattern = '( (?!\\\\-))?' + pattern;\n  } else if (options.allow_space_after_symbol) {\n    pattern = ' ?' + pattern;\n  } else if (options.allow_space_after_digits) {\n    pattern += '( (?!$))?';\n  }\n\n  if (options.symbol_after_digits) {\n    pattern += symbol;\n  } else {\n    pattern = symbol + pattern;\n  }\n\n  if (options.allow_negatives) {\n    if (options.parens_for_negatives) {\n      pattern = '(\\\\(' + pattern + '\\\\)|' + pattern + ')';\n    } else if (!(options.negative_sign_before_digits || options.negative_sign_after_digits)) {\n      pattern = negative + pattern;\n    }\n  }\n\n  // ensure there's a dollar and/or decimal amount, and that\n  // it doesn't start with a space or a negative sign followed by a space\n  return new RegExp('^(?!-? )(?=.*\\\\d)' + pattern + '$');\n}\n\nvar default_currency_options = {\n  symbol: '$',\n  require_symbol: false,\n  allow_space_after_symbol: false,\n  symbol_after_digits: false,\n  allow_negatives: true,\n  parens_for_negatives: false,\n  negative_sign_before_digits: false,\n  negative_sign_after_digits: false,\n  allow_negative_sign_placeholder: false,\n  thousands_separator: ',',\n  decimal_separator: '.',\n  allow_decimal: true,\n  require_decimal: false,\n  digits_after_decimal: [2],\n  allow_space_after_digits: false\n};\n\nfunction isCurrency(str, options) {\n  (0, _assertString2.default)(str);\n  options = (0, _merge2.default)(options, default_currency_options);\n  return currencyRegex(options).test(str);\n}\nmodule.exports = exports['default'];"},"lineCount":92}},"hash":"7f99ef84b6af83c22f72974c80b00869","cacheData":{"env":{}}}