{"dependencies":[{"name":"events","loc":{"line":3,"column":29}},{"name":"./factoryValidator","loc":{"line":5,"column":33}},{"name":"./PoolOptions","loc":{"line":6,"column":28}},{"name":"./ResourceRequest","loc":{"line":7,"column":32}},{"name":"./ResourceLoan","loc":{"line":8,"column":29}},{"name":"./PooledResource","loc":{"line":9,"column":31}},{"name":"./utils","loc":{"line":11,"column":26}}],"generated":{"js":"'use strict'\n\nconst EventEmitter = require('events').EventEmitter\n\nconst factoryValidator = require('./factoryValidator')\nconst PoolOptions = require('./PoolOptions')\nconst ResourceRequest = require('./ResourceRequest')\nconst ResourceLoan = require('./ResourceLoan')\nconst PooledResource = require('./PooledResource')\n\nconst reflector = require('./utils').reflector\n\n/**\n * TODO: move me\n */\nconst FACTORY_CREATE_ERROR = 'factoryCreateError'\nconst FACTORY_DESTROY_ERROR = 'factoryDestroyError'\n\nclass Pool extends EventEmitter {\n\n  /**\n   * Generate an Object pool with a specified `factory` and `config`.\n   *\n   * @param {Object} factory\n   *   Factory to be used for generating and destroying the items.\n   * @param {Function} factory.create\n   *   Should create the item to be acquired,\n   *   and call it's first callback argument with the generated item as it's argument.\n   * @param {Function} factory.destroy\n   *   Should gently close any resources that the item is using.\n   *   Called before the items is destroyed.\n   * @param {Function} factory.validate\n   *   Test if a resource is still valid .Should return a promise that resolves to a boolean, true if resource is still valid and false\n   *   If it should be removed from pool.\n   */\n  constructor (Evictor, Deque, PriorityQueue, factory, options) {\n    super()\n\n    factoryValidator(factory)\n\n    this._config = new PoolOptions(options)\n\n    // TODO: fix up this ugly glue-ing\n    this._Promise = this._config.Promise\n\n    this._factory = factory\n    this._draining = false\n    this._started = false\n    /**\n     * Holds waiting clients\n     * @type {PriorityQueue}\n     */\n    this._waitingClientsQueue = new PriorityQueue(this._config.priorityRange)\n\n    /**\n     * Collection of promises for resource creation calls made by the pool to factory.create\n     * @type {Set}\n     */\n    this._factoryCreateOperations = new Set()\n\n    /**\n     * Collection of promises for resource destruction calls made by the pool to factory.destroy\n     * @type {Set}\n     */\n    this._factoryDestroyOperations = new Set()\n\n    /**\n     * A queue/stack of pooledResources awaiting acquisition\n     * TODO: replace with LinkedList backed array\n     * @type {Array}\n     */\n    this._availableObjects = new Deque()\n\n    /**\n     * Collection of references for any resource that are undergoing validation before being acquired\n     * @type {Set}\n     */\n    this._testOnBorrowResources = new Set()\n\n    /**\n     * Collection of references for any resource that are undergoing validation before being returned\n     * @type {Set}\n     */\n    this._testOnReturnResources = new Set()\n\n    /**\n     * Collection of promises for any validations currently in process\n     * @type {Set}\n     */\n    this._validationOperations = new Set()\n\n    /**\n     * All objects associated with this pool in any state (except destroyed)\n     * @type {PooledResourceCollection}\n     */\n    this._allObjects = new Set()\n\n    /**\n     * Loans keyed by the borrowed resource\n     * @type {Map}\n     */\n    this._resourceLoans = new Map()\n\n    /**\n     * Infinitely looping iterator over available object\n     * @type {DLLArrayIterator}\n     */\n    this._evictionIterator = this._availableObjects.iterator()\n\n    this._evictor = new Evictor()\n\n    /**\n     * handle for setTimeout for next eviction run\n     * @type {[type]}\n     */\n    this._scheduledEviction = null\n\n    // create initial resources (if factory.min > 0)\n    if (this._config.autostart === true) {\n      this.start()\n    }\n  }\n\n  _destroy (pooledResource) {\n    // FIXME: do we need another state for \"in destruction\"?\n    pooledResource.invalidate()\n    this._allObjects.delete(pooledResource)\n    // NOTE: this maybe very bad promise usage?\n    const destroyPromise = this._factory.destroy(pooledResource.obj)\n    const wrappedDestroyPromise = this._Promise.resolve(destroyPromise)\n\n    this._trackOperation(wrappedDestroyPromise, this._factoryDestroyOperations)\n    .catch((reason) => {\n      this.emit(FACTORY_DESTROY_ERROR, reason)\n    })\n\n    // TODO: maybe ensuring minimum pool size should live outside here\n    this._ensureMinimum()\n  }\n\n  /**\n   * Attempt to move an available resource into test and then onto a waiting client\n   * @return {Boolean} could we move an available resource into test\n   */\n  _testOnBorrow () {\n    if (this._availableObjects.length < 1) {\n      return false\n    }\n\n    const pooledResource = this._availableObjects.shift()\n    // Mark the resource as in test\n    pooledResource.test()\n    this._testOnBorrowResources.add(pooledResource)\n    const validationPromise = this._factory.validate(pooledResource.obj)\n    const wrappedValidationPromise = this._Promise.resolve(validationPromise)\n\n    this._trackOperation(wrappedValidationPromise, this._validationOperations)\n    .then((isValid) => {\n      this._testOnBorrowResources.delete(pooledResource)\n\n      if (isValid === false) {\n        pooledResource.invalidate()\n        this._destroy(pooledResource)\n        this._dispense()\n        return\n      }\n      this._dispatchPooledResourceToNextWaitingClient(pooledResource)\n    })\n\n    return true\n  }\n\n  /**\n   * Attempt to move an available resource to a waiting client\n   * @return {Boolean} [description]\n   */\n  _dispatchResource () {\n    if (this._availableObjects.length < 1) {\n      return false\n    }\n\n    const pooledResource = this._availableObjects.shift()\n    this._dispatchPooledResourceToNextWaitingClient(pooledResource)\n    return\n  }\n\n  /**\n   * Attempt to resolve an outstanding resource request using an available resource from\n   * the pool, or creating new ones\n   *\n   * @private\n   */\n  _dispense () {\n    /**\n     * Local variables for ease of reading/writing\n     * these don't (shouldn't) change across the execution of this fn\n     */\n    const numWaitingClients = this._waitingClientsQueue.length\n\n    // If there aren't any waiting requests then there is nothing to do\n    // so lets short-circuit\n    if (numWaitingClients < 1) {\n      return\n    }\n\n    const resourceShortfall = numWaitingClients - this._potentiallyAllocableResourceCount\n\n    const actualNumberOfResourcesToCreate = Math.min(this.spareResourceCapacity, resourceShortfall)\n    for (let i = 0; actualNumberOfResourcesToCreate > i; i++) {\n      this._createResource()\n    }\n\n    // If we are doing test-on-borrow see how many more resources need to be moved into test\n    // to help satisfy waitingClients\n    if (this._config.testOnBorrow === true) {\n      // how many available resources do we need to shift into test\n      const desiredNumberOfResourcesToMoveIntoTest = numWaitingClients - this._testOnBorrowResources.size\n      const actualNumberOfResourcesToMoveIntoTest = Math.min(this._availableObjects.length, desiredNumberOfResourcesToMoveIntoTest)\n      for (let i = 0; actualNumberOfResourcesToMoveIntoTest > i; i++) {\n        this._testOnBorrow()\n      }\n    }\n\n    // if we aren't testing-on-borrow then lets try to allocate what we can\n    if (this._config.testOnBorrow === false) {\n      const actualNumberOfResourcesToDispatch = Math.min(this._availableObjects.length, numWaitingClients)\n      for (let i = 0; actualNumberOfResourcesToDispatch > i; i++) {\n        this._dispatchResource()\n      }\n    }\n  }\n\n  /**\n   * Dispatches a pooledResource to the next waiting client (if any) else\n   * puts the PooledResource back on the available list\n   * @param  {[type]} pooledResource [description]\n   * @return {[type]}                [description]\n   */\n  _dispatchPooledResourceToNextWaitingClient (pooledResource) {\n    const clientResourceRequest = this._waitingClientsQueue.dequeue()\n    if (clientResourceRequest === undefined) {\n      // While we were away either all the waiting clients timed out\n      // or were somehow fulfilled. put our pooledResource back.\n      this._addPooledResourceToAvailableObjects(pooledResource)\n      // TODO: do need to trigger anything before we leave?\n      return false\n    }\n    const loan = new ResourceLoan(pooledResource, this._Promise)\n    this._resourceLoans.set(pooledResource.obj, loan)\n    pooledResource.allocate()\n    clientResourceRequest.resolve(pooledResource.obj)\n    return true\n  }\n\n  /**\n   * tracks on operation using given set\n   * handles adding/removing from the set and resolve/rejects the value/reason\n   * @param  {Promise} operation\n   * @param  {Set} set       Set holding operations\n   * @return {Promise}       Promise that resolves once operation has been removed from set\n   */\n  _trackOperation (operation, set) {\n    set.add(operation)\n\n    return operation.then((v) => {\n      set.delete(operation)\n      return this._Promise.resolve(v)\n    }, (e) => {\n      set.delete(operation)\n      return this._Promise.reject(e)\n    })\n  }\n\n  /**\n   * @private\n   */\n  _createResource () {\n    // An attempt to create a resource\n    const factoryPromise = this._factory.create()\n    const wrappedFactoryPromise = this._Promise.resolve(factoryPromise)\n\n    this._trackOperation(wrappedFactoryPromise, this._factoryCreateOperations)\n    .then((resource) => {\n      this._handleNewResource(resource)\n      return null\n    })\n    .catch((reason) => {\n      this.emit(FACTORY_CREATE_ERROR, reason)\n      this._dispense()\n    })\n  }\n\n  _handleNewResource (resource) {\n    const pooledResource = new PooledResource(resource)\n    this._allObjects.add(pooledResource)\n    // TODO: check we aren't exceding our maxPoolSize before doing\n    this._dispatchPooledResourceToNextWaitingClient(pooledResource)\n  }\n\n  /**\n   * @private\n   */\n  _ensureMinimum () {\n    if (this._draining === true) {\n      return\n    }\n    const minShortfall = this._config.min - this._count\n    for (let i = 0; i < minShortfall; i++) {\n      this._createResource()\n    }\n  }\n\n  _evict () {\n    const testsToRun = Math.min(this._config.numTestsPerEvictionRun, this._availableObjects.length)\n    const evictionConfig = {\n      softIdleTimeoutMillis: this._config.softIdleTimeoutMillis,\n      idleTimeoutMillis: this._config.idleTimeoutMillis,\n      min: this._config.min\n    }\n    for (let testsHaveRun = 0; testsHaveRun < testsToRun;) {\n      const iterationResult = this._evictionIterator.next()\n\n      // Safety check incase we could get stuck in infinite loop because we\n      // somehow emptied the array after chekcing it's length\n      if (iterationResult.done === true && this._availableObjects.length < 1) {\n        this._evictionIterator.reset()\n        return\n      }\n      // if this happens it should just mean we reached the end of the\n      // list and can reset the cursor.\n      if (iterationResult.done === true && this._availableObjects.length > 0) {\n        this._evictionIterator.reset()\n        break\n      }\n\n      const resource = iterationResult.value\n\n      const shouldEvict = this._evictor.evict(evictionConfig, resource, this._availableObjects.length)\n      testsHaveRun++\n\n      if (shouldEvict === true) {\n        // take it out of the _availableObjects list\n        this._evictionIterator.remove()\n        this._destroy(resource)\n      }\n    }\n  }\n\n  _scheduleEvictorRun () {\n    // Start eviction if set\n    if (this._config.evictionRunIntervalMillis > 0) {\n      this._scheduledEviction = setTimeout(() => {\n        this._evict()\n        this._scheduleEvictorRun()\n      }, this._config.evictionRunIntervalMillis)\n    }\n  }\n\n  _descheduleEvictorRun () {\n    clearTimeout(this._scheduledEviction)\n    this._scheduledEviction = null\n  }\n\n  start () {\n    if (this._draining === true) {\n      return\n    }\n    if (this._started === true) {\n      return\n    }\n    this._started = true\n    this._scheduleEvictorRun()\n    this._ensureMinimum()\n  }\n\n  /**\n   * Request a new resource. The callback will be called,\n   * when a new resource is available, passing the resource to the callback.\n   * TODO: should we add a seperate \"acquireWithPriority\" function\n   *\n   * @param {Function} callback\n   *   Callback function to be called after the acquire is successful.\n   *   If there is an error preventing the acquisition of resource, an error will\n   *   be the first parameter, else it will be null.\n   *   The acquired resource will be the second parameter.\n   *\n   * @param {Number} priority\n   *   Optional.  Integer between 0 and (priorityRange - 1).  Specifies the priority\n   *   of the caller if there are no available resources.  Lower numbers mean higher\n   *   priority.\n   *\n   * @returns {Promise}\n   */\n  acquire (priority) {\n    if (this._started === false && this._config.autostart === false) {\n      this.start()\n    }\n\n    if (this._draining) {\n      return this._Promise.reject(new Error('pool is draining and cannot accept work'))\n    }\n\n    // TODO: should we defer this check till after this event loop incase \"the situation\" changes in the meantime\n    if (this._config.maxWaitingClients !== undefined && this._waitingClientsQueue.length >= this._config.maxWaitingClients) {\n      return this._Promise.reject(new Error('max waitingClients count exceeded'))\n    }\n\n    const resourceRequest = new ResourceRequest(this._config.acquireTimeoutMillis, this._Promise)\n    this._waitingClientsQueue.enqueue(resourceRequest, priority)\n    this._dispense()\n\n    return resourceRequest.promise\n  }\n\n    /**\n     * Check if resource is currently on loan from the pool\n     *\n     * @param {Function} resource\n     *    Resource for checking.\n     *\n     * @returns {Boolean}\n     *  True if resource belongs to this pool and false otherwise\n     */\n  isBorrowedResource (resource) {\n    return this._resourceLoans.get(resource) !== undefined\n  }\n\n  /**\n   * Return the resource to the pool when it is no longer required.\n   *\n   * @param {Object} obj\n   *   The acquired object to be put back to the pool.\n   */\n  release (resource) {\n    // check for an outstanding loan\n    const loan = this._resourceLoans.get(resource)\n\n    if (loan === undefined) {\n      return this._Promise.reject(new Error('Resource not currently part of this pool'))\n    }\n\n    this._resourceLoans.delete(resource)\n    loan.resolve()\n    const pooledResource = loan.pooledResource\n\n    pooledResource.deallocate()\n    this._addPooledResourceToAvailableObjects(pooledResource)\n\n    this._dispense()\n    return this._Promise.resolve()\n  }\n\n  /**\n   * Request the resource to be destroyed. The factory's destroy handler\n   * will also be called.\n   *\n   * This should be called within an acquire() block as an alternative to release().\n   *\n   * @param {Object} resource\n   *   The acquired resource to be destoyed.\n   */\n  destroy (resource) {\n    // check for an outstanding loan\n    const loan = this._resourceLoans.get(resource)\n\n    if (loan === undefined) {\n      return this._Promise.reject(new Error('Resource not currently part of this pool'))\n    }\n\n    this._resourceLoans.delete(resource)\n    loan.resolve()\n    const pooledResource = loan.pooledResource\n\n    pooledResource.deallocate()\n    this._destroy(pooledResource)\n\n    this._dispense()\n    return this._Promise.resolve()\n  }\n\n  _addPooledResourceToAvailableObjects (pooledResource) {\n    pooledResource.idle()\n    if (this._config.fifo === true) {\n      this._availableObjects.push(pooledResource)\n    } else {\n      this._availableObjects.unshift(pooledResource)\n    }\n  }\n\n  /**\n   * Disallow any new acquire calls and let the request backlog dissapate.\n   * The Pool will no longer attempt to maintain a \"min\" number of resources\n   * and will only make new resources on demand.\n   * Resolves once all resource requests are fulfilled and all resources are returned to pool and available...\n   * Should probably be called \"drain work\"\n   * @returns {Promise}\n   */\n  drain () {\n    this._draining = true\n    return this.__allResourceRequestsSettled()\n      .then(() => {\n        return this.__allResourcesReturned()\n      })\n      .then(() => {\n        this._descheduleEvictorRun()\n      })\n  }\n\n  __allResourceRequestsSettled () {\n    if (this._waitingClientsQueue.length > 0) {\n      // wait for last waiting client to be settled\n      // FIXME: what if they can \"resolve\" out of order....?\n      return reflector(this._waitingClientsQueue.tail.promise)\n    }\n    return this._Promise.resolve()\n  }\n\n  // FIXME: this is a horrific mess\n  __allResourcesReturned () {\n    const ps = Array.from(this._resourceLoans.values())\n    .map((loan) => loan.promise)\n    .map(reflector)\n    return this._Promise.all(ps)\n  }\n\n  /**\n   * Forcibly destroys all available resources regardless of timeout.  Intended to be\n   * invoked as part of a drain.  Does not prevent the creation of new\n   * resources as a result of subsequent calls to acquire.\n   *\n   * Note that if factory.min > 0 and the pool isn't \"draining\", the pool will destroy all idle resources\n   * in the pool, but replace them with newly created resources up to the\n   * specified factory.min value.  If this is not desired, set factory.min\n   * to zero before calling clear()\n   *\n   */\n  clear () {\n    const reflectedCreatePromises = Array.from(this._factoryCreateOperations)\n    .map(reflector)\n\n    // wait for outstanding factory.create to complete\n    return this._Promise.all(reflectedCreatePromises)\n    .then(() => {\n      // Destroy existing resources\n      for (const resource of this._availableObjects) {\n        this._destroy(resource)\n      }\n      const reflectedDestroyPromises = Array.from(this._factoryDestroyOperations)\n      .map(reflector)\n      return this._Promise.all(reflectedDestroyPromises)\n    })\n  }\n\n  /**\n   * How many resources are available to allocated\n   * (includes resources that have not been tested and may faul validation)\n   * NOTE: internal for now as the name is awful and might not be useful to anyone\n   * @return {Number} number of resources the pool has to allocate\n   */\n  get _potentiallyAllocableResourceCount () {\n    return this._availableObjects.length +\n      this._testOnBorrowResources.size +\n      this._testOnReturnResources.size +\n      this._factoryCreateOperations.size\n  }\n\n  /**\n   * The combined count of the currently created objects and those in the\n   * process of being created\n   * Does NOT include resources in the process of being destroyed\n   * sort of legacy...\n   * @return {Number}\n   */\n  get _count () {\n    return this._allObjects.size + this._factoryCreateOperations.size\n  }\n\n  /**\n   * How many more resources does the pool have room for\n   * @return {Number} number of resources the pool could create before hitting any limits\n   */\n  get spareResourceCapacity () {\n    return this._config.max - (this._allObjects.size + this._factoryCreateOperations.size)\n  }\n\n  /**\n   * see _count above\n   * @return {Number} [description]\n   */\n  get size () {\n    return this._count\n  }\n\n  /**\n   * number of available resources\n   * @return {Number} [description]\n   */\n  get available () {\n    return this._availableObjects.length\n  }\n\n  /**\n   * number of resources that are currently acquired\n   * @return {[type]} [description]\n   */\n  get borrowed () {\n    return this._resourceLoans.size\n  }\n\n  /**\n   * number of waiting acquire calls\n   * @return {[type]} [description]\n   */\n  get pending () {\n    return this._waitingClientsQueue.length\n  }\n\n  /**\n   * maximum size of the pool\n   * @return {[type]} [description]\n   */\n  get max () {\n    return this._config.max\n  }\n\n  /**\n   * minimum size of the pool\n   * @return {[type]} [description]\n   */\n  get min () {\n    return this._config.min\n  }\n}\n\nmodule.exports = Pool\n","map":{"mappings":[{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/generic-pool/lib/Pool.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}}],"sources":{"../node_modules/generic-pool/lib/Pool.js":"'use strict'\n\nconst EventEmitter = require('events').EventEmitter\n\nconst factoryValidator = require('./factoryValidator')\nconst PoolOptions = require('./PoolOptions')\nconst ResourceRequest = require('./ResourceRequest')\nconst ResourceLoan = require('./ResourceLoan')\nconst PooledResource = require('./PooledResource')\n\nconst reflector = require('./utils').reflector\n\n/**\n * TODO: move me\n */\nconst FACTORY_CREATE_ERROR = 'factoryCreateError'\nconst FACTORY_DESTROY_ERROR = 'factoryDestroyError'\n\nclass Pool extends EventEmitter {\n\n  /**\n   * Generate an Object pool with a specified `factory` and `config`.\n   *\n   * @param {Object} factory\n   *   Factory to be used for generating and destroying the items.\n   * @param {Function} factory.create\n   *   Should create the item to be acquired,\n   *   and call it's first callback argument with the generated item as it's argument.\n   * @param {Function} factory.destroy\n   *   Should gently close any resources that the item is using.\n   *   Called before the items is destroyed.\n   * @param {Function} factory.validate\n   *   Test if a resource is still valid .Should return a promise that resolves to a boolean, true if resource is still valid and false\n   *   If it should be removed from pool.\n   */\n  constructor (Evictor, Deque, PriorityQueue, factory, options) {\n    super()\n\n    factoryValidator(factory)\n\n    this._config = new PoolOptions(options)\n\n    // TODO: fix up this ugly glue-ing\n    this._Promise = this._config.Promise\n\n    this._factory = factory\n    this._draining = false\n    this._started = false\n    /**\n     * Holds waiting clients\n     * @type {PriorityQueue}\n     */\n    this._waitingClientsQueue = new PriorityQueue(this._config.priorityRange)\n\n    /**\n     * Collection of promises for resource creation calls made by the pool to factory.create\n     * @type {Set}\n     */\n    this._factoryCreateOperations = new Set()\n\n    /**\n     * Collection of promises for resource destruction calls made by the pool to factory.destroy\n     * @type {Set}\n     */\n    this._factoryDestroyOperations = new Set()\n\n    /**\n     * A queue/stack of pooledResources awaiting acquisition\n     * TODO: replace with LinkedList backed array\n     * @type {Array}\n     */\n    this._availableObjects = new Deque()\n\n    /**\n     * Collection of references for any resource that are undergoing validation before being acquired\n     * @type {Set}\n     */\n    this._testOnBorrowResources = new Set()\n\n    /**\n     * Collection of references for any resource that are undergoing validation before being returned\n     * @type {Set}\n     */\n    this._testOnReturnResources = new Set()\n\n    /**\n     * Collection of promises for any validations currently in process\n     * @type {Set}\n     */\n    this._validationOperations = new Set()\n\n    /**\n     * All objects associated with this pool in any state (except destroyed)\n     * @type {PooledResourceCollection}\n     */\n    this._allObjects = new Set()\n\n    /**\n     * Loans keyed by the borrowed resource\n     * @type {Map}\n     */\n    this._resourceLoans = new Map()\n\n    /**\n     * Infinitely looping iterator over available object\n     * @type {DLLArrayIterator}\n     */\n    this._evictionIterator = this._availableObjects.iterator()\n\n    this._evictor = new Evictor()\n\n    /**\n     * handle for setTimeout for next eviction run\n     * @type {[type]}\n     */\n    this._scheduledEviction = null\n\n    // create initial resources (if factory.min > 0)\n    if (this._config.autostart === true) {\n      this.start()\n    }\n  }\n\n  _destroy (pooledResource) {\n    // FIXME: do we need another state for \"in destruction\"?\n    pooledResource.invalidate()\n    this._allObjects.delete(pooledResource)\n    // NOTE: this maybe very bad promise usage?\n    const destroyPromise = this._factory.destroy(pooledResource.obj)\n    const wrappedDestroyPromise = this._Promise.resolve(destroyPromise)\n\n    this._trackOperation(wrappedDestroyPromise, this._factoryDestroyOperations)\n    .catch((reason) => {\n      this.emit(FACTORY_DESTROY_ERROR, reason)\n    })\n\n    // TODO: maybe ensuring minimum pool size should live outside here\n    this._ensureMinimum()\n  }\n\n  /**\n   * Attempt to move an available resource into test and then onto a waiting client\n   * @return {Boolean} could we move an available resource into test\n   */\n  _testOnBorrow () {\n    if (this._availableObjects.length < 1) {\n      return false\n    }\n\n    const pooledResource = this._availableObjects.shift()\n    // Mark the resource as in test\n    pooledResource.test()\n    this._testOnBorrowResources.add(pooledResource)\n    const validationPromise = this._factory.validate(pooledResource.obj)\n    const wrappedValidationPromise = this._Promise.resolve(validationPromise)\n\n    this._trackOperation(wrappedValidationPromise, this._validationOperations)\n    .then((isValid) => {\n      this._testOnBorrowResources.delete(pooledResource)\n\n      if (isValid === false) {\n        pooledResource.invalidate()\n        this._destroy(pooledResource)\n        this._dispense()\n        return\n      }\n      this._dispatchPooledResourceToNextWaitingClient(pooledResource)\n    })\n\n    return true\n  }\n\n  /**\n   * Attempt to move an available resource to a waiting client\n   * @return {Boolean} [description]\n   */\n  _dispatchResource () {\n    if (this._availableObjects.length < 1) {\n      return false\n    }\n\n    const pooledResource = this._availableObjects.shift()\n    this._dispatchPooledResourceToNextWaitingClient(pooledResource)\n    return\n  }\n\n  /**\n   * Attempt to resolve an outstanding resource request using an available resource from\n   * the pool, or creating new ones\n   *\n   * @private\n   */\n  _dispense () {\n    /**\n     * Local variables for ease of reading/writing\n     * these don't (shouldn't) change across the execution of this fn\n     */\n    const numWaitingClients = this._waitingClientsQueue.length\n\n    // If there aren't any waiting requests then there is nothing to do\n    // so lets short-circuit\n    if (numWaitingClients < 1) {\n      return\n    }\n\n    const resourceShortfall = numWaitingClients - this._potentiallyAllocableResourceCount\n\n    const actualNumberOfResourcesToCreate = Math.min(this.spareResourceCapacity, resourceShortfall)\n    for (let i = 0; actualNumberOfResourcesToCreate > i; i++) {\n      this._createResource()\n    }\n\n    // If we are doing test-on-borrow see how many more resources need to be moved into test\n    // to help satisfy waitingClients\n    if (this._config.testOnBorrow === true) {\n      // how many available resources do we need to shift into test\n      const desiredNumberOfResourcesToMoveIntoTest = numWaitingClients - this._testOnBorrowResources.size\n      const actualNumberOfResourcesToMoveIntoTest = Math.min(this._availableObjects.length, desiredNumberOfResourcesToMoveIntoTest)\n      for (let i = 0; actualNumberOfResourcesToMoveIntoTest > i; i++) {\n        this._testOnBorrow()\n      }\n    }\n\n    // if we aren't testing-on-borrow then lets try to allocate what we can\n    if (this._config.testOnBorrow === false) {\n      const actualNumberOfResourcesToDispatch = Math.min(this._availableObjects.length, numWaitingClients)\n      for (let i = 0; actualNumberOfResourcesToDispatch > i; i++) {\n        this._dispatchResource()\n      }\n    }\n  }\n\n  /**\n   * Dispatches a pooledResource to the next waiting client (if any) else\n   * puts the PooledResource back on the available list\n   * @param  {[type]} pooledResource [description]\n   * @return {[type]}                [description]\n   */\n  _dispatchPooledResourceToNextWaitingClient (pooledResource) {\n    const clientResourceRequest = this._waitingClientsQueue.dequeue()\n    if (clientResourceRequest === undefined) {\n      // While we were away either all the waiting clients timed out\n      // or were somehow fulfilled. put our pooledResource back.\n      this._addPooledResourceToAvailableObjects(pooledResource)\n      // TODO: do need to trigger anything before we leave?\n      return false\n    }\n    const loan = new ResourceLoan(pooledResource, this._Promise)\n    this._resourceLoans.set(pooledResource.obj, loan)\n    pooledResource.allocate()\n    clientResourceRequest.resolve(pooledResource.obj)\n    return true\n  }\n\n  /**\n   * tracks on operation using given set\n   * handles adding/removing from the set and resolve/rejects the value/reason\n   * @param  {Promise} operation\n   * @param  {Set} set       Set holding operations\n   * @return {Promise}       Promise that resolves once operation has been removed from set\n   */\n  _trackOperation (operation, set) {\n    set.add(operation)\n\n    return operation.then((v) => {\n      set.delete(operation)\n      return this._Promise.resolve(v)\n    }, (e) => {\n      set.delete(operation)\n      return this._Promise.reject(e)\n    })\n  }\n\n  /**\n   * @private\n   */\n  _createResource () {\n    // An attempt to create a resource\n    const factoryPromise = this._factory.create()\n    const wrappedFactoryPromise = this._Promise.resolve(factoryPromise)\n\n    this._trackOperation(wrappedFactoryPromise, this._factoryCreateOperations)\n    .then((resource) => {\n      this._handleNewResource(resource)\n      return null\n    })\n    .catch((reason) => {\n      this.emit(FACTORY_CREATE_ERROR, reason)\n      this._dispense()\n    })\n  }\n\n  _handleNewResource (resource) {\n    const pooledResource = new PooledResource(resource)\n    this._allObjects.add(pooledResource)\n    // TODO: check we aren't exceding our maxPoolSize before doing\n    this._dispatchPooledResourceToNextWaitingClient(pooledResource)\n  }\n\n  /**\n   * @private\n   */\n  _ensureMinimum () {\n    if (this._draining === true) {\n      return\n    }\n    const minShortfall = this._config.min - this._count\n    for (let i = 0; i < minShortfall; i++) {\n      this._createResource()\n    }\n  }\n\n  _evict () {\n    const testsToRun = Math.min(this._config.numTestsPerEvictionRun, this._availableObjects.length)\n    const evictionConfig = {\n      softIdleTimeoutMillis: this._config.softIdleTimeoutMillis,\n      idleTimeoutMillis: this._config.idleTimeoutMillis,\n      min: this._config.min\n    }\n    for (let testsHaveRun = 0; testsHaveRun < testsToRun;) {\n      const iterationResult = this._evictionIterator.next()\n\n      // Safety check incase we could get stuck in infinite loop because we\n      // somehow emptied the array after chekcing it's length\n      if (iterationResult.done === true && this._availableObjects.length < 1) {\n        this._evictionIterator.reset()\n        return\n      }\n      // if this happens it should just mean we reached the end of the\n      // list and can reset the cursor.\n      if (iterationResult.done === true && this._availableObjects.length > 0) {\n        this._evictionIterator.reset()\n        break\n      }\n\n      const resource = iterationResult.value\n\n      const shouldEvict = this._evictor.evict(evictionConfig, resource, this._availableObjects.length)\n      testsHaveRun++\n\n      if (shouldEvict === true) {\n        // take it out of the _availableObjects list\n        this._evictionIterator.remove()\n        this._destroy(resource)\n      }\n    }\n  }\n\n  _scheduleEvictorRun () {\n    // Start eviction if set\n    if (this._config.evictionRunIntervalMillis > 0) {\n      this._scheduledEviction = setTimeout(() => {\n        this._evict()\n        this._scheduleEvictorRun()\n      }, this._config.evictionRunIntervalMillis)\n    }\n  }\n\n  _descheduleEvictorRun () {\n    clearTimeout(this._scheduledEviction)\n    this._scheduledEviction = null\n  }\n\n  start () {\n    if (this._draining === true) {\n      return\n    }\n    if (this._started === true) {\n      return\n    }\n    this._started = true\n    this._scheduleEvictorRun()\n    this._ensureMinimum()\n  }\n\n  /**\n   * Request a new resource. The callback will be called,\n   * when a new resource is available, passing the resource to the callback.\n   * TODO: should we add a seperate \"acquireWithPriority\" function\n   *\n   * @param {Function} callback\n   *   Callback function to be called after the acquire is successful.\n   *   If there is an error preventing the acquisition of resource, an error will\n   *   be the first parameter, else it will be null.\n   *   The acquired resource will be the second parameter.\n   *\n   * @param {Number} priority\n   *   Optional.  Integer between 0 and (priorityRange - 1).  Specifies the priority\n   *   of the caller if there are no available resources.  Lower numbers mean higher\n   *   priority.\n   *\n   * @returns {Promise}\n   */\n  acquire (priority) {\n    if (this._started === false && this._config.autostart === false) {\n      this.start()\n    }\n\n    if (this._draining) {\n      return this._Promise.reject(new Error('pool is draining and cannot accept work'))\n    }\n\n    // TODO: should we defer this check till after this event loop incase \"the situation\" changes in the meantime\n    if (this._config.maxWaitingClients !== undefined && this._waitingClientsQueue.length >= this._config.maxWaitingClients) {\n      return this._Promise.reject(new Error('max waitingClients count exceeded'))\n    }\n\n    const resourceRequest = new ResourceRequest(this._config.acquireTimeoutMillis, this._Promise)\n    this._waitingClientsQueue.enqueue(resourceRequest, priority)\n    this._dispense()\n\n    return resourceRequest.promise\n  }\n\n    /**\n     * Check if resource is currently on loan from the pool\n     *\n     * @param {Function} resource\n     *    Resource for checking.\n     *\n     * @returns {Boolean}\n     *  True if resource belongs to this pool and false otherwise\n     */\n  isBorrowedResource (resource) {\n    return this._resourceLoans.get(resource) !== undefined\n  }\n\n  /**\n   * Return the resource to the pool when it is no longer required.\n   *\n   * @param {Object} obj\n   *   The acquired object to be put back to the pool.\n   */\n  release (resource) {\n    // check for an outstanding loan\n    const loan = this._resourceLoans.get(resource)\n\n    if (loan === undefined) {\n      return this._Promise.reject(new Error('Resource not currently part of this pool'))\n    }\n\n    this._resourceLoans.delete(resource)\n    loan.resolve()\n    const pooledResource = loan.pooledResource\n\n    pooledResource.deallocate()\n    this._addPooledResourceToAvailableObjects(pooledResource)\n\n    this._dispense()\n    return this._Promise.resolve()\n  }\n\n  /**\n   * Request the resource to be destroyed. The factory's destroy handler\n   * will also be called.\n   *\n   * This should be called within an acquire() block as an alternative to release().\n   *\n   * @param {Object} resource\n   *   The acquired resource to be destoyed.\n   */\n  destroy (resource) {\n    // check for an outstanding loan\n    const loan = this._resourceLoans.get(resource)\n\n    if (loan === undefined) {\n      return this._Promise.reject(new Error('Resource not currently part of this pool'))\n    }\n\n    this._resourceLoans.delete(resource)\n    loan.resolve()\n    const pooledResource = loan.pooledResource\n\n    pooledResource.deallocate()\n    this._destroy(pooledResource)\n\n    this._dispense()\n    return this._Promise.resolve()\n  }\n\n  _addPooledResourceToAvailableObjects (pooledResource) {\n    pooledResource.idle()\n    if (this._config.fifo === true) {\n      this._availableObjects.push(pooledResource)\n    } else {\n      this._availableObjects.unshift(pooledResource)\n    }\n  }\n\n  /**\n   * Disallow any new acquire calls and let the request backlog dissapate.\n   * The Pool will no longer attempt to maintain a \"min\" number of resources\n   * and will only make new resources on demand.\n   * Resolves once all resource requests are fulfilled and all resources are returned to pool and available...\n   * Should probably be called \"drain work\"\n   * @returns {Promise}\n   */\n  drain () {\n    this._draining = true\n    return this.__allResourceRequestsSettled()\n      .then(() => {\n        return this.__allResourcesReturned()\n      })\n      .then(() => {\n        this._descheduleEvictorRun()\n      })\n  }\n\n  __allResourceRequestsSettled () {\n    if (this._waitingClientsQueue.length > 0) {\n      // wait for last waiting client to be settled\n      // FIXME: what if they can \"resolve\" out of order....?\n      return reflector(this._waitingClientsQueue.tail.promise)\n    }\n    return this._Promise.resolve()\n  }\n\n  // FIXME: this is a horrific mess\n  __allResourcesReturned () {\n    const ps = Array.from(this._resourceLoans.values())\n    .map((loan) => loan.promise)\n    .map(reflector)\n    return this._Promise.all(ps)\n  }\n\n  /**\n   * Forcibly destroys all available resources regardless of timeout.  Intended to be\n   * invoked as part of a drain.  Does not prevent the creation of new\n   * resources as a result of subsequent calls to acquire.\n   *\n   * Note that if factory.min > 0 and the pool isn't \"draining\", the pool will destroy all idle resources\n   * in the pool, but replace them with newly created resources up to the\n   * specified factory.min value.  If this is not desired, set factory.min\n   * to zero before calling clear()\n   *\n   */\n  clear () {\n    const reflectedCreatePromises = Array.from(this._factoryCreateOperations)\n    .map(reflector)\n\n    // wait for outstanding factory.create to complete\n    return this._Promise.all(reflectedCreatePromises)\n    .then(() => {\n      // Destroy existing resources\n      for (const resource of this._availableObjects) {\n        this._destroy(resource)\n      }\n      const reflectedDestroyPromises = Array.from(this._factoryDestroyOperations)\n      .map(reflector)\n      return this._Promise.all(reflectedDestroyPromises)\n    })\n  }\n\n  /**\n   * How many resources are available to allocated\n   * (includes resources that have not been tested and may faul validation)\n   * NOTE: internal for now as the name is awful and might not be useful to anyone\n   * @return {Number} number of resources the pool has to allocate\n   */\n  get _potentiallyAllocableResourceCount () {\n    return this._availableObjects.length +\n      this._testOnBorrowResources.size +\n      this._testOnReturnResources.size +\n      this._factoryCreateOperations.size\n  }\n\n  /**\n   * The combined count of the currently created objects and those in the\n   * process of being created\n   * Does NOT include resources in the process of being destroyed\n   * sort of legacy...\n   * @return {Number}\n   */\n  get _count () {\n    return this._allObjects.size + this._factoryCreateOperations.size\n  }\n\n  /**\n   * How many more resources does the pool have room for\n   * @return {Number} number of resources the pool could create before hitting any limits\n   */\n  get spareResourceCapacity () {\n    return this._config.max - (this._allObjects.size + this._factoryCreateOperations.size)\n  }\n\n  /**\n   * see _count above\n   * @return {Number} [description]\n   */\n  get size () {\n    return this._count\n  }\n\n  /**\n   * number of available resources\n   * @return {Number} [description]\n   */\n  get available () {\n    return this._availableObjects.length\n  }\n\n  /**\n   * number of resources that are currently acquired\n   * @return {[type]} [description]\n   */\n  get borrowed () {\n    return this._resourceLoans.size\n  }\n\n  /**\n   * number of waiting acquire calls\n   * @return {[type]} [description]\n   */\n  get pending () {\n    return this._waitingClientsQueue.length\n  }\n\n  /**\n   * maximum size of the pool\n   * @return {[type]} [description]\n   */\n  get max () {\n    return this._config.max\n  }\n\n  /**\n   * minimum size of the pool\n   * @return {[type]} [description]\n   */\n  get min () {\n    return this._config.min\n  }\n}\n\nmodule.exports = Pool\n"},"lineCount":636}},"hash":"66388d76d604d639044c7cdddc1aed59","cacheData":{"env":{}}}