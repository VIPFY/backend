{"dependencies":[{"name":"url","loc":{"line":1,"column":18}},{"name":"http","loc":{"line":2,"column":19}},{"name":"https","loc":{"line":3,"column":20}},{"name":"semver","loc":{"line":4,"column":21}},{"name":"util","loc":{"line":5,"column":23}},{"name":"process"}],"generated":{"js":"var process = require(\"process\");\nvar url = require('url');\nvar http = require('http');\nvar https = require('https');\nvar semver = require('semver');\nvar inherits = require('util').inherits;\n\n\n// we only need to patch the `http.request()` and\n// `http.ClientRequest` on older versions of Node.js\nif (semver.lt(process.version, '0.11.8')) {\n  // subclass the native ClientRequest to include the\n  // passed in `options` object.\n  http.ClientRequest = (function (_ClientRequest) {\n    function ClientRequest (options, cb) {\n      this._options = options;\n      _ClientRequest.call(this, options, cb);\n    }\n    inherits(ClientRequest, _ClientRequest);\n\n    return ClientRequest;\n  })(http.ClientRequest);\n\n\n  // need to re-define the `request()` method, since on node v0.8/v0.10\n  // the closure-local ClientRequest is used, rather than the monkey\n  // patched version we have created here.\n  http.request = (function (request) {\n    return function (options, cb) {\n      if (typeof options === 'string') {\n        options = url.parse(options);\n      }\n      if (options.protocol && options.protocol !== 'http:') {\n        throw new Error('Protocol:' + options.protocol + ' not supported.');\n      }\n      return new http.ClientRequest(options, cb);\n    };\n  })(http.request);\n}\n\n\n// this currently needs to be applied to all Node.js versions\n// (v0.8.x, v0.10.x, v0.12.x), in order to determine if the `req`\n// is an HTTP or HTTPS request. There is currently no PR attempting\n// to move this property upstream.\nhttps.request = (function (request) {\n  return function (options, cb) {\n    if (typeof options === 'string') {\n      options = url.parse(options);\n    }\n    if (null == options.port) options.port = 443;\n    options.secureEndpoint = true;\n    return request.call(https, options, cb);\n  };\n})(https.request);\n","map":{"mappings":[{"source":"../node_modules/agent-base/patch-core.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/agent-base/patch-core.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}}],"sources":{"../node_modules/agent-base/patch-core.js":"var url = require('url');\nvar http = require('http');\nvar https = require('https');\nvar semver = require('semver');\nvar inherits = require('util').inherits;\n\n\n// we only need to patch the `http.request()` and\n// `http.ClientRequest` on older versions of Node.js\nif (semver.lt(process.version, '0.11.8')) {\n  // subclass the native ClientRequest to include the\n  // passed in `options` object.\n  http.ClientRequest = (function (_ClientRequest) {\n    function ClientRequest (options, cb) {\n      this._options = options;\n      _ClientRequest.call(this, options, cb);\n    }\n    inherits(ClientRequest, _ClientRequest);\n\n    return ClientRequest;\n  })(http.ClientRequest);\n\n\n  // need to re-define the `request()` method, since on node v0.8/v0.10\n  // the closure-local ClientRequest is used, rather than the monkey\n  // patched version we have created here.\n  http.request = (function (request) {\n    return function (options, cb) {\n      if (typeof options === 'string') {\n        options = url.parse(options);\n      }\n      if (options.protocol && options.protocol !== 'http:') {\n        throw new Error('Protocol:' + options.protocol + ' not supported.');\n      }\n      return new http.ClientRequest(options, cb);\n    };\n  })(http.request);\n}\n\n\n// this currently needs to be applied to all Node.js versions\n// (v0.8.x, v0.10.x, v0.12.x), in order to determine if the `req`\n// is an HTTP or HTTPS request. There is currently no PR attempting\n// to move this property upstream.\nhttps.request = (function (request) {\n  return function (options, cb) {\n    if (typeof options === 'string') {\n      options = url.parse(options);\n    }\n    if (null == options.port) options.port = 443;\n    options.secureEndpoint = true;\n    return request.call(https, options, cb);\n  };\n})(https.request);\n"},"lineCount":56}},"hash":"e0b981dbbab5390a3ce2c284d2964b2a","cacheData":{"env":{}}}