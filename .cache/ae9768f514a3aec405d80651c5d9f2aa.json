{"dependencies":[{"name":"./DoublyLinkedList","loc":{"line":3,"column":33}},{"name":"./Deque","loc":{"line":4,"column":22}}],"generated":{"js":"'use strict'\n\nconst DoublyLinkedList = require('./DoublyLinkedList')\nconst Deque = require('./Deque')\n\n/**\n * Sort of a internal queue for holding the waiting\n * resource requets for a given \"priority\".\n * Also handles managing timeouts rejections on items (is this the best place for this?)\n * This is the last point where we know which queue a resourceRequest is in\n *\n */\nclass Queue extends Deque {\n  /**\n   * Adds the obj to the end of the list for this slot\n   * we completely override the parent method because we need access to the\n   * node for our rejection handler\n   * @param {[type]} item [description]\n   */\n  push (resourceRequest) {\n    const node = DoublyLinkedList.createNode(resourceRequest)\n    resourceRequest.promise.catch(this._createTimeoutRejectionHandler(node))\n    this._list.insertEnd(node)\n  }\n\n  _createTimeoutRejectionHandler (node) {\n    return (reason) => {\n      if (reason.name === 'TimeoutError') {\n        this._list.remove(node)\n      }\n    }\n  }\n}\n\nmodule.exports = Queue\n","map":{"mappings":[{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/generic-pool/lib/Queue.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}}],"sources":{"../node_modules/generic-pool/lib/Queue.js":"'use strict'\n\nconst DoublyLinkedList = require('./DoublyLinkedList')\nconst Deque = require('./Deque')\n\n/**\n * Sort of a internal queue for holding the waiting\n * resource requets for a given \"priority\".\n * Also handles managing timeouts rejections on items (is this the best place for this?)\n * This is the last point where we know which queue a resourceRequest is in\n *\n */\nclass Queue extends Deque {\n  /**\n   * Adds the obj to the end of the list for this slot\n   * we completely override the parent method because we need access to the\n   * node for our rejection handler\n   * @param {[type]} item [description]\n   */\n  push (resourceRequest) {\n    const node = DoublyLinkedList.createNode(resourceRequest)\n    resourceRequest.promise.catch(this._createTimeoutRejectionHandler(node))\n    this._list.insertEnd(node)\n  }\n\n  _createTimeoutRejectionHandler (node) {\n    return (reason) => {\n      if (reason.name === 'TimeoutError') {\n        this._list.remove(node)\n      }\n    }\n  }\n}\n\nmodule.exports = Queue\n"},"lineCount":36}},"hash":"e4c7c6b0d68721df7153b7e678d81f4b","cacheData":{"env":{}}}