{"dependencies":[{"name":"/home/user/vipfy-server/.babelrc","includedInParent":true,"mtime":1516814375768}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar types = exports.types = \"\\n  type App {\\n    id: Int!\\n    name: String!\\n    applogo: String\\n    description: String\\n    developerid: Int!\\n    modaltype: Int\\n    versionnumber: String\\n    updatedate: Date\\n    teaserdescription: String\\n    ownpage: String\\n    supportphone: String\\n    supportwebsite: String\\n  }\\n\\n  type AppImage {\\n    id: Int!\\n    appid: Int!\\n    link: String\\n    sequence: Int\\n  }\\n\\n# A Developer is the creator of an App\\n  type Developer {\\n    id: Int!\\n    name: String!\\n    website: String\\n    legalwebsite: String\\n    bankaccount: String\\n  }\\n\\n# Payment plans from the Apps\\n  type Plan {\\n    id: Int!\\n    appid: Int!\\n    app: App!\\n    description: String\\n    renewalplan: Int\\n    period: Int\\n    numlicences: Int\\n    price: Float\\n    currency: String\\n    name: String\\n    activefrom: String\\n    activeuntil: String\\n    promo: Int\\n    promovipfy: Float\\n    promodeveloper: Float\\n    promoname: String\\n    changeafter: Int\\n    changeplan: Int\\n  }\\n\";\n\nvar queries = exports.queries = \"\\n  allApps(first: Int): [App]!\\n  fetchApp(name: String!): App\\n\\n  allAppImages: [AppImage]!\\n  fetchAppImages(appid: Int!): [AppImage!]\\n\\n  allDevelopers: [Developer]!\\n  fetchDeveloper(id: Int!): Developer\\n\\n  fetchPlans(appid: Int!): [Plan]!\\n  fetchPrice(appid: Int!): Plan!\\n\";\n\nvar mutations = exports.mutations = \"\\n\\n\";","map":{"mappings":[{"generated":{"line":6,"column":0},"source":"schemas/App.js","original":{"line":1,"column":7}},{"name":"types","generated":{"line":6,"column":4},"source":"schemas/App.js","original":{"line":1,"column":13}},{"generated":{"line":6,"column":1018},"source":"schemas/App.js","original":{"line":1,"column":7}},{"generated":{"line":8,"column":0},"source":"schemas/App.js","original":{"line":56,"column":7}},{"name":"queries","generated":{"line":8,"column":4},"source":"schemas/App.js","original":{"line":56,"column":13}},{"generated":{"line":8,"column":318},"source":"schemas/App.js","original":{"line":56,"column":7}},{"generated":{"line":10,"column":0},"source":"schemas/App.js","original":{"line":70,"column":7}},{"name":"mutations","generated":{"line":10,"column":4},"source":"schemas/App.js","original":{"line":70,"column":13}},{"generated":{"line":10,"column":42},"source":"schemas/App.js","original":{"line":70,"column":7}}],"sources":{"schemas/App.js":"export const types = `\n  type App {\n    id: Int!\n    name: String!\n    applogo: String\n    description: String\n    developerid: Int!\n    modaltype: Int\n    versionnumber: String\n    updatedate: Date\n    teaserdescription: String\n    ownpage: String\n    supportphone: String\n    supportwebsite: String\n  }\n\n  type AppImage {\n    id: Int!\n    appid: Int!\n    link: String\n    sequence: Int\n  }\n\n# A Developer is the creator of an App\n  type Developer {\n    id: Int!\n    name: String!\n    website: String\n    legalwebsite: String\n    bankaccount: String\n  }\n\n# Payment plans from the Apps\n  type Plan {\n    id: Int!\n    appid: Int!\n    app: App!\n    description: String\n    renewalplan: Int\n    period: Int\n    numlicences: Int\n    price: Float\n    currency: String\n    name: String\n    activefrom: String\n    activeuntil: String\n    promo: Int\n    promovipfy: Float\n    promodeveloper: Float\n    promoname: String\n    changeafter: Int\n    changeplan: Int\n  }\n`;\n\nexport const queries = `\n  allApps(first: Int): [App]!\n  fetchApp(name: String!): App\n\n  allAppImages: [AppImage]!\n  fetchAppImages(appid: Int!): [AppImage!]\n\n  allDevelopers: [Developer]!\n  fetchDeveloper(id: Int!): Developer\n\n  fetchPlans(appid: Int!): [Plan]!\n  fetchPrice(appid: Int!): Plan!\n`;\n\nexport const mutations = `\n\n`;\n"},"lineCount":null}},"hash":"637f711252b1c83163cc1b974f2f373d","cacheData":{"env":{}}}