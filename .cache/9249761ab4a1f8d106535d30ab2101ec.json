{"dependencies":[],"generated":{"js":"\n// expose `selectn`\n\nmodule.exports = selectn;\n\n/**\n * Select n-levels deep into an object given a dot/bracket-notation query.\n * If partially applied, returns a function accepting the second argument.\n *\n * ### Examples:\n *\n *      selectn('name.first', contact);\n *\n *      selectn('addresses[0].street', contact);\n *\n *      contacts.map(selectn('name.first'));\n *\n * @param  {String} query\n * dot/bracket-notation query string\n *\n * @param  {Object} object\n * object to access\n *\n * @return {Function}\n * accessor function that accepts an object to be queried\n */\n\nfunction selectn(query) {\n  var parts;\n\n  // normalize query to `.property` access (i.e. `a.b[0]` becomes `a.b.0`)\n  query = query.replace(/\\[(\\d+)\\]/g, '.$1');\n  parts = query.split('.');\n\n  /**\n   * Accessor function that accepts an object to be queried\n   *\n   * @private\n   *\n   * @param  {Object} object\n   * object to access\n   *\n   * @return {Mixed}\n   * value at given reference or undefined if it does not exist\n   */\n\n  function accessor(object) {\n    var ref = object || (1, eval)('this');\n    var len = parts.length;\n    var idx = 0;\n\n    // iteratively save each segment's reference\n    for (; idx < len; idx += 1) {\n      if (ref) ref = ref[parts[idx]];\n    }\n\n    return ref;\n  }\n\n  // curry accessor function allowing partial application\n  return arguments.length > 1\n       ? accessor(arguments[1]) \n       : accessor;\n}\n\n","map":{"mappings":[{"source":"../node_modules/selectn/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/selectn/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}}],"sources":{"../node_modules/selectn/index.js":"\n// expose `selectn`\n\nmodule.exports = selectn;\n\n/**\n * Select n-levels deep into an object given a dot/bracket-notation query.\n * If partially applied, returns a function accepting the second argument.\n *\n * ### Examples:\n *\n *      selectn('name.first', contact);\n *\n *      selectn('addresses[0].street', contact);\n *\n *      contacts.map(selectn('name.first'));\n *\n * @param  {String} query\n * dot/bracket-notation query string\n *\n * @param  {Object} object\n * object to access\n *\n * @return {Function}\n * accessor function that accepts an object to be queried\n */\n\nfunction selectn(query) {\n  var parts;\n\n  // normalize query to `.property` access (i.e. `a.b[0]` becomes `a.b.0`)\n  query = query.replace(/\\[(\\d+)\\]/g, '.$1');\n  parts = query.split('.');\n\n  /**\n   * Accessor function that accepts an object to be queried\n   *\n   * @private\n   *\n   * @param  {Object} object\n   * object to access\n   *\n   * @return {Mixed}\n   * value at given reference or undefined if it does not exist\n   */\n\n  function accessor(object) {\n    var ref = object || (1, eval)('this');\n    var len = parts.length;\n    var idx = 0;\n\n    // iteratively save each segment's reference\n    for (; idx < len; idx += 1) {\n      if (ref) ref = ref[parts[idx]];\n    }\n\n    return ref;\n  }\n\n  // curry accessor function allowing partial application\n  return arguments.length > 1\n       ? accessor(arguments[1]) \n       : accessor;\n}\n\n"},"lineCount":66}},"hash":"3d3d10fc738f71cc1184c231c66f9bd2","cacheData":{"env":{}}}